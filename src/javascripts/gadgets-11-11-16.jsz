(function(g) {
    var e = function(a, b) {
            return new e.init(a, b)
        },
        c = g.document,
        a = null,
        h = !1,
        f = [],
        b = /^#([\w-]+)$/;
    g.wisDOM = e;
    if (typeof g.$ == "undefined" || g.$._wdVersion <= 2.0111031151E7) g.$ = g.wisDOM;
    g.$w = e;
    e.init = function(f, d) {
        if (!f) return this.length = 0, this;
        if (f.nodeType) return this[0] = f, this.length = 1, this;
        if (typeof f == "string") {
            if (f == "body") return a === null && (a = c.getElementsByTagName("body")[0]), this[0] = a, this.length = 1, this;
            var h = b.exec(f);
            if (h !== null) {
                h = c.getElementById(h[1]);
                this.length = 0;
                if (h !== null) this[0] =
                    h, this.length = 1;
                this.selector = f;
                return this
            }
            var h = g.wisDOM._int.selectorEngine.search(f),
                l = h.length;
            this.length = l;
            for (var m = 0; m < l; m++) this[m] = h[m];
            return this
        }
        if (typeof f == "object") {
            if (typeof f._wdVersion !== "undefined") return f;
            if (f === g || f === c) return this[0] = f, this.length = 1, this;
            if (typeof f._wdVersion == "undefined") {
                h = e._int.dombuilder(f);
                this.length = h.length;
                this._constructed = 1;
                l = h.length;
                for (m = 0; m < l; m++) this[m] = h[m];
                return this
            }
        }
        if (typeof f == "function")
            if (typeof d !== "number") e.ready(f);
            else if (typeof d ==
            "number") return setTimeout(function() {
            return f()
        }, d)
    };
    e.fn = {};
    e.init.prototype = e.fn;
    e._wdVersion = e.fn._wdVersion = 2.0111031151E7;
    e._int = {};
    e.push = e.fn.push = function(a) {
        var b = this.length;
        a.nodeType && (this[b] = a, this.length++);
        if (typeof a._wdVersion != "undefined") {
            for (var f = b + a.length, d = b; d < f; d++) this[d] = a[d - b];
            this.length = f
        }
        return this
    };
    e.fn.splice = function() {
        return this
    };
    e.ready = function(a) {
        h === !0 || c.readyState == "complete" ? a.call(g) : c.addEventListener ? c.addEventListener("DOMContentLoaded", a, !1) : c.attachEvent &&
            f.push(a)
    };
    e.ready(function() {
        h = !0
    });
    e.ready(function() {
        try {
            $(window).bind("unload", function() {
                window.wisDOM = window.$w = null;
                if (typeof window.$._wdVersion != "undefined") window.$ = null
            })
        } catch (a) {}
    });
    if (c.attachEvent) {
        var d = function() {
            try {
                c.documentElement.doScroll("left")
            } catch (a) {
                setTimeout(d, 1);
                return
            }
            h = !0;
            for (var b = f.length, e = window.document, l = window.wisDOM; b--;) f[b].call(e, l)
        };
        d()
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = /(^\s*|\s*$)/g;
    e.css = e.fn.css = function(c) {
        if (typeof c == "string") return a.getStyle(this[0], c);
        for (var f, b, d = this.length; d--;)
            for (f in b = this[d], c)
                if (b && !(b.nodeType === 3 || b.nodeType === 8)) b.style[f] = c[f];
        return this
    };
    e.addClass = e.fn.addClass = function(a) {
        for (var f, b, d = this.length; d--;)
            if (f = this[d], b = f.className, b.indexOf(a) == -1) b += " " + a, f.className = b.replace(c, "");
        return this
    };
    e.removeClass = e.fn.removeClass = function(a) {
        for (var f, b, d = this.length, j = RegExp(a, "g"); d--;)
            if (f =
                this[d], b = f.className, b.indexOf(a) !== -1) b = b.replace(j, ""), f.className = b.replace(c, "");
        return this
    };
    e.toggleClass = e.fn.toggleClass = function(a) {
        for (var f, b, d = this.length, j = RegExp(a, "g"); d--;) f = this[d], b = f.className, b.indexOf(a) !== -1 ? b = b.replace(j, "") : b += " " + a, f.className = b.replace(c, "");
        return this
    };
    e.offset = e.fn.offset = function(c) {
        c = c || null;
        if (c === null) {
            var f = a.getPosition(this[0]);
            return {
                left: f[0],
                top: f[1]
            }
        } else {
            for (var f = this.length, b = c.left, d = c.top; f--;) c = this[f], c.style.left = b, c.style.top = d;
            return this
        }
    };
    e.position = e.fn.position = function() {
        if (this.length > 0) {
            var c = a.getPosition(this[0], !0);
            return {
                left: c[0],
                top: c[1]
            }
        }
        return {}
    };
    e.positionRelTo = e.fn.positionRelTo = function(c) {
        c = e(c)[0];
        if (this.length > 0) return c = a.getPosition(this[0], !1, c), {
            left: c[0],
            top: c[1]
        };
        return {}
    };
    e.width = e.fn.width = function(c) {
        c = c || null;
        if (c === null) {
            c = this[0];
            if (c == window) return a.getWindowDimensions()[0];
            if (c == window.document) return e("body").width();
            return this[0].offsetWidth
        } else {
            for (var f = this.length; f--;) this[f].style.width =
                c;
            return this
        }
    };
    e.height = e.fn.height = function(c) {
        c = c || null;
        if (c === null) {
            c = this[0];
            if (c == window) return a.getWindowDimensions()[1];
            if (c == window.document) return e("body").height();
            return this[0].offsetHeight
        } else {
            for (var f = this.length; f--;) this[f].style.height = c;
            return this
        }
    };
    var a = function() {};
    a.getWindowDimensions = function() {
        if (typeof window.innerWidth !== "undefined") return [window.innerWidth, window.innerHeight];
        if (typeof document.documentElement.clientWidth !== "undefined") return [document.documentElement.clientWidth,
            document.documentElement.clientHeight
        ];
        var a = document.getElementsByTagName("body")[0];
        return [a.clientWidth, a.clientHeight]
    };
    a.getPosition = function(a, f, b) {
        var d = 0,
            j = 0,
            c = a;
        if (c.offsetParent) {
            do d += c.offsetLeft, j += c.offsetTop, c = c.offsetParent; while (c !== null)
        } else d += c.offsetLeft, j += c.offsetTop;
        if (f) a = a.parentNode, d -= a.offsetLeft, j -= a.offsetTop;
        if (typeof b !== "undefined" && b !== window && b !== document) {
            a = b.offsetLeft;
            f = b.offsetTop;
            if (b.offsetParent)
                for (; b !== null;) b = b.offsetParent, b !== null && (a += b.offsetLeft,
                    f += b.offsetTop);
            d -= a;
            j -= f
        }
        return [d, j]
    };
    a.getStyle = function(a, f) {
        if (typeof a == "undefined") return "";
        if (a.style[f]) return a.style[f];
        else if (a.currentStyle) return a.currentStyle[f];
        else if (document.defaultView && document.defaultView.getComputedStyle) {
            var f = f.replace(/([A-Z])/g, "-$1"),
                f = f.toLowerCase(),
                b = document.defaultView.getComputedStyle(a, ""),
                d = b && b.getPropertyValue(f),
                b = /.*\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\).*/i.exec(d);
            if (b === null) return d;
            var d = parseInt(b[1], 10).toString(16),
                j = parseInt(b[2], 10).toString(16),
                b = parseInt(b[3], 10).toString(16);
            d.length < 2 && (d = "0" + d);
            j.length < 2 && (j = "0" + j);
            b.length < 2 && (b = "0" + b);
            return "#" + d + j + b
        } else return ""
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.document;
    e._int.dombuilder = function(h) {
        var f = c.createDocumentFragment();
        a.create_dom(f, h);
        h = c.createElement("div");
        h.appendChild(f);
        return h.childNodes
    };
    var a = function() {};
    a.create_dom = function(c, f) {
        if (f.constructor == Array) {
            for (var b = f.length, d = 0; d < b; d++) a.create_dom(c, f[d]);
            f._attr && a.specials("_attr", f, c);
            f._events && a.specials("_events", f, c);
            f._data && a.specials("_data", f, c)
        } else
            for (b in f) {
                if (f.hasOwnProperty(b) && b !== "_attr" && b !== "_events" && b !== "_data") {
                    var d = null,
                        j = !1,
                        d = a.create_element(b, f[b]);
                    d === !1 && (d = document.createTextNode(f[b]), j = !0);
                    c.appendChild(d);
                    typeof f[b] == "object" ? a.create_dom(d, f[b]) : j === !1 && (j = typeof f[b] !== "undefined" ? f[b].toString() : "", j !== "" && (j = document.createTextNode(j), d.appendChild(j)))
                }
                a.specials(b, f, c)
            }
    };
    a.specials = function(c, f, b) {
        c == "_attr" && a.setAttributes(b, f[c]);
        if (c == "_events") {
            var d = f[c],
                j;
            for (j in d) d.hasOwnProperty(j) && e(b).bind(j, d[j])
        }
        if (c == "_data" && (c = f[c], typeof c == "object")) b._data = c
    };
    a.create_element = function(c, f) {
        var b =
            /^(\d+[a-z]*\s+)*([a-z]+[a-z1-6]*)(\#{1}([a-zA-Z0-9-_]+))*(\.{1}([a-zA-Z0-9-_\s]+))*(\#{1}([a-zA-Z0-9-_]+))*(\[{1}(.+)\]{1}$)*/.exec(c);
        if (b === null) return !1;
        var d = b[2],
            j = b[4] || b[8],
            e = b[6];
        if (b = b[10])
            for (var b = b.replace(/(\[|\])/g, ""), b = b.replace(/\s*,\s*/g, ","), b = b.split(","), k = 0; k < b.length; k++) b[k] = b[k].split("=");
        if (d) {
            k = document.createElement(d);
            if (typeof f !== "undefined" && typeof f._attr !== "undefined" && typeof f._attr.type !== "undefined") {
                k = document.createElement(d);
                try {
                    k.type = f._attr.type
                } catch (l) {}
            }
            b &&
                a.setAttributes(k, b);
            if (j) k.id = j;
            if (e) k.className = e;
            return k
        }
        return !1
    };
    a.setAttributes = function(a, f) {
        if (f.constructor.toString().indexOf("Array") !== -1)
            for (var b = 0; b < f.length; b++) {
                if (f[b][0] == "colspan" || f[b][0] == "rowspan") f[b][0] = f[b][0].replace(/span/, "Span");
                a.setAttribute(f[b][0], f[b][1])
            } else
                for (b in f)
                    if (f.hasOwnProperty(b)) {
                        var d = b.replace(/span/, "Span");
                        d.toLowerCase() == "class" && (a.setAttribute("class", f[b]), a.setAttribute("className", f[b]));
                        if (d.toLowerCase() == "style") a.style.cssText = f[b];
                        else if (d.toLowerCase() == "type") try {
                            a.setAttribute(d, f[b])
                        } catch (j) {} else a.setAttribute(d, f[b])
                    }
    }
})(window);
(function(g) {
    var e = g.wisDOM;
    e.appendTo = e.fn.appendTo = function(a) {
        a = c.objTest(a);
        this.append.call(a, this);
        return this
    };
    e.prependTo = e.fn.prependTo = function(a) {
        a = c.objTest(a);
        this.prepend.call(a, this);
        return this
    };
    e.append = e.fn.append = function(a) {
        var h = this.length,
            f, b, d, j = c.objTest,
            a = j(a),
            e = c.cloneNode;
        for (b = 0; b < h; b++) {
            f = this[b];
            d = h > 1 ? e(a) : j(a);
            var k = d.length,
                l;
            for (l = 0; l < k; l++) f.appendChild(d[l])
        }
        return this
    };
    e.prepend = e.fn.prepend = function(a) {
        var h = this.length,
            f, b, d, j = c.objTest,
            a = j(a),
            e = c.cloneNode;
        for (b = 0; b < h; b++) {
            f = this[b];
            d = h > 1 ? e(a) : j(a);
            var k = d.length,
                l;
            for (l = 0; l < k; l++) f.insertBefore(d[l], f.firstChild)
        }
        return this
    };
    e.insertAfter = e.fn.insertAfter = function(a) {
        var h = c.objTest,
            a = h(a),
            f = a.length,
            b, d, j, e = c.cloneNode;
        for (d = 0; d < f; d++) {
            b = a[d];
            j = f > 1 ? e(this) : h(this);
            var k = j.length,
                l;
            for (l = 0; l < k; l++) b.parentNode.insertBefore(j[l], b), b.parentNode.insertBefore(b, j[l])
        }
        return this
    };
    e.insertBefore = e.fn.insertBefore = function(a) {
        var e = c.objTest,
            a = e(a),
            f = a.length,
            b, d, j, n = c.cloneNode;
        for (d = 0; d < f; d++) {
            b = a[d];
            j = f > 1 ? n(this) : e(this);
            var k = j.length,
                l;
            for (l = 0; l < k; l++) b.parentNode.insertBefore(j[l], b)
        }
        return this
    };
    e.remove = e.fn.remove = e.detach = e.fn.detach = function() {
        for (var a, c = this.length; c--;) a = this[c], a.parentNode !== null && a.parentNode.removeChild(a);
        return this
    };
    e.empty = e.fn.empty = function() {
        for (var a = this.length, c; a--;) {
            c = this[a];
            for (var f = c.childNodes.length, b = c.childNodes; f--;) c.removeChild(b[f])
        }
        return this
    };
    e.clone = e.fn.clone = function() {
        return c.cloneNode(this)
    };
    var c = function() {};
    c.objTest = function(a) {
        if (typeof a ==
            "string" || typeof a == "object" && typeof a._wdVersion == "undefined") a = e(a);
        return a
    };
    c.cloneNode = function(a) {
        var c, f = a.length,
            b = e(""),
            d = e._int.browser.app;
        for (c = 0; c < f; c++) {
            var j;
            if (d == "MSIE") {
                j = a[c].outerHTML || a[c].nodeValue;
                var n = e({
                    div: ""
                });
                n.html(j);
                j = n[0].firstChild
            } else j = a[c].cloneNode(!0);
            b[c] = j
        }
        b.length = f;
        return b
    }
})(window);
(function(g) {
    var e = g.wisDOM;
    e.next = e.fn.next = function() {
        for (var a = this.length, h = [], f = e(""), b = function(a) {
                if (a.nextElementSibling) return a.nextElementSibling;
                do
                    if (a = a.nextSibling, a === null || typeof a == "undefined") return !1;
                while (a.nodeType !== 1);
                return a
            }, d = 0; d < a; d++) {
            var j = b(this[d]);
            j !== !1 && h.push(j)
        }
        return c(f, h)
    };
    e.prev = e.fn.prev = function() {
        for (var a = this.length, h = [], f = e(""), b = function(a) {
                if (a.previousElementSibling) return a.previousElementSibling;
                j = a;
                do
                    if (j = j.previousSibling, j === null || typeof j ==
                        "undefined") return !1;
                while (j.nodeType !== 1);
                return j
            }, d = 0; d < a; d++) {
            var j = b(this[d]);
            j !== !1 && h.push(j)
        }
        return c(f, h)
    };
    e.children = e.fn.children = function() {
        function a(a) {
            if (typeof a.children !== "undefined") return a.children;
            for (var a = a.childNodes, b = a.length, f = [], d = 0; d < b; d++) a[d].nodeType == 1 && f.push(a[d]);
            return f
        }
        var h = this.length,
            f, b = e(""),
            d = [];
        for (f = 0; f < h; f++)
            for (var j = a(this[f]), n = j.length, k = 0; k < n; k++) d.push(j[k]);
        return c(b, d)
    };
    e.parent = e.fn.parent = function() {
        for (var a = this.length, h = [], f = e(""), b = 0; b <
            a; b++) {
            var d = this[b].parentNode;
            typeof d !== "undefined" && d !== null && h.push(d)
        }
        return c(f, h)
    };
    e.parents = e.fn.parents = function(a) {
        for (var h = e(""), f = [], b = this.length, d = document.body; b--;) {
            var j = this[b].parentNode;
            do {
                for (var n = f.length, k = !1; n--;) f[n] == j && (k = !0);
                k || f.push(j);
                j = j.parentNode
            } while (j !== null && j !== d)
        }
        f.push(d);
        f.push(d.parentNode);
        if (typeof a !== "undefined" && typeof a == "string") {
            b = e._int.selectorEngine;
            d = [];
            for (j = f.length; j--;) b(a).match(f[j]) && d.push(f[j]);
            f = d
        }
        return c(h, f)
    };
    e.closest = e.fn.closest =
        function(a) {
            var h = e("");
            if (typeof a == "undefined" || a === "") return h;
            for (var f = [], b = this.length, d = e._int.selectorEngine, j = function(b) {
                    b = b.parentNode;
                    if (b === null || b == document) return !1;
                    return d(a).match(b) === !0 ? b : j(b)
                }, n = 0; n < b; n++) {
                var k = j(this[n]);
                k !== !1 && f.push(k)
            }
            return c(h, f)
        };
    e.find = e.fn.find = function(a) {
        var h = e._int.selectorEngine,
            f = e(""),
            b = [],
            d = this.length,
            j, n, k, g;
        for (j = 0; j < d; j++) {
            n = this[j];
            n = h(a).search(n);
            k = n.length;
            for (g = 0; g < k; g++) b.push(n[g])
        }
        return c(f, b)
    };
    var c = function(a, c) {
        for (var f = c.length,
                b = 0; b < f; b++) a[b] = c[b];
        a.length = f;
        return a
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = {},
        a = [];
    e.bind = e.fn.bind = function(a, b) {
        for (var d = h.namespace(a), j = this.length, c, e, g = h.generateID, m = h.setupElement, o = h.attachEvent; j--;) c = this[j], e = g(a), m(c, e, d, b), o(c, e);
        return this
    };
    e.unbind = e.fn.unbind = function(a) {
        for (var a = h.namespace(a), b = h.removeEvent, d = this.length, j; d--;) j = this[d], b(j, a);
        return this
    };
    e.trigger = e.fn.trigger = function(a, b) {
        for (var d = h.namespace(a), j = h.triggerEvent, c = this.length, e; c--;) e = this[c], j(e, d, b);
        return this
    };
    var h = function() {};
    h.namespace =
        function(a) {
            var a = a.split("."),
                b = a[0],
                d = null;
            a.length > 1 && (d = a[1]);
            return {
                ev: b,
                ns: d
            }
        };
    h.setupElement = function(f, b, d, j) {
        if (typeof f._wdEV == "undefined") f._wdEV = {};
        f._wdEV[b] = {
            event: d.ev,
            name: d.ns,
            fn: j
        };
        a.push(f)
    };
    h.generateID = function(a) {
        var b, d;
        do b = Math.round(Math.random() * a.length * 100), d = Math.round(Math.random() * 1E8), b = "ev_" + b + "_" + d; while (typeof c[b] !== "undefined");
        c[b] = 1;
        return b
    };
    h.triggerEvent = function(a, b, d) {
        var j = b.ev,
            b = b.ns,
            c = a._wdEV,
            e, h = {};
        h.target = a;
        typeof d != "undefined" && (h.data = d);
        for (e in c) d =
            c[e], (d.name === b && j == d.event || b === null && j == d.event) && d.fn.call(a, h)
    };
    h.attachEvent = function(a, b) {
        var d = a._wdEV[b],
            j = d.fn,
            c = d.event;
        d.stored = function(b) {
            if (!b) b = window.event;
            b = h.formatEvent(b);
            j.apply(a, [b])
        };
        d = d.stored;
        a.addEventListener ? a.addEventListener(c, d, !1) : a.attachEvent && a.attachEvent("on" + c, d)
    };
    h.removeEvent = function(a, b) {
        var d = b.ev,
            j = b.ns,
            c = a._wdEV,
            e, g, m = h.detachEvent;
        for (e in c)
            if (g = c[e], g.name === j && d == g.event || j === null) m(a, d, g.stored), delete c[e];
        var d = 0,
            o;
        for (o in c) c.hasOwnProperty(o) &&
            d++;
        if (d === 0) try {
            delete a._wdEV
        } catch (q) {
            a._wdEV = void 0
        }
    };
    h.detachEvent = function(a, b, d) {
        a.removeEventListener ? a.removeEventListener(b, d, !1) : a.detachEvent && a.detachEvent("on" + b, d)
    };
    h.formatEvent = function(a) {
        var b = {},
            d;
        for (d in a) b[d] = a[d];
        if (!b.target) b.target = b.srcElement;
        if (b.target === null) b.target = window;
        if (b.target.nodeType == 3) b.target = b.target.parentNode;
        return b
    };
    e(function() {
        try {
            e(window).bind("unload", function() {
                for (var b = a.length; b--;) a[b]._wdEV = null
            })
        } catch (f) {}
    })
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.document,
        a = null,
        h = {};
    e.getJSON = function(a, d) {
        return f.init(a, d)
    };
    var f = function() {};
    f.init = function(a, d) {
        if (typeof a == "undefined" || typeof d == "undefined") return !1;
        var j = "json" + e._int.generateID(),
            c = f.timeStamp();
        f.setupCallback(j, d);
        a += "&_=" + c;
        a.indexOf("callback=?") == -1 ? a += "&callback=" + j : a = a.replace(/callback=\?/, "callback=" + j);
        return f.attachScript(a, j, d)
    };
    f.setupCallback = function(a, d) {
        g[a] = h[a] = function(j) {
            g.navigator.appName == "Microsoft Internet Explorer" && (g[a +
                "-callback-triggered"] = !0);
            d(j);
            f.postLoadCleanUp(a)
        }
    };
    f.postLoadCleanUp = function(b) {
        setTimeout(function() {
            try {
                a.removeChild(c.getElementById(b)), g[b] = h[b] = void 0
            } catch (d) {}
            try {
                delete g[b], delete h[b]
            } catch (f) {}
        }, 0)
    };
    f.timeStamp = function() {
        return (new Date).valueOf() + "-" + Math.round(Math.random() * 1E3)
    };
    f.attachScript = function(b, d, j) {
        a === null && (a = c.getElementsByTagName("head")[0]);
        var e = c.createElement("script");
        e.setAttribute("type", "text/javascript");
        e.setAttribute("id", d);
        e.setAttribute("async", "");
        e.setAttribute("defer", "");
        e.setAttribute("src", b);
        g.navigator.appName == "Microsoft Internet Explorer" ? e.onreadystatechange = function() {
            this.readyState && this.readyState == "loaded" && window.setTimeout(function() {
                typeof g[d + "-callback-triggered"] == "undefined" && j({
                    error: !0,
                    event: {}
                });
                g[d + "called"] = void 0;
                try {
                    delete g[d + "called"]
                } catch (a) {}
            }, 10)
        } : e.onerror = function(a) {
            j({
                error: !0,
                event: a
            });
            f.postLoadCleanUp(d)
        };
        e.cancel = function(a) {
            return function() {
                var b = a.id;
                g[b] = h[b] = function() {
                    f.postLoadCleanUp(b)
                }
            }
        }(e);
        setTimeout(function(b) {
            return function() {
                a.appendChild(b)
            }
        }(e), 1);
        return e
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.document;
    e.html = e.fn.html = function(c) {
        c = c || null;
        if (c !== null) {
            for (var f = a.setHTML, b = this.length; b--;) f(this[b], c);
            return this
        } else return a.getHTML(this[0])
    };
    e.text = e.fn.text = function(c) {
        var c = c || null,
            f = a.getText,
            b = a.setText,
            d = this.length,
            j, e = "";
        for (j = 0; j < d; j++) c === null ? (e += f(this[j]), d > 1 && (e += "\n")) : b(this[j], c);
        return c === null ? e : this
    };
    e.attr = e.fn.attr = function(a, f) {
        if (typeof a == "undefined") return this;
        f = f || null;
        if (f === null && typeof a !== "object") {
            if (this.length === 0) return "";
            return this[0].getAttribute(a)
        }
        for (var b = this.length; b--;)
            if (typeof a == "object")
                for (var d in a) {
                    if (a.hasOwnProperty(d)) try {
                        this[b].setAttribute(d, a[d])
                    } catch (j) {}
                } else try {
                    this[b].setAttribute(a, f)
                } catch (c) {}
            return this
    };
    e.val = e.fn.val = function(a) {
        typeof a == "undefined" && (a = null);
        var f;
        if (a === null && this.length === 0) return "";
        if (a === null) {
            f = this[0].tagName.toLowerCase();
            if (f == "input" || f == "textarea") {
                a = this[0].value;
                if (typeof a !== "undefined" && a !== null) return a;
                return this[0].getAttribute("value")
            }
            if (f ==
                "select") return this[0].options[this[0].selectedIndex].getAttribute("value");
            return null
        } else {
            for (var b = this.length; b--;) {
                f = this[b].tagName.toLowerCase();
                if (f == "input" || f == "textarea") this[b].setAttribute("value", a), this[b].value = a;
                if (f == "select") {
                    this[b].setAttribute("value", a);
                    f = this[b].options;
                    for (var d = f.length, j = d; d--;) {
                        var c = j - (d + 1);
                        if (f[c].getAttribute("value") == a) this[b].selectedIndex = c
                    }
                }
            }
            return this
        }
    };
    var a = function() {};
    a.setHTML = function(e, f) {
        a.clearOut(e);
        var b = c.createElement("div");
        b.innerHTML =
            f;
        var d = b.childNodes.length,
            j, n = b.childNodes;
        for (j = 0; j < d; j++) e.appendChild(n[j].cloneNode(!0));
        delete b
    };
    a.getHTML = function(c) {
        return a.whiteSpace(c.innerHTML)
    };
    a.getText = function(c) {
        return a.readNode(c)
    };
    a.setText = function(e, f) {
        a.clearOut(e);
        e.appendChild(c.createTextNode(f))
    };
    a.readNode = function(c) {
        var f = "",
            b = a.readNode;
        if (c.nodeType == 1) {
            var c = c.childNodes,
                d = c.length,
                j;
            for (j = 0; j < d; j++) f += b(c[j])
        } else f += a.whiteSpace(c.nodeValue);
        return f
    };
    a.clearOut = function(a) {
        for (var f = a.childNodes.length, b = a.childNodes; f--;) a.removeChild(b[f])
    };
    a.whiteSpace = function(a) {
        return a.replace(/(\s{2,}|\n\s*\n|\t)/g, "")
    }
})(window);
(function() {
    function g(a, b, d, f) {
        return a ? f ? function(f, c) {
            return b(f, d, c) && a(f, c)
        } : function(f, c) {
            return a(f, c) && b(f, d, c)
        } : function(a, f) {
            return b(a, d, f)
        }
    }
    var e = {},
        c = function(a, b, d, f) {
            a = typeof a == "string" ? a.replace(/^\s+|\s+$/, "") : "";
            a = e[a] || (e[a] = new c.initialize(a));
            return b == null ? a : a.search(b, d, f)
        };
    c.initialize = function(a) {
        this.text = a
    };
    var a;
    a = c.initialize.prototype = c.prototype;
    c.implement = function(a, b) {
        for (var d in b) c[a][d] = b[d]
    };
    var h;
    h = c.support = {};
    (function() {
        var a = document.createElement("div"),
            b = (new Date).getTime();
        a.innerHTML = '<a name="' + b + '" class="\u20ac b"></a>';
        a.appendChild(document.createComment(""));
        h.byTagAddsComments = a.getElementsByTagName("*").length > 1;
        h.hasQsa = !(!a.querySelectorAll || !a.querySelectorAll(".\u20ac").length);
        var d;
        !a.getElementsByClassName || !a.getElementsByClassName("b").length ? d = !1 : (a.firstChild.className = "c", d = a.getElementsByClassName("c").length == 1);
        h.hasByClass = d;
        d = document.documentElement;
        d.insertBefore(a, d.firstChild);
        h.byIdAddsName = !!document.getElementById(b);
        d.removeChild(a)
    })();
    var f = function() {
        return !0
    };
    a.search = function(a, b, d) {
        var d = d || {},
            j, m, e;
        if (a) {
            if (a.nodeType != 1 && a.nodeType != 9)
                if (typeof a == "string") a = c.search(a), j = !0;
                else if (Object.prototype.toString.call(a) == "[object Array]" || typeof a.length == "number" && a.item) {
                var o = [];
                for (m = 0; e = a[m]; m++)(e.nodeType == 1 || e.nodeType == 9) && o.push(e);
                a = (j = o.length > 1) ? o : o[0] || document
            }
        } else a = document;
        var n, r, o = {},
            t = {},
            k = o,
            q = c.getUid,
            g = function(a) {
                a = q(a);
                return k[a] ? null : k[a] = !0
            };
        if (b && b.length)
            for (m = 0; e = b[m]; m++) g(e);
        if (h.hasQsa && !j && a.nodeType == 9 && !/\[/.test(this.text)) {
            try {
                var l = a.querySelectorAll(this.text)
            } catch (s) {}
            if (l) {
                if (!b) return c.toArray(l);
                for (m = 0; e = l[m]; m++) g(e) && b.push(e);
                d.unordered || b.sort(c.compare);
                return b
            }
        }
        l = this.parse();
        if (!l.length) return [];
        m = 0;
        for (var z; z = l[m]; m++) {
            var u = g;
            z.first && (b ? n = !0 : u = f, j ? r = a : z.combinator && (r = [a]));
            z.last && b ? (k = o, e = b) : (k = {}, e = []);
            if (!z.combinator && !j) e = z.combine(e, a, z, t, u, !e.length);
            else
                for (var p = 0, A = r.length; p < A; p++) e = z.combine(e, r[p], z, t, u);
            z.last ? e.length && (b =
                e) : r = e
        }!d.unordered && n && b && b.sort(c.compare);
        return b || []
    };
    a.find = function(a, b, d) {
        return this.search(a, b, d)[0]
    };
    a.match = function(a, b) {
        if (this.parse().length == 1) return !!this.parse()[0].match(a, {});
        if (!b)
            for (b = a; b.parentNode;) b = b.parentNode;
        var d = this.search(b),
            f = d.length;
        if (!f--) return !1;
        for (; f--;)
            if (d[f] == a) return !0;
        return !1
    };
    a.filter = function(a) {
        for (var b = [], d = this.parse()[0].match, f = 0, c; c = a[f]; f++) d(c) && b.push(c);
        return b
    };
    var b;
    c.recompile = function() {
        var a, d = [","],
            f = ["!"];
        for (a in p)
            if (a != " ") d[a.length >
                1 ? "unshift" : "push"](c.escapeRegExp(a));
        for (a in u) f.push(a);
        b = RegExp("[\\w\\u00a1-\\uFFFF][\\w\\u00a1-\\uFFFF-]*|[#.](?:[\\w\\u00a1-\\uFFFF-]|\\\\:|\\\\.)+|[ \\t\\r\\n\\f](?=[\\w\\u00a1-\\uFFFF*#.[:])|[ \\t\\r\\n\\f]*(" + d.join("|") + ")[ \\t\\r\\n\\f]*|\\[([\\w\\u00a1-\\uFFFF-]+)[ \\t\\r\\n\\f]*(?:([" + f.join("") + "]?=)[ \\t\\r\\n\\f]*(?:\"([^\"]*)\"|'([^']*)'|([^\\]]*)))?]|:([-\\w\\u00a1-\\uFFFF]+)(?:\\((?:\"([^\"]*)\"|'([^']*)'|([^)]*))\\))?|\\*|(.+)", "g")
    };
    var d = function(a) {
            return {
                ident: [],
                classes: [],
                attributes: [],
                pseudos: [],
                combinator: a
            }
        },
        j = function(a) {
            return a
        };
    a.parse = function(a) {
        var f = a ? "plain" : "parsed";
        if (this[f]) return this[f];
        var m = this.text,
            e = a ? j : this.compute,
            o = [],
            h = d(null);
        h.first = !0;
        a = function(a) {
            o.push(e(h));
            h = d(a)
        };
        b.lastIndex = 0;
        for (var n, r; n = b.exec(m);) {
            if (n[11]) {
                if (c.verbose) throw SyntaxError('Syntax error, "' + r + '" unexpected at #' + b.lastIndex + ' in "' + m + '"');
                return this[f] = []
            }
            r = n[0];
            switch (r.charAt(0)) {
                case ".":
                    h.classes.push(r.slice(1).replace(/\\/g, ""));
                    break;
                case "#":
                    h.id = r.slice(1).replace(/\\/g,
                        "");
                    break;
                case "[":
                    h.attributes.push({
                        name: n[2],
                        operator: n[3] || null,
                        value: n[4] || n[5] || n[6] || null
                    });
                    break;
                case ":":
                    h.pseudos.push({
                        name: n[7],
                        value: n[8] || n[9] || n[10] || null
                    });
                    break;
                case " ":
                case "\t":
                case "\r":
                case "\n":
                case "\u000c":
                    n[1] = n[1] || " ";
                default:
                    if (n = n[1]) {
                        if (n == ",") {
                            h.last = !0;
                            a(null);
                            h.first = !0;
                            continue
                        }
                        h.first && !h.ident.length ? h.combinator = n : a(n)
                    } else if (r != "*") h.tag = r
            }
            h.ident.push(r)
        }
        h.last = !0;
        o.push(e(h));
        return this[f] = o
    };
    var n = function() {
            return !0
        },
        k = function(a, b) {
            return a.id == b
        },
        l = function(a,
            b) {
            return a.nodeName.toUpperCase() == b
        },
        m = function(a) {
            return RegExp("(?:^|[ \\t\\r\\n\\f])" + a + "(?:$|[ \\t\\r\\n\\f])")
        },
        o = function(a, b) {
            return a.className && b.test(a.className)
        },
        q = function(a) {
            a.getter = c.lookupAttribute(a.name) || c.getAttribute;
            if (!a.operator || !a.value) return a;
            var b = u[a.operator];
            if (b) a.escaped = c.escapeRegExp(a.value), a.pattern = RegExp(b(a.value, a.escaped, a));
            return a
        },
        s = function(a, b) {
            var d = b.getter(a, b.name);
            switch (b.operator) {
                case null:
                    return d;
                case "=":
                    return d == b.value;
                case "!=":
                    return d !=
                        b.value
            }
            if (!d && b.value) return !1;
            return b.pattern.test(d)
        };
    a.compute = function(a) {
        var b, d, f, j, e, r, t = a.tag,
            z = a.id,
            u = a.classes,
            p = t ? t.toUpperCase() : null;
        z && (r = !0, e = g(null, k, z), j = function(a) {
            if (a.getElementById) return (a = a.getElementById(z)) && (!p || a.nodeName.toUpperCase() == p) && (!h.getIdAdds || a.id == z) ? [a] : [];
            for (var a = a.getElementsByTagName(t || "*"), b = 0, d; d = a[b]; b++)
                if (d.id == z) return [d];
            return []
        });
        if (u.length > 0)
            if (!j && h.hasByClass) {
                for (b = 0; d = u[b]; b++) e = g(e, o, m(d));
                var A = u.join(" ");
                j = function(a) {
                    return a.getElementsByClassName(A)
                }
            } else if (!j &&
            u.length == 1) {
            r = !0;
            var y = m(u[0]);
            e = g(e, o, y);
            j = function(a) {
                for (var a = a.getElementsByTagName(t || "*"), b = [], d = 0, f; f = a[d]; d++) f.className && y.test(f.className) && b.push(f);
                return b
            }
        } else
            for (b = 0; d = u[b]; b++) f = g(f, o, m(d));
        t ? j ? r || (f = g(f, l, p)) : (e = g(e, l, p), j = function(a) {
            return a.getElementsByTagName(t)
        }) : j || (j = function(a) {
            a = a.getElementsByTagName("*");
            if (!h.byTagAddsComments) return a;
            for (var b = [], d = 0, f; f = a[d]; d++) f.nodeType === 1 && b.push(f);
            return b
        });
        for (b = 0; d = a.pseudos[b]; b++) d.name == "not" ? (d = c(d.value), f = g(f,
            function(a, b) {
                return !b.match(a)
            }, d.parse().length == 1 ? d.parsed[0] : d)) : (r = x[d.name]) && (f = g(f, r, d.value));
        for (b = 0; d = a.attributes[b]; b++) f = g(f, s, q(d));
        (a.simple = !f) ? a.matchAux = n: (a.matchAux = f, e = g(e, f));
        a.match = e || n;
        a.combine = c.combinators[a.combinator || " "];
        a.search = j;
        return a
    };
    var p;
    p = c.combinators = {
        " ": function(a, b, d, f, j, e) {
            b = d.search(b);
            if (e && d.simple) return c.toArray(b);
            for (var e = 0, m = d.matchAux; d = b[e]; e++) j(d) && m(d, f) && a.push(d);
            return a
        },
        ">": function(a, b, d, f, c) {
            for (var j = d.search(b), e = 0, m; m = j[e]; e++) m.parentNode ==
                b && c(m) && d.matchAux(m, f) && a.push(m);
            return a
        },
        "+": function(a, b, d, f, c) {
            for (; b = b.nextSibling;)
                if (b.nodeType == 1) {
                    c(b) && d.match(b, f) && a.push(b);
                    break
                }
            return a
        },
        "~": function(a, b, d, f, c) {
            for (; b = b.nextSibling;)
                if (b.nodeType == 1) {
                    if (!c(b)) break;
                    d.match(b, f) && a.push(b)
                }
            return a
        }
    };
    var x;
    x = c.pseudos = {
        "first-child": function(a) {
            return x.index(a, 0)
        },
        "last-child": function(a) {
            for (; a = a.nextSibling;)
                if (a.nodeType === 1) return !1;
            return !0
        },
        "only-child": function(a) {
            for (var b = a; b = b.previousSibling;)
                if (b.nodeType === 1) return !1;
            for (; a = a.nextSibling;)
                if (a.nodeType === 1) return !1;
            return !0
        },
        "nth-child": function(a, b, d) {
            b = c.parseNth(b || "n");
            if (b.special != "n") return x[b.special](a, b.a, d);
            d = d || {};
            d.positions = d.positions || {};
            var f = c.getUid(a);
            if (!d.positions[f]) {
                for (var j = 0; a = a.previousSibling;)
                    if (a.nodeType == 1) {
                        j++;
                        var e = d.positions[c.getUid(a)];
                        if (e != void 0) {
                            j = e + j;
                            break
                        }
                    }
                d.positions[f] = j
            }
            return d.positions[f] % b.a == b.b
        },
        empty: function(a) {
            return !(a.innerText || a.textContent || "").length
        },
        contains: function(a, b) {
            return (a.innerText || a.textContent ||
                "").indexOf(b) != -1
        },
        index: function(a, b) {
            for (var d = 1; a = a.previousSibling;)
                if (a.nodeType == 1 && ++d > b) return !1;
            return d == b
        },
        even: function(a, b, d) {
            return x["nth-child"](a, "2n+1", d)
        },
        odd: function(a, b, d) {
            return x["nth-child"](a, "2n", d)
        }
    };
    x.first = x["first-child"];
    x.last = x["last-child"];
    x.nth = x["nth-child"];
    x.eq = x.index;
    var u;
    u = c.operators = {
        "*=": function(a, b) {
            return b
        },
        "^=": function(a, b) {
            return "^" + b
        },
        "$=": function(a) {
            return a + "$"
        },
        "~=": function(a, b) {
            return "(?:^|[ \\t\\r\\n\\f])" + b + "(?:$|[ \\t\\r\\n\\f])"
        },
        "|=": function(a,
            b) {
            return "(?:^|\\|)" + b + "(?:$|\\|)"
        }
    };
    var r = {
        "class": "className"
    };
    c.lookupAttribute = function(a) {
        var b = r[a];
        if (b) return function(a) {
            return a[b]
        };
        var d = /^(?:src|href|action)$/.test(a) ? 2 : 0;
        return function(b) {
            return b.getAttribute(a, d)
        }
    };
    c.getAttribute = function(a, b) {
        return a.getAttribute(b)
    };
    a = Array.slice || function(a) {
        return Array.prototype.slice.call(a)
    };
    try {
        a(document.documentElement.childNodes)
    } catch (t) {
        a = function(a) {
            if (a instanceof Array) return a;
            for (var b = a.length, d = Array(b); b--;) d[b] = a[b];
            return d
        }
    }
    c.toArray =
        a;
    c.compare = document.compareDocumentPosition ? function(a, b) {
        return 3 - (a.compareDocumentPosition(b) & 6)
    } : function(a, b) {
        return a.sourceIndex - b.sourceIndex
    };
    var z = 1;
    c.getUid = window.ActiveXObject ? function(a) {
        return (a.$slyUid || (a.$slyUid = {
            id: z++
        })).id
    } : function(a) {
        return a.$slyUid || (a.$slyUid = z++)
    };
    var A = {};
    c.parseNth = function(a) {
        if (A[a]) return A[a];
        var b = a.match(/^([+-]?\d*)?([a-z]+)?([+-]?\d*)?$/);
        if (!b) return !1;
        var d = parseInt(b[1], 10),
            f = (parseInt(b[3], 10) || 0) - 1;
        if (d = isNaN(d) ? 1 : d) {
            for (; f < 1;) f += d;
            for (; f >=
                d;) f -= d
        }
        switch (b[2]) {
            case "n":
                b = {
                    a: d,
                    b: f,
                    special: "n"
                };
                break;
            case "odd":
                b = {
                    a: 2,
                    b: 0,
                    special: "n"
                };
                break;
            case "even":
                b = {
                    a: 2,
                    b: 1,
                    special: "n"
                };
                break;
            case "first":
                b = {
                    a: 0,
                    special: "index"
                };
                break;
            case "last":
                b = {
                    special: "last-child"
                };
                break;
            case "only":
                b = {
                    special: "only-child"
                };
                break;
            default:
                b = {
                    a: d ? d - 1 : f,
                    special: "index"
                }
        }
        return A[a] = b
    };
    c.escapeRegExp = function(a) {
        return a.replace(/[-.*+?^${}()|[\]\/\\]/g, "\\$&")
    };
    c.generise = function(a) {
        c[a] = function(b) {
            var d = c(b);
            return d[a].apply(d, Array.prototype.slice.call(arguments,
                1))
        }
    };
    a = ["parse", "search", "find", "match", "filter"];
    for (var y = 0; a[y]; y++) c.generise(a[y]);
    c.recompile();
    window.wisDOM._int.selectorEngine = c
})();
(function(g) {
    var e = g.wisDOM,
        c = g.document,
        a, h = {
            format: "DAY DD/MM/YYYY",
            onUpdate: null,
            minDate: null,
            maxDate: null,
            quickJump: !0,
            quickJumpNum: 7,
            defaultDate: new Date,
            classNameBase: "wdDatePicker"
        };
    e.datePicker = e.fn.datePicker = function(a) {
        for (var a = f.mergeSettings(a) || h, d = this.length, c = f.init; d--;) c(this[d], a);
        return this
    };
    e.datePicker.override = e.fn.datePicker.override = function(a) {
        for (var d in a) a.hasOwnProperty(d) && (h[d] = a[d])
    };
    e.datePicker.show = e.fn.datePicker.show = function(a, d) {
        d = f.mergeSettings(d) || h;
        f.event.showCalendar(a, d)
    };
    e.datePicker.encode = function(a, d) {
        return f.date.encode(a, d)
    };
    var f = function() {};
    f.init = function(a, d) {
        var c = e(a);
        f.event.bindField(c, d)
    };
    f.createContainer = function(a, d) {
        var f = {};
        f["div#" + a + "." + d + "-Outer"] = "";
        f = e(f).css({
            display: "none",
            position: "absolute",
            left: "100px",
            top: "100px"
        });
        e("body").prepend(f)
    };
    f.event = {};
    f.event.showCalendar = function(b, d, j) {
        c.getElementById(a) === null && f.createContainer(a, d.classNameBase);
        e("#" + a).children().length !== 0 && f.event.hideCalendar();
        var h =
            b.val(),
            k = f.date.decode(h, d.format);
        typeof j == "undefined" && (j = new Date(k.valueOf()));
        var h = e(c.getElementById(a)),
            l = f.buildChronNav(b, j, d);
        h.append(l);
        j = f.buildCalendarTable(b, f.date.addMonths(j, 0), d, k);
        h.append(j);
        h.css({
            display: "block"
        });
        f.event.positionCalendar(b, d);
        e(function() {
            e(g).bind("resize.datePickerHide", function(a) {
                f.event.hideCalendar(a)
            });
            e(g.document).bind("click.datePickerHide", function(a) {
                f.event.hideCalendar(a)
            })
        }, 100)
    };
    f.event.positionCalendar = function(b, d) {
        var f = e("#" + a),
            c = f.width(),
            h = f.height(),
            l = b.offset(),
            m = b.width(),
            o = b.height(),
            q = e("body").width();
        if (l.left + c >= q) l.left = l.left - c + m;
        f.css({
            left: l.left + "px",
            top: l.top + o + "px",
            zIndex: 1E6
        });
        typeof document.body.style.maxHeight == "undefined" && g.navigator.userAgent.indexOf("MSIE") !== -1 && (f = {}, m = {}, m["div#" + a + "-SHIM." + d.classNameBase + "-SHIM[style=display:none]"] = f, f["iframe.shim[src=#,frameBorder=0,scrollbar=no,width=" + c + ",height=" + h + "]"] = "", e("body").append(m), e("#" + a + "-SHIM").css({
            position: "absolute",
            width: c + "px",
            height: h + "px",
            left: l.left +
                "px",
            top: l.top + o + "px",
            zIndex: 1
        }))
    };
    f.event.dateChosen = function(b, d, c, h) {
        b.val(f.date.encode(c.date, h.format));
        e("#" + a + " td.selected").removeClass("selected");
        e(d).addClass("selected");
        typeof h.onUpdate == "function" && e(function() {
            h.onUpdate.call(b, c.date)
        }, 1);
        e(function() {
            f.event.hideCalendar()
        }, 100)
    };
    f.event.nextPrevMonth = function(a, d, c) {
        a = f.date.addMonths(a, c);
        f.event.showCalendar(this, d, a)
    };
    f.event.hideCalendar = function(b) {
        var d = e(c.getElementById(a));
        if (typeof b !== "undefined")
            for (var b = b.target,
                    f = d[0]; b.parentNode;) {
                if (b == f) return !1;
                b = b.parentNode
            }
        e(g).unbind("resize.datePickerHide");
        e(c).unbind("click.datePickerHide");
        b = e("#" + a + "-SHIM");
        b.length > 0 && b.remove();
        d.css({
            display: "none",
            left: "100px",
            top: "100px"
        });
        d.empty()
    };
    f.event.bindField = function(a, d) {
        if (a[0].tagName.toLowerCase() !== "input") a.val = a.text;
        a.val() === "" && a.val(f.date.encode(d.defaultDate, d.format));
        a.bind("click.datePicker", function() {
            e(function() {
                f.event.showCalendar(a, d)
            }, 10)
        });
        var c;
        a.bind("keydown.datePicker", function() {
            c =
                a.val()
        });
        a.bind("keyup.datePicker", function() {
            a.val(c)
        })
    };
    f.buildChronNav = function(a, d, c) {
        var h = (new Date(d.valueOf())).setDate(1),
            k = (new Date(d.valueOf())).setDate(f.lookup.month.numDays(d)),
            g = "",
            m = "",
            o = !0,
            q = !0;
        c.minDate !== null && h < c.minDate && (g = ".disabled", o = !1);
        c.maxDate !== null && k > c.maxDate && (m = ".disabled", q = !1);
        h = {};
        h["div#" + c.classNameBase + "-chronNav"] = {};
        h["div#" + c.classNameBase + "-chronNav"]["0 a" + g + "#" + c.classNameBase + "-previous"] = {
            span: "Previous",
            _events: {
                click: function() {
                    o && f.event.nextPrevMonth.apply(a, [d, c, -1])
                }
            }
        };
        h["div#" + c.classNameBase + "-chronNav"]["1 "] = " ";
        h["div#" + c.classNameBase + "-chronNav"]["2 a" + m + "#" + c.classNameBase + "-next"] = {
            span: "Next",
            _events: {
                click: function() {
                    q && f.event.nextPrevMonth.apply(a, [d, c, 1])
                }
            }
        };
        return e(h)
    };
    f.buildCalendarTable = function(a, d, c, e) {
        var e = e || null,
            h = {},
            g = f.lookup.day,
            m = f.lookup.month,
            o = m.numDays(d),
            q = f.event.dateChosen,
            s = c.minDate,
            p = c.maxDate,
            x = null;
        e !== null && e.getMonth() == d.getMonth() && (x = e.getDate());
        var d = new Date(d.valueOf()),
            u = {};
        h["table." + c.classNameBase +
            "_calendar[cellpadding=0,cellspacing=0,border=0]"] = u;
        u.thead = {
            tr: {}
        };
        u.thead.tr["th[colspan=7]"] = f.buildQuickJumpSelect(a, d, c);
        e = {};
        u.tbody = e;
        var r = {};
        e["98 tr.dayHeader"] = r;
        for (var t = 7, z, A; t--;) {
            u = 7 - (t + 1);
            z = g.shortName[u].substr(0, 1);
            A = "";
            if (u === 0 || u == 6) A = ".weekend";
            r[u + " th" + A] = z
        }
        var u = r = 1,
            m = m.name(d),
            y;
        m += " " + d.getFullYear();
        t = {};
        e[u + " tr"] = t;
        do {
            d.setDate(u);
            z = u;
            y = d.getDay();
            if (u == 1 && y !== 0)
                for (A = 0; A < y; A++) t[A + " td.disabled"] = {
                    b: " "
                }, r++;
            A = ".";
            if (y === 0 || y == 6) A += "weekend";
            y = !1;
            s !== null && (s.setHours(0),
                d.valueOf() < s.valueOf() && (t[u + " td" + A + " minDate unavailable"] = {
                    i: z
                }, y = !0));
            p !== null && (p.setHours(0), d.valueOf() > p.valueOf() && (t[u + " td" + A + " maxDate unavailable"] = {
                i: z
            }, y = !0));
            y || (u == x && (A += " selected"), y = g.name[d.getDay()] + " " + z + " " + m, t[u + " td" + A + "[title=" + y + "]"] = {
                b: z,
                _data: {
                    dateNum: u,
                    date: new Date(d.valueOf())
                },
                _events: {
                    click: function() {
                        return q(a, this, this._data, c)
                    }
                }
            });
            if (u >= o)
                for (A = 0; A < 7 - r; A++) t[A + " td.disabled"] = "";
            r % 7 === 0 && u !== o && (t = {}, e[(u == 1 ? u + 1 : u) + " tr"] = t, r = 0);
            r++;
            u++
        } while (u <= o);
        return h
    };
    f.buildQuickJumpSelect = function(a, d, c) {
        var e = {},
            h = f.lookup.month.name,
            g = new Date(d.valueOf()),
            m = f.date.addMonths;
        if (c.quickJump === !0 && typeof document.body.style.maxHeight !== "undefined") {
            var o = c.minDate,
                q = c.maxDate,
                s = c.quickJumpNum,
                p, x;
            e.select = {
                _events: {
                    change: function() {
                        this.blur();
                        f.event.nextPrevMonth.apply(a, [d, c, parseInt(this.value, 10)])
                    }
                }
            };
            for (p = s; p--;)
                if (x = 0 - (p + 1), g = new Date(d.valueOf()), g = m(g, x), o === null || g.getMonth() + g.getFullYear() * 1E3 >= o.getMonth() + o.getFullYear() * 1E3) e.select["option[value=" +
                    x + "]"] = h(g) + " " + g.getFullYear();
            g = new Date(d.valueOf());
            e.select["option[value=0,selected=selected]"] = h(g) + " " + g.getFullYear();
            for (p = s; p--;)
                if (x = s - p, g = new Date(d.valueOf()), g = m(g, x), q === null || g.getMonth() + g.getFullYear() * 1E3 <= q.getMonth() + q.getFullYear() * 1E3) e.select["option[value=" + x + "]"] = h(g) + " " + g.getFullYear()
        } else e = {
            "span.month": h(d),
            "0 ": " ",
            "span.year": d.getFullYear()
        };
        return e
    };
    f.mergeSettings = function(a) {
        if (typeof a != "undefined") {
            var d = {},
                f;
            for (f in h) h.hasOwnProperty(f) && (d[f] = h[f]);
            for (var c in a) a.hasOwnProperty(c) &&
                (d[c] = a[c]);
            return d
        }
    };
    f.lookup = {
        day: {
            name: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            shortName: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
        },
        month: {
            name: function(a) {
                var d = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                return typeof a == "object" ? d[a.getMonth()] : d[a]
            },
            numDays: function(a) {
                var d = a.getMonth(),
                    f = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
                    a = a.getFullYear();
                a % 4 === 0 && a % 100 !== 0 && (f[1] = 29);
                a % 400 === 0 && a %
                    100 === 0 && a % 4 === 0 && (f[1] = 29);
                return f[d]
            }
        }
    };
    f.date = {
        decode: function(a, d, f) {
            f = f || h.defaultDate;
            if (a === "" || a === null || typeof a == "undefined") return f;
            var c = d.search(/DD/),
                e = d.search(/MM/),
                d = d.search(/YYYY/),
                g = new Date;
            g.setDate(a.substr(c, 2));
            g.setMonth(a.substr(e, 2) - 1);
            g.setDate(a.substr(c, 2));
            g.setMonth(a.substr(e, 2) - 1);
            g.setFullYear(a.substr(d, 4));
            if (isNaN(g.valueOf()) || g.valueOf() < 0) return f;
            return g
        },
        encode: function(a, d) {
            var c = a.getDate().toString(),
                e = (a.getMonth() + 1).toString(),
                h = a.getFullYear().toString(),
                g = f.lookup.day.shortName[a.getDay()],
                c = c.length == 1 ? "0" + c : c,
                e = e.length == 1 ? "0" + e : e,
                c = d.replace(/DD/, c),
                c = c.replace(/MM/, e),
                c = c.replace(/YYYY/, h);
            return c = c.replace(/DAY/, g)
        },
        addMonths: function(a, d) {
            var f = new Date(a.valueOf());
            f.setDate(15);
            var c = f.getMonth() + d;
            f.setMonth(c);
            return f
        }
    };
    f.genID = function() {
        var b, d, f = document,
            c = g.location.href;
        do b = Math.round(Math.random() * 1E10), d = c.length * 100, b = "wdDPCalendar-" + (b + d); while (f.getElementById(b) !== null);
        a = b
    }()
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.document,
        a, h = !1,
        f = Math.round(Math.random() * 1E7);
    e.cookie = function(d, f, c, e) {
        h || b.testCookies();
        return a ? (f = f || null, f === null ? b.findCookie(d) : (f = escape(f.toString().replace(/\r*\n*/g, "")), e = "path=" + (e || "/") + "; ", c = b.genExpiryStr(c), b.createCookie(d, f, e, c), !0)) : !1
    };
    e.cookie.remove = function(a) {
        e.cookie(a, "0", -1)
    };
    var b = function() {};
    b.testCookies = function() {
        c.cookie = "test" + f + "=enabled";
        if (b.findCookie("test" + f) == "enabled") {
            a = !0;
            var d = "test" + f + "=enabled; expires=" + (new Date).toGMTString() +
                ";";
            c.cookie = d
        } else a = !1;
        h = !0
    };
    b.findCookie = function(a) {
        for (var b = c.cookie.split(";"), f = b.length, e; f--;)
            if (e = b[f].replace(/(^\s*|\s*$)/, ""), e.indexOf(a) !== -1) return unescape(e.substr(a.length + 1));
        return ""
    };
    b.createCookie = function(a, b, f, e) {
        c.cookie = a + "=" + b + "; " + e + f
    };
    b.genExpiryStr = function(a) {
        if (typeof a !== "undefined") return "expires=" + (new Date((new Date).valueOf() + a * 864E5)).toGMTString() + "; ";
        return ""
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.document;
    e._int.generateID = function() {
        for (var a = function() {
                return "IDxxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function(a) {
                    var b = Math.random() * 16 | 0;
                    return (a == "x" ? b : b & 3 | 8).toString(16)
                }).toUpperCase()
            }, e = a(); c.getElementById(e) !== null;) e = a();
        return e
    };
    e._int.browser = function(a) {
        var e = {},
            f = a.navigator;
        if (typeof f.platform !== "undefined") e.platform = f.platform;
        e.standardsMode = typeof c.compatMode !== "undefined" && c.compatMode == "CSS1Compat" ? !0 : !1;
        f = function(a) {
            var d =
                /(Opera|Firefox|Chrome|Safari|Konqueror|Epiphany|Iceweasel|Camino|AppleWebKit)\/([0-9\.]+)/g.exec(a);
            if (d !== null) return [d[1], d[2]];
            d = /(MSIE)\s+([0-9\.]+)/g.exec(a);
            if (d !== null) return [d[1], d[2]];
            return ["", "0.0"]
        }(f.userAgent);
        e.app = f[0];
        e.version = f[1];
        e.versionSerial = parseInt(f[1].replace(/\./g, ""), 10);
        e.versionMajor = parseInt(f[1], 10);
        e.handheldDevice = typeof a.orientation != "undefined" ? !0 : !1;
        e.touchDevice = typeof("ontouchstart" in a || a.DocumentTouch && c instanceof DocumentTouch) == "undefined" ? !1 : !0;
        return e
    }(g);
    e._int.checkScroll = function(a) {
        var a = e(a),
            h = a.height(),
            f = a.width(),
            b = a[0],
            d, j;
        b == g ? (d = e("body"), a = d.height(), d = d.width(), typeof g.pageXOffset !== "undefined" ? (j = g.pageYOffset, b = g.pageXOffset) : (j = c.body, D = c.documentElement, D = D.clientHeight ? D : j, j = D.scrollTop, b = D.scrollLeft)) : (a = b.scrollHeight, d = b.scrollWidth, j = b.scrollTop, b = b.scrollLeft);
        if (a > h || d > f) {
            j = {
                x: {
                    box: f,
                    scroll: d,
                    at: b
                },
                y: {
                    box: h,
                    scroll: a,
                    at: j
                },
                which: {
                    x: !1,
                    y: !1
                }
            };
            if (a > h) j.which.y = !0;
            if (d > f) j.which.x = !0;
            return j
        }
        return !1
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = {
            fps: 30,
            time: 300
        };
    e.animate = e.fn.animate = function(c, f, b, d, j) {
        for (var n = this.length, g, l = this; n--;) g = e(this[n]), g.css(c), g = a.setupAnimation(this, g, c, f, d, j);
        typeof b == "function" && setTimeout(function() {
            return b.call(l)
        }, g + 1);
        return this
    };
    e.slideDown = e.fn.slideDown = function(c, f, b) {
        this.css({
            visibility: "hidden",
            overflow: "hidden",
            display: ""
        });
        for (var d = this.length, j, n = {
                height: "0px"
            }, g, l = this; d--;) j = e(this[d]), g = j.height(), j.css({
                visibility: "",
                height: "0px"
            }), g = {
                height: g + "px"
            },
            j = a.setupAnimation(this, j, n, g, f, b);
        var m = function() {
            l.css({
                overflow: "",
                height: ""
            });
            typeof c == "function" && c.call(l)
        };
        setTimeout(function() {
            return m.call(l)
        }, j + 1);
        return this
    };
    e.slideUp = e.fn.slideUp = function(c, f, b) {
        this.css({
            overflow: "hidden"
        });
        for (var d = this.length, j, n, g = {
                height: "0px"
            }, l = this; d--;) j = e(this[d]), n = {
            height: j.height() + "px"
        }, j = a.setupAnimation(this, j, n, g, f, b);
        var m = function() {
            l.css({
                overflow: "",
                display: "none",
                height: ""
            });
            typeof c == "function" && c.call(l)
        };
        setTimeout(function() {
                return m.call(l)
            },
            j + 1);
        return this
    };
    e.fadeIn = e.fn.fadeIn = function(c, f, b, d) {
        c = c || 1;
        this.css({
            opacity: 0,
            filter: "alpha(opacity=0)"
        });
        for (var j = this.length, n = this; j--;) var g = e(this[j]),
            g = a.setupAnimation(this, g, {
                opacity: 0
            }, {
                opacity: c
            }, b, d);
        var l = function() {
            typeof f == "function" && f.call(n)
        };
        setTimeout(function() {
            return l.call(n)
        }, g + 1);
        return this
    };
    e.fadeOut = e.fn.fadeOut = function(c, f, b, d) {
        c = c || 1;
        this.css({
            opacity: c,
            filter: "alpha(opacity=" + c * 100 + ")"
        });
        for (var j = this.length, n = this; j--;) var g = e(this[j]),
            g = a.setupAnimation(this,
                g, {
                    opacity: c
                }, {
                    opacity: 0
                }, b, d);
        var l = function() {
            n.css({
                display: "none"
            });
            typeof f == "function" && f.call(n)
        };
        setTimeout(function() {
            return l.call(n)
        }, g + 1);
        return this
    };
    var a = function() {};
    a.setupAnimation = function(e, f, b, d, j, n) {
        for (var j = j || c.time, n = n || c.fps, g = Math.floor(j / (1E3 / n)), e = g, n = Math.floor(1E3 / n), j = function(c) {
                return function() {
                    a.animationStep(c, g, f, b, d)
                }
            }; e--;) setTimeout(j(g - e), n * (g - e));
        return n * (g - e)
    };
    a.animationStep = function(a, f, b, d, c) {
        var e = {},
            g;
        for (g in d)
            if (d.hasOwnProperty(g)) {
                var l = parseInt(d[g],
                        10),
                    m = parseInt(c[g], 10);
                g == "opacity" && (l = parseFloat(d[g]) * 100, m = parseFloat(c[g]) * 100);
                if (!isNaN(l) && !isNaN(m)) {
                    var o = m - l,
                        m = (l + o / f * a - l) / (m - l),
                        m = m * m * (3 - 2 * m);
                    l += o * m;
                    if (!isNaN(l)) g !== "opacity" ? e[g] = Math.ceil(l) + "px" : (e.filter = "alpha(opacity=" + l + ")", e[g] = (l / 100).toFixed(2))
                }
            }
        b.css(e)
    }
})(window);
(function(g) {
    var e = g.wisDOM;
    e.scroll = e.fn.scroll = function(a, h, f, b) {
        for (var h = function(a, b) {
                return function() {
                    typeof b == "function" && b.call(a)
                }
            }(this, h), d = this.length, j, n; d--;) {
            j = e(this[d]);
            var g = e._int.checkScroll(j);
            if (g) {
                n = e(a);
                var l = n.positionRelTo(this[d]);
                n = [l.left, l.top, n.width(), n.height()];
                n = c.startScroll(j, g, n, f, b)
            }
        }
        setTimeout(h, n + 1);
        return this
    };
    var c = function() {};
    c.startScroll = function(a, e, f, b, d) {
        for (var d = d || 30, j = Math.floor((b || 500) / (1E3 / d)), b = j, d = Math.floor(1E3 / d), g = function(b) {
                return function() {
                    c.scrollStep(b,
                        j, a, e, f)
                }
            }; b--;) setTimeout(g(j - b), d * (j - b));
        return d * (j - b)
    };
    c.scrollStep = function(a, c, f, b, d) {
        var j = function(a, b, d, f) {
                var c = d - b,
                    a = (b + c / f * a - b) / (d - b);
                b += c * a * a * (3 - 2 * a);
                isNaN(b) && (b = d);
                return b = Math.round(b)
            },
            e = 0,
            k = 0;
        b.which.x && (b.x.at - d[0] < 0 ? (k = Math.round(d[0] - b.x.box / 2), d[2] < b.x.box && (k += Math.round(d[2] / 2)), k > b.x.scroll - b.x.box && (k = b.x.scroll - b.x.box)) : (k = Math.round(d[0] - b.x.box / 2), k > 0 && (k = 0)), k = j(a, b.x.at, k, c));
        b.which.y && (b.y.at - d[1] < 0 ? (e = Math.round(d[1] - b.y.box / 2), d[3] < b.y.box && (e += Math.round(d[3] /
            2)), e > b.y.scroll - b.y.box && (e = b.y.scroll - b.y.box)) : (e = Math.round(d[1] - b.y.box / 2), e < 0 && (e = 0)), e = j(a, b.y.at, e, c));
        f[0] == g ? f[0].scrollTo(k, e) : (f[0].scrollTop = e, f[0].scrollLeft = k)
    }
})(window);
(function() {
    var g = window.wisDOM,
        e = window.document,
        c = {
            useBlockout: !1,
            overlayColour: "#808080",
            overlayOpacity: 0.8,
            closeTitle: "Click to close",
            innerBackground: "#FFF",
            zIndexLowest: 1E6,
            width: !1,
            height: !1,
            useClone: !0,
            myClass: null,
            onClose: null,
            disableClosing: !1
        },
        a = {
            useBlockout: !0,
            overlayColour: "#444",
            overlayOpacity: 0.9,
            autoPlay: !1,
            autoPlayInterval: 5,
            showAutoControls: !0,
            showCaptions: !0,
            thumbBorder: 1,
            thumbMargin: 3,
            useClone: !0,
            myClass: null,
            onClose: null
        };
    g.slideshow = g.fn.slideshow = function(f) {
        for (var b = h.mergeSettings(c,
                a), f = h.mergeSettings(b, f), b = this.length, d, j = g(""), e = 0; e < b; e++)
            if (d = this[e], d.tagName.toLowerCase() !== "img") {
                d = g(d).find("img");
                anyImgLen = d.length;
                for (var k = 0; k < anyImgLen; k++) j.push(d[k])
            } else j.push(d);
        j.bind("click.wdSlideshow", function(a) {
            h.showSlideshow(a, j, f)
        });
        return this
    };
    g.overlay = g.fn.overlay = function(a, b) {
        a = h.mergeSettings(c, a);
        h.closeAll(a);
        var d = g({
            "div#wdOverlayContent.overlayMode": ""
        }).css({
            backgroundColor: a.innerBackground,
            overflow: "hidden"
        });
        a.myClass !== null && d.addClass(a.myClass);
        a.useClone ? this.clone().css({
            display: "block"
        }).appendTo(d) : this.css({
            display: "block"
        }).appendTo(d);
        a.disableClosing || g({
            "b#wdOverlayClose": {
                i: "Close",
                _events: {
                    "click.overlay": function() {
                        h.closeAll(a)
                    }
                },
                _attr: {
                    title: a.closeTitle
                }
            }
        }).appendTo(d);
        d.close = function() {
            h.closeAll(a)
        };
        a.height && d.css({
            height: a.height + "px"
        });
        var j = a.width || Math.round(g(window).width() * 0.8),
            e = a.height || Math.round(g(window).height() * 0.8);
        d.css({
            position: "absolute",
            left: "-100000px",
            top: "-100000px",
            width: j + "px",
            overflow: "auto"
        });
        d.appendTo("body");
        var k = d.height();
        k > e ? d.height(e) : e = k;
        d.css({
            position: "absolute",
            left: "50%",
            top: "48%",
            marginLeft: -1 * Math.round(j / 2) + "px",
            marginTop: -1 * Math.round(e / 2) + "px",
            zIndex: a.zIndexLowest + 2
        });
        if (b) {
            var k = d.offset(),
                l = g(b.target),
                m = l.offset(),
                o = l.width(),
                l = l.height(),
                q = g._int.checkScroll(window);
            k.left += q.x.at;
            k.top += q.y.at;
            d.css({
                marginLeft: 0,
                marginTop: 0,
                left: m.left + "px",
                top: m.top + "px",
                width: o + "px",
                height: l + "px"
            });
            d.animate({
                width: o,
                height: l,
                left: m.left,
                top: m.top
            }, {
                width: j,
                height: e,
                left: k.left,
                top: k.top
            }, function() {
                d.css({
                    position: "fixed",
                    left: "50%",
                    top: "48%",
                    marginLeft: -1 * Math.round(j / 2) + "px",
                    marginTop: -1 * Math.round(e / 2) + "px",
                    zIndex: a.zIndexLowest + 2
                })
            })
        } else d.css({
            position: "fixed"
        }), d.fadeIn();
        a.useBlockout && g(function() {
            h.createBlocker(a).fadeIn(a.overlayOpacity)
        }, 50);
        return d
    };
    var h = function() {};
    h.showSlideshow = function(a, b, d) {
        var c = h.createBlocker(d);
        c.unbind("click").attr({
            title: ""
        });
        var n = g({
            "div.close": {
                b: "Close",
                _attr: {
                    title: "Close the slideshow"
                }
            }
        }).appendTo(c);
        g(e).bind("keyup.wdSlideShow",
            function(a) {
                if (a.keyCode == 39) return h.nextImage(d, 1), !1;
                if (a.keyCode == 37) return h.nextImage(d, -1), !1;
                if (a.keyCode == 27) return h.closeAll(d), !1
            });
        var k = function(a) {
            g(function() {
                h.resizeAll(d, a);
                g(window).bind("resize.wdSlideShow", k)
            }, 200);
            g(window).unbind("resize.wdSlideShow")
        };
        g(function() {
            g(window).bind("resize.wdSlideShow", k)
        }, 250);
        n.bind("click.wdSlideShow", function() {
            h.closeAll(d)
        });
        g({
            "div.loading": {
                b: "Loading"
            }
        }).css({
            display: "none"
        }).appendTo(c);
        c.fadeIn(d.overlayOpacity);
        for (var n = b.clone(),
                l = b.length, a = a.target, m; l--;) b[l] == a && (m = n[l]);
        d._playing = d.autoPlay ? !0 : !1;
        h.showThumbnails(n, d, !0);
        d.showAutoControls && (b = g({
            "b#wdSlideShowPlayPause": {
                span: "Play/Pause",
                _events: {
                    click: function() {
                        g("#wdSlideShowPlayPause").toggleClass("playing");
                        d._playing ? clearTimeout(d._timeout) : d._timeout = setTimeout(function() {
                            h.nextImage(d, 1)
                        }, d.autoPlayInterval * 1E3);
                        d._playing = !d._playing
                    }
                },
                _attr: {
                    title: "Play/pause the slideshow"
                }
            }
        }), d._playing && b.addClass("playing"), b.appendTo(c));
        g({
            "div#wdSlideshowPreloader": {}
        }).css({
            position: "absolute",
            left: "-10000px",
            top: "-10000px",
            visibility: "hidden"
        }).prependTo("body");
        h.loadHighRes(m, d)
    };
    h.nextImage = function(a, b) {
        var d = g("div#wdSlideshowThumbs img.current");
        b > 0 ? typeof d.next()[0] != "undefined" ? h.loadHighRes(d.next()[0], a) : h.loadHighRes(d.parent().children()[0], a) : typeof d.prev()[0] != "undefined" ? h.loadHighRes(d.prev()[0], a) : (d = d.parent().children(), h.loadHighRes(d[d.length - 1], a))
    };
    h.loadHighRes = function(a, b) {
        g("div#wdOverlayBlockout div.loading").css({
            display: ""
        });
        var d = g("div#wdSlideshowPreloader").empty(),
            c = a.getAttribute("rel"),
            e = a.getAttribute("alt");
        g("div#wdSlideshowThumbs img").removeClass("current");
        g(a).addClass("current");
        var k = g({
            img: {
                _events: {
                    load: function() {
                        var a = g("img.wdSSHighRes");
                        a.fadeOut(null, function() {
                            a.length > 1 && a.remove()
                        });
                        h.showHighRes(k, b);
                        g("div#wdOverlayBlockout div.loading").css({
                            display: "none"
                        })
                    }
                },
                _attr: {
                    title: e,
                    alt: e
                }
            }
        });
        b.myClass !== null && k.addClass(b.myClass);
        k.appendTo(d);
        g(function() {
            k.attr("src", c)
        }, 10)
    };
    h.showThumbnails = function(a, b, d) {
        var c = Math.floor(g(window).width() *
                0.9),
            e = c,
            k = a.length,
            c = Math.floor(c / k) - (b.thumbMargin + b.thumbBorder * 2) - 1;
        c > 72 && (e = k * (72 + b.thumbMargin + b.thumbBorder * 2));
        c = Math.min(c, 72);
        c = Math.max(c, 32);
        a.css({
            width: Math.round(c) + "px",
            height: Math.round(c) + "px",
            marginRight: b.thumbMargin + "px",
            marginBottom: b.thumbMargin + "px"
        });
        d ? (k = g({
            "div#wdSlideshowThumbs": ""
        }), b.myClass !== null && k.addClass(b.myClass), a.appendTo(k), a.bind("click", function() {
            this.className.indexOf("current") == -1 && h.loadHighRes(this, b)
        })) : k = g("#wdSlideshowThumbs");
        k.css({
            position: "fixed",
            left: "50%",
            bottom: "10px",
            padding: "",
            width: e + "px",
            zIndex: b.zIndexLowest + 1,
            marginLeft: -1 * Math.round(e / 2) + "px"
        });
        d ? k.appendTo("body").fadeIn() : k.fadeIn()
    };
    h.showHighRes = function(a, b) {
        if (b._playing) clearTimeout(b._timeout), b._timeout = setTimeout(function() {
            h.nextImage(b, 1)
        }, b.autoPlayInterval * 1E3);
        var d = Math.round(g(window).height() * 0.85) - 60,
            c = Math.round(g(window).width() * 0.85),
            e = a.width(),
            k = a.height(),
            d = Math.min(c / e, d / k);
        d < 1 && (e = Math.round(e * d), k = Math.round(k * d));
        d = a.clone();
        d.addClass("wdSSHighRes").css({
            width: e +
                "px",
            height: k + "px",
            zIndex: b.zIndexLowest + 2,
            position: "fixed",
            left: "50%",
            top: "50%",
            marginLeft: -1 * Math.round(e / 2) + "px",
            marginTop: -1 * Math.round(k / 2) - 25 + "px"
        }).appendTo("body").fadeIn();
        b.showCaptions && h.showCaption(d, e, k, b)
    };
    h.showCaption = function(a, b, d, c) {
        var e = g("body > div.wdSlideShowCaption");
        e.fadeOut(null, function() {
            e.remove()
        });
        var h = a.offset().top - 16;
        d < 300 && (h -= 32);
        a = a.attr("alt");
        a = g({
            "div.wdSlideShowCaption": {
                span: a
            }
        });
        a.css({
            position: "fixed",
            left: "50%",
            top: h + "px",
            marginLeft: -1 * Math.round(b /
                2) + "px",
            width: b + "px",
            zIndex: c.zIndexLowest + 5
        }).fadeIn();
        a.appendTo("body").fadeIn()
    };
    h.createBlocker = function(a) {
        var b = g({
            "div#wdOverlayBlockout": {
                _attr: {
                    title: a.closeTitle
                },
                _events: {
                    click: function() {
                        a.disableClosing || h.closeAll(a)
                    }
                }
            }
        });
        b.css({
            backgroundColor: a.overlayColour,
            left: 0,
            top: 0,
            width: "100%",
            height: "100%",
            position: "fixed",
            zIndex: a.zIndexLowest
        });
        a.myClass !== null && b.addClass(a.myClass);
        b.appendTo("body");
        if (g._int.browser.handheldDevice) {
            var d = b.width(),
                c = b.height(),
                n = g(e),
                c = Math.max(n.height(),
                    c),
                d = Math.max(n.width(), d);
            b.css({
                width: d + "px",
                height: c + "px"
            })
        }
        return b
    };
    h.resizeAll = function(a) {
        var b = g("div#wdSlideshowPreloader img"),
            d = g("div#wdSlideshowThumbs img");
        h.showThumbnails(d, a, !1);
        var c = g("img.wdSSHighRes");
        c.fadeOut(null, function() {
            c.length > 1 && c.remove()
        });
        g(function() {
            h.showHighRes(b, a)
        }, 10)
    };
    h.closeAll = function(a) {
        clearTimeout(a._timeout);
        g(e).unbind("keyup.wdSlideShow");
        g(window).unbind("resize.wdSlideShow");
        typeof a.onClose == "function" && a.onClose.call(window);
        g("body > div.wdSlideShowCaption").fadeOut(null,
            function() {
                g("body > div.wdSlideShowCaption").remove()
            });
        h.closeContent(a);
        g("img.wdSSHighRes").fadeOut(null, function() {
            g("img.wdSSHighRes").remove()
        });
        g("div#wdSlideshowThumbs").fadeOut(null, function() {
            g("div#wdSlideshowThumbs").remove()
        });
        h.closeOverlay(a);
        g("div#wdSlideshowPreloader").remove()
    };
    h.closeOverlay = function() {
        var a = g("div#wdOverlayBlockout");
        a.fadeOut(null, function() {
            a.remove()
        })
    };
    h.closeContent = function() {
        var a = g("div#wdOverlayContent");
        a.fadeOut(null, function() {
            a.remove()
        })
    };
    h.mergeSettings =
        function(a, b) {
            var d = {},
                c;
            for (c in a) a.hasOwnProperty(c) && (d[c] = a[c]);
            if (typeof b == "undefined") return d;
            for (var e in b) b.hasOwnProperty(e) && (d[e] = b[e]);
            return d
        }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = {};
    e.event = {};
    e.event.publish = function(a, e, f) {
        var b = [],
            d;
        for (d in c) c.hasOwnProperty(d) && d == a && (b = c[d]);
        for (a = b.length; a--;) setTimeout(function(a) {
            return function() {
                a.call(e, f)
            }
        }(b[a].fn), 0)
    };
    e.event.subscribe = function(a, h) {
        typeof c[a] == "undefined" && (c[a] = []);
        if (typeof h == "function") {
            var f = e._int.generateID();
            c[a].push({
                id: f,
                fn: h
            });
            return {
                name: a,
                id: f
            }
        }
    };
    e.event.unsubscribe = function(a, e) {
        if (typeof a == "undefined" || typeof e == "undefined") return !1;
        if (typeof c[a] != "undefined") {
            for (var f =
                    c[a], b = [], d = f.length; d--;) f[d].id != e && b.push(f[d]);
            c[a] = b
        }
    };
    e.event.destroy = function(a) {
        if (typeof a == "undefined") return !1;
        typeof c[a] != "undefined" && (c[a] = [])
    };
    e(function() {
        try {
            e(g).bind("unload", function() {
                for (var a in c) c.hasOwnProperty(a) && (c[a] = null)
            })
        } catch (a) {}
    })
})(window);
(function(g) {
    var e = g.wisDOM,
        c = {};
    e.colour = {};
    e.colour.parse = function(a) {
        var h = {},
            f = function(a, d) {
                d = d || a.hsl;
                a.hsl = d;
                var f = a.hsl[0],
                    f = f < 0 ? 360 + f : f;
                a.hsl[0] = f >= 360 ? f - 360 : f;
                f = a.hsl[1];
                f = f < 0 ? 0 : f;
                a.hsl[1] = f > 1 ? 1 : f;
                f = a.hsl[2];
                f = f < 0 ? 0 : f;
                a.hsl[2] = f > 1 ? 1 : f;
                a.rgb = c.hslToRgb(d);
                a.hex = c.rgbToHex(a.rgb);
                a.brightness = (a.rgb[0] * 299 + a.rgb[1] * 587 + a.rgb[2] * 88) / 1E3;
                a.overlay = a.brightness > 120 ? "#000" : "#FFF"
            };
        h.brighten = function(a) {
            this.hsl[2] += a;
            f(this);
            return this
        };
        h.saturate = function(a) {
            this.hsl[1] += a;
            f(this);
            return this
        };
        h.hueShift = function(a) {
            a = a > 359 ? 359 : a;
            this.hsl[0] += a < -359 ? -359 : a;
            f(this);
            return this
        };
        h.setHue = function(a) {
            a = a >= 360 ? 0 : a;
            this.hsl[0] = a < 0 ? 0 : a;
            f(this);
            return this
        };
        h.setSat = function(a) {
            this.hsl[1] = a;
            f(this);
            return this
        };
        h.setLum = function(a) {
            this.hsl[2] = a;
            f(this);
            return this
        };
        h.reset = function() {
            f(this, this._initVal);
            return this
        };
        h.dupe = function() {
            var a = this.hsl.slice(0);
            return e.colour.parse(a)
        };
        a = typeof a == "string" ? c.hexToHsl(a) : a;
        h._initVal = a;
        f(h, a);
        return h
    };
    c.rgbToHex = function(a) {
        var c = a[0].toString(16),
            c = c.length < 2 ? "0" + c : c,
            f = a[1].toString(16),
            f = f.length < 2 ? "0" + f : f,
            a = a[2].toString(16),
            a = a.length < 2 ? "0" + a : a;
        return "#" + c + f + a
    };
    c.hexToRgb = function(a) {
        var a = c.expandHex(a).replace(/^#/, ""),
            a = a.split(""),
            e = [];
        e[0] = parseInt(a[0] + a[1], 16);
        e[1] = parseInt(a[2] + a[3], 16);
        e[2] = parseInt(a[4] + a[5], 16);
        return e
    };
    c.expandHex = function(a) {
        a = a.replace(/^#/, "");
        a = a.length == 3 ? a.charAt(0) + a.charAt(0) + a.charAt(1) + a.charAt(1) + a.charAt(2) + a.charAt(2) : a;
        return "#" + a
    };
    c.hexToHsl = function(a) {
        a = c.expandHex(a);
        a = c.hexToRgb(a);
        return c.rgbToHsl(a)
    };
    c.hslToHex = function(a) {
        a = c.hslToRgb(a);
        return c.rgbToHex(a)
    };
    c.rgbToHsl = function(a) {
        var c = a[0],
            f = a[1],
            a = a[2];
        c /= 255;
        f /= 255;
        a /= 255;
        var b = Math.max(c, f, a),
            d = Math.min(c, f, a),
            e, g = (b + d) / 2;
        if (b == d) e = d = 0;
        else {
            var k = b - d,
                d = g > 0.5 ? k / (2 - b - d) : k / (b + d);
            switch (b) {
                case c:
                    e = (f - a) / k + (f < a ? 6 : 0);
                    break;
                case f:
                    e = (a - c) / k + 2;
                    break;
                case a:
                    e = (c - f) / k + 4
            }
            e /= 6
        }
        return [e * 360, d, g]
    };
    c.hslToRgb = function(a) {
        var c = a[0] / 360,
            f = a[1],
            b = a[2];
        if (f === 0) f = b = c = b;
        else var a = function(a, b, c) {
                c < 0 && (c += 1);
                c > 1 && (c -= 1);
                if (c < 1 / 6) return a + (b - a) * 6 * c;
                if (c <
                    0.5) return b;
                if (c < 2 / 3) return a + (b - a) * (2 / 3 - c) * 6;
                return a
            },
            d = b < 0.5 ? b * (1 + f) : b + f - b * f,
            e = 2 * b - d,
            f = a(e, d, c + 1 / 3),
            b = a(e, d, c),
            c = a(e, d, c - 1 / 3);
        return [Math.round(f * 255), Math.round(b * 255), Math.round(c * 255)]
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})\.(\d{3})Z$/;
    e.json = {};
    e.json.parse = function(a) {
        try {
            var c;
            typeof g.JSON != "undefined" && typeof g.JSON.parse != "undefined" ? c = g.JSON.parse(a) : /^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "")) && (c = eval("(" + a + ")"));
            return c = e.json.convertDates(c)
        } catch (b) {
            return null
        }
    };
    e.json.stringify = function(a) {
        try {
            if (typeof g.JSON !=
                "undefined" && typeof g.JSON.stringify != "undefined") return g.JSON.stringify(a);
            var f = arguments.callee,
                b = "",
                d = "",
                e = a.constructor;
            thisStr = "";
            switch (e) {
                case Object:
                    var b = "{",
                        d = "}",
                        n;
                    for (n in a) a.hasOwnProperty(n) && typeof a[n] != "function" && (thisStr += '"' + n.replace(/[^\\]"/g, '\\"') + '":', thisStr += f(a[n]), thisStr += ",");
                    break;
                case Array:
                    for (var b = "[", d = "]", k = a.length, l = 0; l < k; l++) thisStr += f(a[l]), thisStr += ",";
                    break;
                case Number:
                    thisStr = a.toString();
                    break;
                case String:
                    d = b = '"';
                    thisStr = a.replace(/[^\\]"/g, '\\"');
                    break;
                case Boolean:
                    thisStr = a.toString();
                    break;
                case Date:
                    d = b = '"';
                    l = a.toString();
                    if (!c.test(l)) {
                        var m, o, q, s, p, x, u;
                        m = a.getUTCFullYear().toString();
                        o = (a.getUTCMonth() + 1).toString();
                        q = a.getUTCDate().toString();
                        s = a.getUTCHours().toString();
                        p = a.getUTCMinutes().toString();
                        x = a.getUTCSeconds().toString();
                        u = a.getUTCMilliseconds().toString();
                        o = o.length == 1 ? "0" + o : o;
                        q = q.length == 1 ? "0" + q : q;
                        s = s.length == 1 ? "0" + s : s;
                        p = p.length == 1 ? "0" + p : p;
                        x = x.length == 1 ? "0" + x : x;
                        if (u.length < 3) {
                            for (var f = "", r = 3 - u.length, k = 0; k < r; k++) f += "0";
                            u = f + u
                        }
                        l = [m, o, q].join("-") + "T" + [s, p, x].join(":") + "." + u + "Z"
                    }
                    thisStr = l
            }
            return (b + thisStr + d).replace(/,(\]|\})/g, "$1")
        } catch (t) {
            return ""
        }
    };
    e.json.convertDates = function(e) {
        var f = a,
            b = arguments.callee,
            d;
        for (d in e)
            if (e.hasOwnProperty(d)) {
                var j = typeof e[d];
                j == "array" || j == "object" ? b(e[d]) : j == "string" && c.test(e[d]) === !0 && (e[d] = f(e[d]))
            }
        return e
    };
    var a = function(a) {
        if (c.test(a) === !1) return a;
        var f = c.exec(a),
            a = parseInt(f[1], 10),
            b = parseInt(f[2], 10),
            d = parseInt(f[3], 10),
            e = parseInt(f[4], 10),
            g = parseInt(f[5], 10),
            k = parseInt(f[6],
                10),
            f = parseInt(f[7], 10),
            l = new Date;
        l.setUTCFullYear(a);
        l.setUTCMonth(b - 1, d);
        l.setUTCDate(d);
        l.setUTCHours(e);
        l.setUTCMinutes(g);
        l.setUTCSeconds(k);
        l.setUTCMilliseconds(f);
        return l
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = {},
        a, h;
    e.hover = e.fn.hover = function(a) {
        var b = this.length,
            d, e = g.wisDOM;
        if (!a || typeof a == "undefined" || this.length === 0) return this;
        for (c.init.call(this); b--;) d = e(this[b]), d._data = c.prepData.call(d, a), c.bindEvents.call(d, d);
        return this
    };
    c.init = function() {
        if (typeof a == "undefined") {
            var c = e({
                "div#wdHoverContainer": {
                    "div.wrapper": {}
                }
            });
            c.css({
                position: "absolute",
                left: "-100000px",
                top: "-10000px"
            });
            c.appendTo("body");
            a = c;
            h = c.find("div.wrapper")
        }
    };
    c.bindEvents = function() {
        var a = this,
            b = "mouseover",
            d = "mouseout",
            j = e._int.browser.touchDevice;
        j && (b = "touchstart", d = "touchend");
        this.bind(b + ".wdHover", function(b) {
            return c.showInclusionHover.call(a, b)
        });
        j === !1 && this.bind(d + ".wdHover", function(b) {
            return c.hideInclusionHover.call(a, b)
        })
    };
    c.showInclusionHover = function(f) {
        c.hideInclusionHover.call(this, f);
        var b = this._data.clone();
        h.empty();
        h.append(b);
        var d = e(g).width(),
            j = e(g).height(),
            n = a.width(),
            k = a.height(),
            l = e._int.checkScroll(g),
            m = e(f.target);
        e._int.browser.touchDevice === !1 ? m.bind("mousemove.wdHover",
            function(b) {
                return c.mouseMove(b, d, j, n, k, l, a)
            }) : (e(function() {
            e("body").bind("touchstart.wdHover", function(a) {
                e("body").unbind("touchstart.wdHover");
                c.hideInclusionHover(a)
            })
        }, 10), e(function() {
            h.append(b);
            c.mouseMove(f, d, j, n, k, l, a)
        }, 100));
        return !1
    };
    c.mouseMove = function(a, b, c, e, h, g, l) {
        var m, o = !1;
        a.touches ? (o = !0, m = a.touches[0].clientX, a = a.touches[0].clientY) : typeof a.clientX != "undefined" ? (m = a.clientX, a = a.clientY) : (m = a.pageX, a = a.pageY);
        g === !1 && (g = {
            x: {
                at: 0
            },
            y: {
                at: 0
            }
        });
        var q = 14;
        o && (m -= g.x.at, a -= g.y.at);
        m + e > b - 20 && (m = b - e);
        a + h > c - 20 && (a -= h, q = -14);
        l.css({
            left: m + -1 + g.x.at + "px",
            top: a + q + g.y.at + "px"
        });
        return !1
    };
    c.hideInclusionHover = function() {
        typeof this._wdVersion != "undefined" && this.unbind("mousemove.wdHover");
        h.empty();
        a.css({
            left: "-10000px",
            top: "-10000px"
        })
    };
    c.prepData = function(a) {
        if (typeof a._wdVersion != "undefined") return a;
        var b = e(a);
        if (b.length > 0 && typeof a == "object") return b;
        if (b.length > 0 && typeof a == "string") return b.clone();
        b = e({
            div: ""
        });
        b.html(a);
        return b.children()
    }
})(window);
(function(g) {
    function e(a, b) {
        return function(c) {
            return j(a.call(this, c), b)
        }
    }

    function c(a) {
        return function(b) {
            return this.lang().ordinal(a.call(this, b))
        }
    }

    function a() {}

    function h(a) {
        b(this, a)
    }

    function f(a) {
        var b = this._data = {},
            c = a.years || a.year || a.y || 0,
            f = a.months || a.month || a.M || 0,
            e = a.weeks || a.week || a.w || 0,
            j = a.days || a.day || a.d || 0,
            m = a.hours || a.hour || a.h || 0,
            o = a.minutes || a.minute || a.m || 0,
            h = a.seconds || a.second || a.s || 0,
            a = a.milliseconds || a.millisecond || a.ms || 0;
        this._milliseconds = a + h * 1E3 + o * 6E4 + m * 36E5;
        this._days =
            j + e * 7;
        this._months = f + c * 12;
        b.milliseconds = a % 1E3;
        h += d(a / 1E3);
        b.seconds = h % 60;
        o += d(h / 60);
        b.minutes = o % 60;
        m += d(o / 60);
        b.hours = m % 24;
        j += d(m / 24);
        j += e * 7;
        b.days = j % 30;
        f += d(j / 30);
        b.months = f % 12;
        c += d(f / 12);
        b.years = c
    }

    function b(a, b) {
        for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
        return a
    }

    function d(a) {
        return a < 0 ? Math.ceil(a) : Math.floor(a)
    }

    function j(a, b) {
        for (var c = a + ""; c.length < b;) c = "0" + c;
        return c
    }

    function n(a, b, c) {
        var d = b._milliseconds,
            f = b._days,
            b = b._months;
        d && a._d.setTime(+a + d * c);
        f && a.date(a.date() + f * c);
        b && (d =
            a.date(), a.date(1).month(a.month() + b * c).date(Math.min(d, a.daysInMonth())))
    }

    function k(a, b) {
        var c = Math.min(a.length, b.length),
            d = Math.abs(a.length - b.length),
            f = 0,
            e;
        for (e = 0; e < c; e++) ~~a[e] !== ~~b[e] && f++;
        return f + d
    }

    function l(a) {
        if (!a) return v.fn._lang;
        !B[a] && C && require("./lang/" + a);
        return B[a]
    }

    function m(a) {
        if (a.match(/\[.*\]/)) return a.replace(/^\[|\]$/g, "");
        return a.replace(/\\/g, "")
    }

    function o(a) {
        var b = a.match(F),
            c, d;
        c = 0;
        for (d = b.length; c < d; c++) b[c] = N[b[c]] ? N[b[c]] : m(b[c]);
        return function(f) {
            var e = "";
            for (c = 0; c < d; c++) e += typeof b[c].call === "function" ? b[c].call(f, a) : b[c];
            return e
        }
    }

    function q(a, b) {
        function c(b) {
            return a.lang().longDateFormat(b) || b
        }
        for (var d = 5; d-- && G.test(b);) b = b.replace(G, c);
        W[b] || (W[b] = o(b));
        return W[b](a)
    }

    function s(a) {
        switch (a) {
            case "DDDD":
                return I;
            case "YYYY":
                return M;
            case "YYYYY":
                return P;
            case "S":
            case "SS":
            case "SSS":
            case "DDD":
                return L;
            case "MMM":
            case "MMMM":
            case "dd":
            case "ddd":
            case "dddd":
            case "a":
            case "A":
                return Q;
            case "X":
                return T;
            case "Z":
            case "ZZ":
                return R;
            case "T":
                return S;
            case "MM":
            case "DD":
            case "YY":
            case "HH":
            case "hh":
            case "mm":
            case "ss":
            case "M":
            case "D":
            case "d":
            case "H":
            case "h":
            case "m":
            case "s":
                return J;
            default:
                return RegExp(a.replace("\\", ""))
        }
    }

    function p(a) {
        var b, c = [];
        if (!a._d) {
            for (b = 0; b < 7; b++) a._a[b] = c[b] = a._a[b] == null ? b === 2 ? 1 : 0 : a._a[b];
            c[3] += a._tzh || 0;
            c[4] += a._tzm || 0;
            b = new Date(0);
            a._useUTC ? (b.setUTCFullYear(c[0], c[1], c[2]), b.setUTCHours(c[3], c[4], c[5], c[6])) : (b.setFullYear(c[0], c[1], c[2]), b.setHours(c[3], c[4], c[5], c[6]));
            a._d = b
        }
    }

    function x(a) {
        var b = a._f.match(F),
            c = a._i,
            d, f;
        a._a = [];
        for (d = 0; d < b.length; d++)
            if ((f = (s(b[d]).exec(c) || [])[0]) && (c = c.slice(c.indexOf(f) + f.length)), N[b[d]]) {
                var e = a,
                    j = void 0,
                    m = e._a;
                switch (b[d]) {
                    case "M":
                    case "MM":
                        m[1] = f == null ? 0 : ~~f - 1;
                        break;
                    case "MMM":
                    case "MMMM":
                        j = l(e._l).monthsParse(f);
                        j != null ? m[1] = j : e._isValid = !1;
                        break;
                    case "D":
                    case "DD":
                    case "DDD":
                    case "DDDD":
                        f != null && (m[2] = ~~f);
                        break;
                    case "YY":
                        m[0] = ~~f + (~~f > 68 ? 1900 : 2E3);
                        break;
                    case "YYYY":
                    case "YYYYY":
                        m[0] = ~~f;
                        break;
                    case "a":
                    case "A":
                        e._isPm = (f + "").toLowerCase() === "pm";
                        break;
                    case "H":
                    case "HH":
                    case "h":
                    case "hh":
                        m[3] = ~~f;
                        break;
                    case "m":
                    case "mm":
                        m[4] = ~~f;
                        break;
                    case "s":
                    case "ss":
                        m[5] = ~~f;
                        break;
                    case "S":
                    case "SS":
                    case "SSS":
                        m[6] = ~~(("0." + f) * 1E3);
                        break;
                    case "X":
                        e._d = new Date(parseFloat(f) * 1E3);
                        break;
                    case "Z":
                    case "ZZ":
                        e._useUTC = !0;
                        if ((j = (f + "").match(Y)) && j[1]) e._tzh = ~~j[1];
                        if (j && j[2]) e._tzm = ~~j[2];
                        if (j && j[0] === "+") e._tzh = -e._tzh, e._tzm = -e._tzm
                }
                if (f == null) e._isValid = !1
            }
        a._isPm && a._a[3] < 12 && (a._a[3] += 12);
        a._isPm === !1 && a._a[3] === 12 && (a._a[3] = 0);
        p(a)
    }

    function u(a, b, c, d, f) {
        return f.relativeTime(b || 1, !!c, a, d)
    }

    function r(a,
        b, c) {
        b = c - b;
        c -= a.day();
        c > b && (c -= 7);
        c < b - 7 && (c += 7);
        return Math.ceil(v(a).add("d", c).dayOfYear() / 7)
    }

    function t(a) {
        var c = a._i,
            d = a._f;
        if (c === null || c === "") return null;
        if (typeof c === "string") a._i = c = l().preparse(c);
        if (v.isMoment(c)) a = b({}, c), a._d = new Date(+c._d);
        else if (d)
            if (Object.prototype.toString.call(d) === "[object Array]") {
                for (var c = a, f, e, j = 99; c._f.length;) {
                    f = b({}, c);
                    f._f = c._f.pop();
                    x(f);
                    d = new h(f);
                    if (d.isValid()) {
                        e = d;
                        break
                    }
                    f = k(f._a, d.toArray());
                    f < j && (j = f, e = d)
                }
                b(c, e)
            } else x(a);
        else if (e = a, c = e._i, d = H.exec(c),
            c === g) e._d = new Date;
        else if (d) e._d = new Date(+d[1]);
        else if (typeof c === "string")
            if (d = e._i, U.exec(d)) {
                e._f = "YYYY-MM-DDT";
                for (c = 0; c < 4; c++)
                    if (V[c][1].exec(d)) {
                        e._f += V[c][0];
                        break
                    }
                R.exec(d) && (e._f += " Z");
                x(e)
            } else e._d = new Date(d);
        else Object.prototype.toString.call(c) === "[object Array]" ? (e._a = c.slice(0), p(e)) : e._d = c instanceof Date ? new Date(+c) : new Date(c);
        return new h(a)
    }

    function z(a, b) {
        v.fn[a] = v.fn[a + "s"] = function(a) {
            var c = this._isUTC ? "UTC" : "";
            return a != null ? (this._d["set" + c + b](a), this) : this._d["get" +
                c + b]()
        }
    }

    function A(a) {
        v.duration.fn[a] = function() {
            return this._data[a]
        }
    }

    function y(a, b) {
        v.duration.fn["as" + a] = function() {
            return +this / b
        }
    }
    for (var v, w = Math.round, E, B = {}, C = typeof module !== "undefined" && module.exports, H = /^\/?Date\((\-?\d+)/i, F = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g, G = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g, J = /\d\d?/, L = /\d{1,3}/, I = /\d{3}/, M = /\d{1,4}/, P = /[+\-]?\d{1,6}/, Q = /[0-9]*[a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF]+\s*?[\u0600-\u06FF]+/i,
            R = /Z|[\+\-]\d\d:?\d\d/i, S = /T/i, T = /[\+\-]?\d+(\.\d{1,3})?/, U = /^\s*\d{4}-\d\d-\d\d((T| )(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/, V = [
                ["HH:mm:ss.S", /(T| )\d\d:\d\d:\d\d\.\d{1,3}/],
                ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
                ["HH:mm", /(T| )\d\d:\d\d/],
                ["HH", /(T| )\d\d/]
            ], Y = /([\+\-]|\d\d)/gi, K = "Month|Date|Hours|Minutes|Seconds|Milliseconds".split("|"), X = {
                Milliseconds: 1,
                Seconds: 1E3,
                Minutes: 6E4,
                Hours: 36E5,
                Days: 864E5,
                Months: 2592E6,
                Years: 31536E6
            }, W = {}, Z = "DDD w W M D d".split(" "), O = "M D H h m s w W".split(" "),
            N = {
                M: function() {
                    return this.month() + 1
                },
                MMM: function(a) {
                    return this.lang().monthsShort(this, a)
                },
                MMMM: function(a) {
                    return this.lang().months(this, a)
                },
                D: function() {
                    return this.date()
                },
                DDD: function() {
                    return this.dayOfYear()
                },
                d: function() {
                    return this.day()
                },
                dd: function(a) {
                    return this.lang().weekdaysMin(this, a)
                },
                ddd: function(a) {
                    return this.lang().weekdaysShort(this, a)
                },
                dddd: function(a) {
                    return this.lang().weekdays(this, a)
                },
                w: function() {
                    return this.week()
                },
                W: function() {
                    return this.isoWeek()
                },
                YY: function() {
                    return j(this.year() %
                        100, 2)
                },
                YYYY: function() {
                    return j(this.year(), 4)
                },
                YYYYY: function() {
                    return j(this.year(), 5)
                },
                a: function() {
                    return this.lang().meridiem(this.hours(), this.minutes(), !0)
                },
                A: function() {
                    return this.lang().meridiem(this.hours(), this.minutes(), !1)
                },
                H: function() {
                    return this.hours()
                },
                h: function() {
                    return this.hours() % 12 || 12
                },
                m: function() {
                    return this.minutes()
                },
                s: function() {
                    return this.seconds()
                },
                S: function() {
                    return ~~(this.milliseconds() / 100)
                },
                SS: function() {
                    return j(~~(this.milliseconds() / 10), 2)
                },
                SSS: function() {
                    return j(this.milliseconds(),
                        3)
                },
                Z: function() {
                    var a = -this.zone(),
                        b = "+";
                    a < 0 && (a = -a, b = "-");
                    return b + j(~~(a / 60), 2) + ":" + j(~~a % 60, 2)
                },
                ZZ: function() {
                    var a = -this.zone(),
                        b = "+";
                    a < 0 && (a = -a, b = "-");
                    return b + j(~~(10 * a / 6), 4)
                },
                X: function() {
                    return this.unix()
                }
            }; Z.length;) E = Z.pop(), N[E + "o"] = c(N[E]);
    for (; O.length;) E = O.pop(), N[E + E] = e(N[E], 2);
    N.DDDD = e(N.DDD, 3);
    a.prototype = {
        set: function(a) {
            var b, c;
            for (c in a) b = a[c], typeof b === "function" ? this[c] = b : this["_" + c] = b
        },
        _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        months: function(a) {
            return this._months[a.month()]
        },
        _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        monthsShort: function(a) {
            return this._monthsShort[a.month()]
        },
        monthsParse: function(a) {
            var b, c;
            if (!this._monthsParse) this._monthsParse = [];
            for (b = 0; b < 12; b++)
                if (this._monthsParse[b] || (c = v([2E3, b]), c = "^" + this.months(c, "") + "|^" + this.monthsShort(c, ""), this._monthsParse[b] = RegExp(c.replace(".", ""), "i")), this._monthsParse[b].test(a)) return b
        },
        _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdays: function(a) {
            return this._weekdays[a.day()]
        },
        _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysShort: function(a) {
            return this._weekdaysShort[a.day()]
        },
        _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        weekdaysMin: function(a) {
            return this._weekdaysMin[a.day()]
        },
        _longDateFormat: {
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D YYYY",
            LLL: "MMMM D YYYY LT",
            LLLL: "dddd, MMMM D YYYY LT"
        },
        longDateFormat: function(a) {
            var b = this._longDateFormat[a];
            !b && this._longDateFormat[a.toUpperCase()] && (b = this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,
                function(a) {
                    return a.slice(1)
                }), this._longDateFormat[a] = b);
            return b
        },
        meridiem: function(a, b, c) {
            return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM"
        },
        _calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[last] dddd [at] LT",
            sameElse: "L"
        },
        calendar: function(a, b) {
            var c = this._calendar[a];
            return typeof c === "function" ? c.apply(b) : c
        },
        _relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        relativeTime: function(a, b, c, d) {
            var f = this._relativeTime[c];
            return typeof f === "function" ? f(a, b, c, d) : f.replace(/%d/i, a)
        },
        pastFuture: function(a, b) {
            var c = this._relativeTime[a > 0 ? "future" : "past"];
            return typeof c === "function" ? c(b) : c.replace(/%s/i, b)
        },
        ordinal: function(a) {
            return this._ordinal.replace("%d", a)
        },
        _ordinal: "%d",
        preparse: function(a) {
            return a
        },
        postformat: function(a) {
            return a
        },
        week: function(a) {
            return r(a, this._week.dow, this._week.doy)
        },
        _week: {
            dow: 0,
            doy: 6
        }
    };
    v = function(a, b, c) {
        return t({
            _i: a,
            _f: b,
            _l: c,
            _isUTC: !1
        })
    };
    v.utc = function(a, b, c) {
        return t({
            _useUTC: !0,
            _isUTC: !0,
            _l: c,
            _i: a,
            _f: b
        })
    };
    v.unix = function(a) {
        return v(a * 1E3)
    };
    v.duration = function(a, b) {
        var c = v.isDuration(a),
            d = typeof a === "number",
            e = c ? a._data : d ? {} : a;
        if (d) b ? e[b] = a : e.milliseconds = a;
        d = new f(e);
        if (c && a.hasOwnProperty("_lang")) d._lang = a._lang;
        return d
    };
    v.version = "2.0.0";
    v.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
    v.lang = function(b, c) {
        if (!b) return v.fn._lang._abbr;
        c ? (c.abbr = b, B[b] || (B[b] =
            new a), B[b].set(c)) : B[b] || l(b);
        v.duration.fn._lang = v.fn._lang = l(b)
    };
    v.langData = function(a) {
        if (a && a._lang && a._lang._abbr) a = a._lang._abbr;
        return l(a)
    };
    v.isMoment = function(a) {
        return a instanceof h
    };
    v.isDuration = function(a) {
        return a instanceof f
    };
    v.fn = h.prototype = {
        clone: function() {
            return v(this)
        },
        valueOf: function() {
            return +this._d
        },
        unix: function() {
            return Math.floor(+this._d / 1E3)
        },
        toString: function() {
            return this.format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
        },
        toDate: function() {
            return this._d
        },
        toJSON: function() {
            return v.utc(this).format("YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
        },
        toArray: function() {
            return [this.year(), this.month(), this.date(), this.hours(), this.minutes(), this.seconds(), this.milliseconds()]
        },
        isValid: function() {
            if (this._isValid == null) this._isValid = this._a ? !k(this._a, (this._isUTC ? v.utc(this._a) : v(this._a)).toArray()) : !isNaN(this._d.getTime());
            return !!this._isValid
        },
        utc: function() {
            this._isUTC = !0;
            return this
        },
        local: function() {
            this._isUTC = !1;
            return this
        },
        format: function(a) {
            a = q(this, a || v.defaultFormat);
            return this.lang().postformat(a)
        },
        add: function(a, b) {
            var c;
            c = typeof a ===
                "string" ? v.duration(+b, a) : v.duration(a, b);
            n(this, c, 1);
            return this
        },
        subtract: function(a, b) {
            var c;
            c = typeof a === "string" ? v.duration(+b, a) : v.duration(a, b);
            n(this, c, -1);
            return this
        },
        diff: function(a, b, c) {
            var a = this._isUTC ? v(a).utc() : v(a).local(),
                f = (this.zone() - a.zone()) * 6E4,
                e;
            b && (b = b.replace(/s$/, ""));
            b === "year" || b === "month" ? (f = (this.daysInMonth() + a.daysInMonth()) * 432E5, e = (this.year() - a.year()) * 12 + (this.month() - a.month()), e += (this - v(this).startOf("month") - (a - v(a).startOf("month"))) / f, b === "year" && (e /= 12)) :
                (f = this - a - f, e = b === "second" ? f / 1E3 : b === "minute" ? f / 6E4 : b === "hour" ? f / 36E5 : b === "day" ? f / 864E5 : b === "week" ? f / 6048E5 : f);
            return c ? e : d(e)
        },
        from: function(a, b) {
            return v.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)
        },
        fromNow: function(a) {
            return this.from(v(), a)
        },
        calendar: function() {
            var a = this.diff(v().startOf("day"), "days", !0);
            return this.format(this.lang().calendar(a < -6 ? "sameElse" : a < -1 ? "lastWeek" : a < 0 ? "lastDay" : a < 1 ? "sameDay" : a < 2 ? "nextDay" : a < 7 ? "nextWeek" : "sameElse", this))
        },
        isLeapYear: function() {
            var a =
                this.year();
            return a % 4 === 0 && a % 100 !== 0 || a % 400 === 0
        },
        isDST: function() {
            return this.zone() < v([this.year()]).zone() || this.zone() < v([this.year(), 5]).zone()
        },
        day: function(a) {
            var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            return a == null ? b : this.add({
                d: a - b
            })
        },
        startOf: function(a) {
            a = a.replace(/s$/, "");
            switch (a) {
                case "year":
                    this.month(0);
                case "month":
                    this.date(1);
                case "week":
                case "day":
                    this.hours(0);
                case "hour":
                    this.minutes(0);
                case "minute":
                    this.seconds(0);
                case "second":
                    this.milliseconds(0)
            }
            a === "week" &&
                this.day(0);
            return this
        },
        endOf: function(a) {
            return this.startOf(a).add(a.replace(/s?$/, "s"), 1).subtract("ms", 1)
        },
        isAfter: function(a, b) {
            b = typeof b !== "undefined" ? b : "millisecond";
            return +this.clone().startOf(b) > +v(a).startOf(b)
        },
        isBefore: function(a, b) {
            b = typeof b !== "undefined" ? b : "millisecond";
            return +this.clone().startOf(b) < +v(a).startOf(b)
        },
        isSame: function(a, b) {
            b = typeof b !== "undefined" ? b : "millisecond";
            return +this.clone().startOf(b) === +v(a).startOf(b)
        },
        zone: function() {
            return this._isUTC ? 0 : this._d.getTimezoneOffset()
        },
        daysInMonth: function() {
            return v.utc([this.year(), this.month() + 1, 0]).date()
        },
        dayOfYear: function(a) {
            var b = w((v(this).startOf("day") - v(this).startOf("year")) / 864E5) + 1;
            return a == null ? b : this.add("d", a - b)
        },
        isoWeek: function(a) {
            var b = r(this, 1, 4);
            return a == null ? b : this.add("d", (a - b) * 7)
        },
        week: function(a) {
            var b = this.lang().week(this);
            return a == null ? b : this.add("d", (a - b) * 7)
        },
        lang: function(a) {
            return a === g ? this._lang : (this._lang = l(a), this)
        }
    };
    for (E = 0; E < K.length; E++) z(K[E].toLowerCase().replace(/s$/, ""), K[E]);
    z("year",
        "FullYear");
    v.fn.days = v.fn.day;
    v.fn.weeks = v.fn.week;
    v.fn.isoWeeks = v.fn.isoWeek;
    v.duration.fn = f.prototype = {
        weeks: function() {
            return d(this.days() / 7)
        },
        valueOf: function() {
            return this._milliseconds + this._days * 864E5 + this._months * 2592E6
        },
        humanize: function(a) {
            var b = +this,
                c;
            c = !a;
            var d = this.lang(),
                f = w(Math.abs(b) / 1E3),
                e = w(f / 60),
                j = w(e / 60),
                m = w(j / 24),
                o = w(m / 365),
                f = f < 45 && ["s", f] || e === 1 && ["m"] || e < 45 && ["mm", e] || j === 1 && ["h"] || j < 22 && ["hh", j] || m === 1 && ["d"] || m <= 25 && ["dd", m] || m <= 45 && ["M"] || m < 345 && ["MM", w(m / 30)] || o === 1 && ["y"] || ["yy", o];
            f[2] = c;
            f[3] = b > 0;
            f[4] = d;
            c = u.apply({}, f);
            a && (c = this.lang().pastFuture(b, c));
            return this.lang().postformat(c)
        },
        lang: v.fn.lang
    };
    for (E in X) X.hasOwnProperty(E) && (y(E, X[E]), A(E.toLowerCase()));
    y("Weeks", 6048E5);
    v.lang("en", {
        ordinal: function(a) {
            var b = a % 10;
            return a + (~~(a % 100 / 10) === 1 ? "th" : b === 1 ? "st" : b === 2 ? "nd" : b === 3 ? "rd" : "th")
        }
    });
    if (C) module.exports = v;
    typeof ender === "undefined" && (this.moment = v);
    typeof define === "function" && define.amd && define("moment", [], function() {
        return v
    })
}).call(this);
(function(g) {
    g.BE = {};
    g.BE.gadget = {};
    var e = g.wisDOM,
        c = g.BE,
        a = [];
    c.gadget.currencyId = "";
    var h = function(d) {
            if (d.vcID == 6) return null;
            var f = c.urls.endpoints.getVcConfig() + "?q=" + d.vcID + (typeof d.isInternal == "undefined" ? "" : "&isInternal=" + (d.isInternal ? "1" : "0")),
                j = function(e) {
                    a[f] = e;
                    var j = {},
                        h;
                    for (h in e.Modules) e.Modules.hasOwnProperty(h) && (j[e.Modules[h].ModuleId] = {
                        description: e.Modules[h].ModuleDesc
                    });
                    d.vcModules = j;
                    if (typeof d.currencyId != "undefined" && d.currencyId !== null) {
                        if (typeof e.CurrencyId != "undefined") c.currencyId =
                            e.CurrencyId;
                        if (typeof c.currencyId === "undefined") c.currencyId = d.currencyId;
                        c.gadget.currencyId = d.currencyId
                    } else if (typeof e.CurrencyId != "undefined") c.currencyId = e.CurrencyId, c.gadget.currencyId = e.CurrencyId;
                    c.reservationOptions = e.ReservationOptions;
                    b(d)
                };
            if (a[f] == null) return e.getJSON(f, j);
            else j(a[f]);
            return null
        },
        f = function(b) {
            b.vcModules = [];
            if (b.productIDs instanceof Array) {
                var d = c.urls.endpoints.getOperatorConfig() + "?OperatorId=" + b.productIDs[0],
                    j = function(f) {
                        a[d] = f;
                        if (typeof f.PaxOptions !=
                            "undefined") b.operatorConfig = {
                            PaxOptions: f.PaxOptions
                        };
                        if (typeof b.currencyId != "undefined" && b.currencyId !== null) c.currencyId = b.currencyId, c.gadget.currencyId = b.currencyId;
                        else if (typeof f.CurrencyId != "undefined") c.currencyId = f.CurrencyId, c.gadget.currencyId = f.CurrencyId;
                        c.reservationOptions = f.ReservationOptions
                    };
                if (a[d] == null) return e.getJSON(d, j);
                else j(a[d]);
                return null
            }
            d = c.urls.endpoints.cartGet() + "&key=" + e.cookie(c.util.cookieName("seSsIoN"));
            j = function(c) {
                a[d] = c;
                if (typeof c.cartcontent != "undefined" &&
                    c.cartcontent.length > 0 && c.cartcontent[0].operatorid) b.productIDs = [c.cartcontent[0].operatorid], f(b)
            };
            if (a[d] == null) return e.getJSON(d, j);
            else j(a[d]);
            return null
        },
        b = function(b) {
            if (typeof b.vcModules != "undefined" && typeof b.vcModules["44"] != "undefined") {
                var d = c.urls.endpoints.getVcEventTracking() + "?q=" + b.vcID,
                    f = function(c) {
                        a[d] = c;
                        b.vcModules["44"].data = c.Events
                    };
                if (a[d] == null) return e.getJSON(d, f);
                else f(a[d])
            }
            return null
        },
        d = function() {
            var b = c.urls.endpoints.getCurrencies(),
                d = function(d) {
                    a[b] = d;
                    c.currencies =
                        d
                };
            if (a[b] == null) return e.getJSON(b, d);
            else d(a[b]);
            return null
        },
        j = !1,
        n = !1,
        k = 0,
        l = [];
    c.gadget.init = function(a, b) {
        if (a.vcID == null)
            if (c.vcID == null) {
                if (k < 5) return k++, e(function() {
                    c.gadget.init(a, b)
                }, 50)
            } else a.vcID = c.vcID;
        else c.vcID = a.vcID;
        if (n) return c.util.performSynchronousOperations(l, function() {
            c.gadget.init(a, b)
        });
        n = !0;
        j || l.push(d(a));
        typeof a.vcID != "undefined" && (a.vcID == 6 ? l.push(f(a, l)) : l.push(h(a)));
        return c.util.performSynchronousOperations(l, function() {
            b instanceof Function && b();
            j = !0;
            n = !1
        })
    }
})(window);
(function(g) {
    var e = g.BE;
    e.urls = {};
    e.urls.css = {};
    e.urls.touch = {};
    e.urls.img = {};
    e.urls.endpoints = {};
    var c = e.urls.css,
        a = e.urls.img,
        h = e.urls.touch,
        e = e.urls.endpoints;
    g.sjp = function() {
        return "//sjp.impartmedia.com/"
    };
    g.cdn = function() {
        return "//gadgets.impartmedia.com/"
    };
    typeof g.BEurlsOverride == "object" && function() {
        var a = g.BEurlsOverride;
        g.cdn = typeof a.cdn == "function" ? a.cdn : g.cdn;
        g.sjp = typeof a.sjp == "function" ? a.sjp : g.sjp;
        try {
            delete g.BEurlsOverride
        } catch (b) {}
    }(g);
    if (typeof g.BEcssOverride == "string" && g.BEcssOverride ==
        "minimal") c.minimal = function() {
        return cdn() + "css/minimal.cssz"
    };
    else if (!(typeof g.BEcssOverride == "string" && g.BEcssOverride == "none")) c.all = function() {
        return cdn() + "css/all.cssz"
    };
    h.mobile_960 = function() {
        return cdn() + "css/mobile_960.cssz"
    };
    h.mobile_740 = function() {
        return cdn() + "css/mobile_740.cssz"
    };
    h.mobile_480 = function() {
        return cdn() + "css/mobile_480.cssz"
    };
    a.mapIconShadow = function() {
        return cdn() + "img/map-marker-shadow.png"
    };
    a.mapIconAccom = function() {
        return cdn() + "img/map-marker-accom.png"
    };
    a.mapIconTours =
        function() {
            return cdn() + "img/map-marker-tours.png"
        };
    a.mapIconEvents = function() {
        return cdn() + "img/map-marker-events.png"
    };
    a.mapIconCarHire = function() {
        return cdn() + "img/map-marker-carhire.png"
    };
    a.mapIconGeneric = function(a) {
        return cdn() + "img/map-marker-generic-" + (a || "a") + ".png"
    };
    a.mapGenericShadow = function() {
        return cdn() + "img/map-shadow-generic.png"
    };
    a.mapVCIcon = function() {
        return cdn() + "img/map-marker-vc-icon.png"
    };
    a.listViewFallback = function(a) {
        return cdn() + "img/list-fallback-" + a + ".jpg"
    };
    a.unloadedImg =
        function() {
            return cdn() + "img/unloaded-img.png"
        };
    e.sjp = function() {
        return sjp()
    };
    e.locality = function() {
        return sjp() + "api/get-locality-grids"
    };
    e.beTypes = function() {
        return sjp() + "be/getAccomAttributes"
    };
    e.beAccomRatesGrid = function() {
        return sjp() + "be/getAccomRatesGrid"
    };
    e.beToursRatesGrid = function() {
        return sjp() + "be/getToursRatesGrid"
    };
    e.beEventsRatesGrid = function() {
        return sjp() + "be/getEventsRatesGrid"
    };
    e.beCarHireRatesGrid = function() {
        return sjp() + "be/getCarHireRatesGrid"
    };
    e.bePackagesRatesGrid = function() {
        return sjp() +
            "be/getPackages"
    };
    e.beAccomRoomDetails = function() {
        return sjp() + "be/getAccomRoomsDetails"
    };
    e.beOpDetailsShort = function() {
        return sjp() + "be/getAccomOperatorsDetailsShort"
    };
    e.getOperatorInformation = function() {
        return sjp() + "be/getOperatorsInformation"
    };
    e.beAccomRatesDetails = function() {
        return sjp() + "be/getAccomRatesDetails"
    };
    e.getAccomRoomDetailsShort = function() {
        return sjp() + "be/getAccomRoomDetailsShort"
    };
    e.getOperatorConfig = function() {
        return sjp() + "be/getOperatorConfig"
    };
    e.getOpDetailsShort = function() {
        return sjp() +
            "be/getOperatorsDetailsShort"
    };
    e.getVisCenData = function() {
        return sjp() + "be/getVcInformation"
    };
    e.getVcCategories = function() {
        return sjp() + "be/getVcOperatorCategories"
    };
    e.getVcLocations = function() {
        return sjp() + "be/getVcLocations"
    };
    e.getVcLocationsHier = function() {
        return sjp() + "be/getVcLocationsHierarchy"
    };
    e.getVcConfig = function() {
        return sjp() + "be/getVcConfig"
    };
    e.getCurrencies = function() {
        return sjp() + "be/getCurrencies?"
    };
    e.getCampaignData = function() {
        return sjp() + "be/getVcCampaigns"
    };
    e.getHearData = function() {
        return sjp() +
            "be/getVcFacilities?FacilityTypeId=11"
    };
    e.getVcCountries = function() {
        return sjp() + "be/getVcCountries"
    };
    e.getVcOnlineBookingFields = function() {
        return sjp() + "be/getVcOnlineBookingFields"
    };
    e.getVcFacilities = function() {
        return sjp() + "be/getVcFacilities"
    };
    e.getVcEventTracking = function() {
        return sjp() + "be/getVcEventTrackingData"
    };
    e.getVcBusinessTypes = function() {
        return sjp() + "be/getVcBusinessTypes"
    };
    e.getVcTripInfo = function() {
        return sjp() + "be/getVcTripInfo"
    };
    e.getTourOpsDetails = function() {
        return sjp() + "be/getToursOperatorTourDetails"
    };
    e.getEventOpsDetails = function() {
        return sjp() + "be/getEventsOperatorEventDetails"
    };
    e.getCarHireVehicles = function() {
        return sjp() + "be/getCarHireVehicles"
    };
    e.getTourManOpData = function() {
        return sjp() + "be/getTmOperatorConfig"
    };
    e.getTourExtraData = function() {
        return sjp() + "be/getTourConfig"
    };
    e.getToursAttributes = function() {
        return sjp() + "be/getToursAttributes"
    };
    e.getBookingQuestions = function() {
        return sjp() + "be/getOperatorBookingQuestions"
    };
    e.getPackageDetails = function() {
        return sjp() + "be/getPackageDetails"
    };
    e.getSessionID = function() {
        return sjp() + "cart/getNewSession"
    };
    e.cartGet = function() {
        return sjp() + "cart/getBECart?q=true"
    };
    e.cartDelete = function() {
        return sjp() + "cart/deleteBECart?q=true"
    };
    e.cartSave = function() {
        return sjp() + "cart/saveBECartPart?q=true"
    };
    e.cartConfirm = function() {
        return sjp() + "cart/getBECartInfo?q=true"
    };
    e.finaliseBooking = function() {
        return sjp() + "cart/saveBEBooking?q=true"
    };
    e.getBooking = function() {
        return sjp() + "cart/getBEBooking?q=true"
    };
    e.acquireLock = function() {
        return sjp() + "be/GetLock?q="
    };
    e.releaseLock = function() {
        return sjp() + "be/ReleaseLock?q="
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.document,
        a = g.BE,
        h = c.getElementsByTagName("head")[0];
    a.util = {};
    a.util.date = {};
    a.util.date.names = {};
    a.util.data = {};
    a.util.mobileMode = function() {
        if (!e._int.browser.handheldDevice) return !1;
        a._isMobile = !0;
        var c = e(h);
        c.append({
            meta: {
                _attr: {
                    name: "viewport",
                    content: "width=device-width, minimum-scale=1.0, maximum-scale=1.0"
                }
            }
        });
        var b = a.urls.touch,
            d, j;
        for (j in b) b.hasOwnProperty(j) && (d = j.replace(/.*_(\d+)$/g, "$1"), c.append({
            link: {
                _attr: {
                    href: b[j](),
                    media: "only all and (max-width: " +
                        d + "px)",
                    rel: "stylesheet"
                }
            }
        }));
        e("body").addClass("BE-mobileMode")
    };
    a.util.addStylesheet = function(a, b) {
        var d = c.createElement("link");
        d.setAttribute("rel", "stylesheet");
        d.setAttribute("media", b || "screen,print");
        d.setAttribute("href", a);
        h.appendChild(d)
    };
    a.util.exists = function(a) {
        return typeof a == "undefined" ? !1 : !0
    };
    a.util.mergeObjects = function(a, b) {
        var c = {},
            e;
        for (e in b) b.hasOwnProperty(e) && (c[e] = b[e]);
        for (e in a) a.hasOwnProperty(e) && (c[e] = a[e]);
        return c
    };
    a.util.buildParamString = function(a) {
        var b = [],
            c;
        for (c in a) a.hasOwnProperty(c) && b.push("&" + c + "=" + a[c]);
        return b.join("")
    };
    a.util.date.addDays = function(c, b) {
        typeof b == "string" && (b = parseInt(b, 10));
        typeof c == "string" && (c = a.util.date.parseStr(c));
        var d = c.getTime();
        d += b * 864E5;
        return new Date(d)
    };
    a.util.date.parseStr = function(a, b) {
        var b = b || "dd/mm/yyyy",
            c = /^.*(\d{2})\D+(\d{2})\D+(\d{4}).*$/.exec(a),
            e = parseInt(c[1], 10),
            h = parseInt(c[2], 10),
            g = parseInt(c[3], 10);
        if (h > 12 || b.indexOf("m") < 2) e = parseInt(c[2], 10), h = parseInt(c[1], 10);
        return new Date(Date.UTC(g,
            h - 1, e, 0, 0, 0, 0))
    };
    a.util.stripTags = function(a) {
        if (!a) return "";
        return a.replace(/<(\/{0,1})[a-zA-Z]+\s*([a-zA-z]+=('|")(.*)('|")\s*)*\/{0,1}>/g, " ").replace(/\s{2,}/g, " ")
    };
    a.util.date.names.days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    a.util.date.names.getDay = function(c, b) {
        var d = parseInt(c, 10),
            e;
        !isNaN(d) && d <= 7 && d > 0 && (e = a.util.date.names.days[d - 1]);
        b && (e = e.substr(0, 3));
        return e
    };
    a.util.date.names.months = ["January", "February", "March", "April", "May", "June", "July", "August",
        "September", "October", "November", "December"
    ];
    a.util.date.names.getMonth = function(c, b) {
        var d = parseInt(c, 10),
            e;
        !isNaN(d) && d <= 12 && d > 0 && (e = a.util.date.names.months[d - 1]);
        b && (e = e.substr(0, 3));
        return e
    };
    a.util.cookieName = function(a) {
        a = a || "g37t0D4cHo9P3r";
        a += "pR081eM";
        for (var a = a.split(""), b = a.length, c; b--;) b - 1 > -1 && b % 2 === 0 && (c = a[b], a[b] = a[b - 1], a[b - 1] = c);
        a = a.join("");
        b = new Date;
        b = [a, b.getFullYear(), b.getMonth() + 1, b.getDate(), b.getTimezoneOffset()].join(".");
        c = b.length;
        var e = [],
            h = Math.round(255 / a.charCodeAt(0)) *
            3,
            g = 0;
        for (isNaN(h) && (h = 1); c--;) a = b.charCodeAt(c) - 1, g = c % 2 === 0 ? 2 : 0, a = Math.round(a / 127 * 74) + 47 + h + g, e.push(String.fromCharCode(a));
        return e.join("").replace(/(^\d+|[^0-9a-zA-Z])/g, "").substr(1, 32)
    };
    a.util.hasClass = function(a, b) {
        var c = e(a).attr("class").split(" ");
        if (c.length == 0) return !1;
        for (var j = 0, h = c.length; j < h; j++)
            if (c[j].trim() == b) return !0;
        return !1
    };
    a.util.existsInArray = function(a, b, c) {
        for (var e = 0; e < b.length; e++)
            if (c(a, b[e])) return !0;
        return !1
    };
    a.util.grep = function(a, b) {
        for (var c = [], e = 0; e < a.length; e++) {
            var h =
                a[e];
            b(h) && c.push(h)
        }
        return c
    };
    a.util.map = function(a, b) {
        for (var c = [], e = 0; e < a.length; e++) c.push(b(a[e], e));
        return c
    };
    a.util.last = function(c) {
        if (a.util.exists(c) && c.length !== 0) return c[c.length - 1]
    };
    a.util.each = function(c, b) {
        if (a.util.exists(c))
            for (var d = 0; d < c.length; d++)
                if (!1 === b(d, c[d])) break
    };
    a.util.distinct = function(c, b) {
        var d = [];
        a.util.each(c, function(c, e) {
            a.util.existsInArray(e, d, b) || d.push(e)
        });
        return d
    };
    a.util.first = function(a) {
        if (typeof a !== "undefined" && a.length !== 0) return a[0]
    };
    a.util.copyArray =
        function(c) {
            var b = [];
            a.util.each(c, function(a, c) {
                b.push(c)
            });
            return b
        };
    a.util.copyObject = function(c) {
        return a.util.mergeObjects(c, {})
    };
    a.util.all = function(a, b) {
        if (typeof a == "undefined") return !1;
        for (var c = 0; c < a.length; c++)
            if (!b(a[c])) return !1;
        return !0
    };
    a.util.any = function(a, b) {
        if (typeof a == "undefined") return !1;
        for (var c = 0; c < a.length; c++)
            if (b(a[c])) return !0;
        return !1
    };
    a.util.min = function(a, b) {
        if (typeof a == "undefined") return b;
        if (a.length === 0) return b;
        for (var c = !0, e = void 0, h = 0; h < a.length; h++) {
            var g = a[h];
            c ? (e = g, c = !1) : g < e && (e = g)
        }
        return typeof e === "undefined" ? b : e
    };
    a.util.performSynchronousOperations = function(a, b) {
        if (!1 !== a instanceof Array) var c = g.setInterval(function() {
            for (var e = !0, h = 0; h < a.length; h++)
                if (!(typeof a[h] == "undefined" || a[h] === null) && typeof g[a[h].id] !== "undefined") {
                    e = !1;
                    break
                }
            e && (g.clearInterval(c), b instanceof Function && b())
        }, 1)
    };
    a.currencies = null;
    a.util.autoSizeSelect = function(a) {
        var b = Math.random().toString().substring(2),
            c = e(a).find('[value="' + e(a).val() + '"]').text(),
            c = {
                select: {
                    _attr: {
                        id: b
                    },
                    option: c
                }
            };
        e("body").append(c);
        e("#" + b).css(getComputedStyle(e(a)[0]));
        e("#" + b).width("auto");
        e(a).width(e("#" + b).width() + "px");
        e("#" + b).remove()
    };
    a.util.currencies = function() {
        var c = {
                "long": "Long",
                "short": "Short"
            },
            b = {
                beginning: "Beginning",
                end: "End"
            },
            d = {
                symbol: "Symbol",
                parenthesis: "Parenthesis"
            },
            e = function(a, b) {
                return Math.round(a * Math.pow(10, b)) / Math.pow(10, b)
            },
            h = function(b) {
                for (var c = null, d = 0; d < a.currencies.length; d++) {
                    var e = a.currencies[d];
                    if (e.CurrencyId === b) {
                        c = e.ExchangeRate;
                        break
                    }
                }
                return c
            },
            g = function(g, m, o) {
                if (m == null) m = a.gadget.currencyId;
                o == null && (o = c["long"]);
                for (var q = null, k = 0; k < a.currencies.length; k++) {
                    var p = a.currencies[k];
                    if (p.CurrencyId === m) {
                        q = p.LongCurrencyFormat;
                        if (o === c["short"]) q = p.ShortCurrencyFormat;
                        break
                    }
                }
                o = q;
                if (o == null) return g;
                q = h(a.currencyId);
                k = h(m);
                if (q == null || k == null) return g;
                a.currencyId !== m && (g = e(g / q * k, 0));
                m = "";
                g = e(g, o.RemainderMaxLength + 1);
                g > 0 ? g = Math.ceil((o.Divisor === 0 ? g : g / o.Divisor) * Math.pow(10, o.RemainderMaxLength + 1)) / Math.pow(10, o.RemainderMaxLength + 1) : g <
                    0 && (g = Math.floor((o.Divisor === 0 ? g : g / o.Divisor) * Math.pow(10, o.RemainderMaxLength)) / Math.pow(10, o.RemainderMaxLength));
                if (g < 0) switch (o.NegativeType) {
                    case d.symbol:
                        m += "-";
                        break;
                    case d.parenthesis:
                        m += "("
                }
                o.CurrencySymbolPosition === b.beginning && (m += o.CurrencySymbol, o.CurrencySymbolIncludeWhitespace && (m += " "));
                if (o.Grouping > 0 && o.GroupingSymbol !== "") {
                    q = Math.floor(Math.abs(g)).toString();
                    for (k = []; q.length > 0;) p = q.length - (o.Grouping > q.length ? q.length : o.Grouping), k.splice(0, 0, q.substring(p)), q = q.substring(0,
                        p);
                    m += k.join(o.GroupingSymbol)
                } else m += Math.floor(Math.abs(g)).toString();
                q = e(Math.abs(g) - Math.floor(Math.abs(g)), o.RemainderMaxLength);
                if (Math.abs(q) > 0 || o.RemainderHideIfZero === !1 && o.RemainderMinLength > 0) {
                    q = q.toString();
                    for (q.indexOf(".") > -1 && (q = q.substring(q.indexOf(".") + 1)); q.length < o.RemainderMinLength;) q += "0";
                    m += o.RemainderSymbol;
                    m += q
                }
                o.Divisor !== 0 && (m += o.DivisorSymbol);
                o.CurrencySymbolPosition === b.end && (o.CurrencySymbolIncludeWhitespace && (m += " "), m += o.CurrencySymbol);
                g < 0 && o.NegativeType === d.symbol &&
                    (m += ")");
                return m
            };
        return {
            format: function(a, b) {
                return g(a, b, c["long"])
            },
            formatShort: function(a, b) {
                return g(a, b, c["short"])
            },
            getCurrencies: function() {
                return a.currencies
            }
        }
    }()
})(window);
(function(g) {
    var e = g.document,
        c = BE.urls.css,
        a = BE.util.addStylesheet,
        h;
    h = setInterval(function() {
        e.body !== null && (clearInterval(h), typeof e.compatMode != "undefined" && e.compatMode != "CSS1Compat" && (e.body.className += " BE_quirksMode"), typeof g.orientation != "undefined" && (e.body.className += " BE_handHeld"), (g.devicePixelRatio || 1) >= 1.5 && (e.body.className += " BE_highDefinition"))
    }, 10);
    for (var f in c) c.hasOwnProperty(f) && a(c[f]())
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = c.util.cookieName("seSsIoN");
    c.session = {};
    c.session.get = function(f) {
        if ((a.getParameterByName("AgentId") || "") != "") c.agentId != (a.getParameterByName("AgentId") || "") && c.session.destroy();
        if (!f || typeof f != "function") return !1;
        g.name.indexOf("BE-Session-Key") != -1 && e.cookie(h, g.name.split("=")[1]);
        e.cookie(h) ? f.call(g, e.cookie(h)) : a.create(f);
        return !0
    };
    c.session.destroy = function() {
        e.cookie.remove(h)
    };
    a.getParameterByName = function(a) {
        a = a.replace(/[\[]/, "\\[").replace(/[\]]/,
            "\\]");
        a = RegExp("[\\?&]" + a + "=([^&#]*)").exec(location.search);
        return a == null ? "" : decodeURIComponent(a[1].replace(/\+/g, " "))
    };
    a.create = function(f) {
        c.agentId = a.getParameterByName("AgentId");
        c.agentType = a.getParameterByName("AgentType");
        var b = c.urls.endpoints.getSessionID() + "?q=true" + (c.agentId == "" ? "" : "&agentId=" + c.agentId) + (c.agentType == "" ? "" : "&agentType=" + c.agentType);
        e.getJSON(b, function(a) {
            a = a.SessionId;
            e.cookie(h, a);
            f.call(g, a)
        })
    }
})(window);
(function(g) {
    g.BE.text = {};
    g = g.BE.text;
    g.cartKeys = {
        type: "Type",
        startdate: "Start Date",
        period: "Days/Nights",
        quotedprice: "Quoted Price",
        adults: "Adults",
        children: "Children",
        infants: "Infants",
        concessions: "Concessions",
        students: "Students",
        observers: "Observers",
        family: "Family",
        quantity: "Quantity"
    };
    g.typeLookup = {
        accom: "Accommodation",
        tours: "Tours",
        events: "Events",
        carhire: "Car Hire",
        packages: "Packages"
    };
    g.typeIDToString = {
        524: "accom",
        534: "tours",
        548: "events",
        552: "carhire",
        0: "packages"
    };
    g.upsell = "Stay longer to get this Special!";
    g.specials = {
        "": "{1}% Discount",
        LM: "{1}% Last Minute Discount",
        SPY: "Stay for {0} nights, pay for {1}",
        DIS: "{1}% Discount",
        DIV: "${1} Discount"
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h, f, b, d, j, n = e.event.publish;
    a.bq = {};
    a.bq.elements = {};
    var k = function(b, c) {
        var d = e(b);
        if (d.length === 0) return !1;
        d.append({
            "div.shopping-cart BE": ""
        });
        d = d.find("div.shopping-cart");
        c.isBooking && d.addClass("is-booking");
        c.autoCollapse && d.addClass("auto-collapse");
        a.checkCart(d, c);
        a.subscriptions(d, c);
        c.isBooking === !1 && e(function() {
            e(g).bind("focus.BECartGadget", function() {
                e(function() {
                    a.checkCart(d, c)
                }, 250)
            })
        }, 500)
    };
    c.gadget.cart = function(a, b) {
        var d = e(a);
        if (d.length ===
            0) return !1;
        b = c.util.mergeObjects(b, c.gadget.cart.defaults);
        c.gadget.init(b, function() {
            k(a, b)
        });
        return d
    };
    c.gadget.cart.embed = function(a) {
        if (!a) return !1;
        var b = e({
            div: ""
        });
        return c.gadget.cart(b, a)
    };
    c.gadget.cart.save = function(c, d, e) {
        for (var f in c) c.hasOwnProperty(f) && (b[f] = c[f]);
        typeof e != "function" && (e = function() {});
        a.comms.save(b.key, b, d, e)
    };
    c.gadget.cart.destroy = function(b, c) {
        a.comms.destroy(b, c)
    };
    c.gadget.cart.getCart = function(b) {
        c.session.get(function(c) {
            a.comms.getCurrent(c, b)
        })
    };
    a.subscriptions =
        function(b, d) {
            var f = c.gadget.cart.text,
                h = g.wisDOM.event.subscribe,
                n = d.overlaySettings;
            n.useClone = !1;
            h("item.book.click", function(f) {
                j = e(c.gadget.cart.elements.form(f, d)).overlay(n);
                c.gadget.cart.elements.accordian(e(".accordian-container", j), 0, !1);
                a.hideAddToCartIfReseller(j, void 0);
                j.find("div.add-to-cart-form div.AdditionalData").append({
                    div: {
                        _attr: {
                            "class": "RoutesData"
                        }
                    }
                });
                j.find("div.add-to-cart-form div.AdditionalData").append({
                    div: {
                        _attr: {
                            "class": "BookingQuestionsData"
                        }
                    }
                });
                if (f[2] == "accom") a.displayBookingQuestions(b,
                    d, f, j);
                else if (f[2] == "tours" || f[2] == "events") a.getAdditionalTourData(b, d, f, j), a.displayBookingQuestions(b, d, f, j);
                else if (f[2] == "packages") {
                    for (var h = 0; h < f[8].length; h++) f[8][h].type == "tours" && a.getAdditionalTourData(b, d, [null, null, null, {
                        Id: f[8][h].id
                    }, null, null, null, null, null, null, null], j, "div.add-to-cart-form div.packageproducts-item:eq(" + (h + 1) + ") div.packageproducts-additionaldata");
                    c.gadget.cart.elements.accordian(e(".accordian-container", j), 0, !1, !1)
                } else f[2] == "carhire" && c.gadget.cart.elements.accordian(e(".accordian-container",
                    j), 0, !1, !1)
            });
            h("cart.add.click", function(e) {
                var f = this;
                d.reuseBookingQuestions ? c.gadget.cart.getCart(function(j) {
                    j = a.bq.getExistingBq(j, e[1]);
                    if (c.util.exists(j) && c.util.exists(j.bookingQuestionAnswers) && j.bookingQuestionAnswers.length > 0) e[11] = j.bookingQuestionAnswers;
                    a.checkCart(b, d, function() {
                        a.addToCart.apply(f, [e, b, d])
                    })
                }) : a.checkCart(b, d, function() {
                    a.addToCart.apply(f, [e, b, d])
                })
            });
            h("cart.addAndBuy.click", function(e) {
                var f = this;
                d.reuseBookingQuestions ? c.gadget.cart.getCart(function(h) {
                    h = a.bq.getExistingBq(h,
                        e[1]);
                    if (c.util.exists(h) && c.util.exists(h.bookingQuestionAnswers) && h.bookingQuestionAnswers.length > 0) e[11] = h.bookingQuestionAnswers;
                    a.checkCart(b, d, function() {
                        a.addToCart.apply(f, [e, b, d, function() {
                            typeof j != "undefined" && j.close();
                            a.handleBookClick(d, e)
                        }])
                    })
                }) : a.checkCart(b, d, function() {
                    a.addToCart.apply(f, [e, b, d, function() {
                        typeof j != "undefined" && j.close();
                        a.handleBookClick(d, e)
                    }])
                })
            });
            h("cart.remove.click", function(c) {
                confirm(c[0].cartcontent[c[1]].description + f.cartRemoveItemConf) && (a.removeItem(b,
                    c[0], c[1], d), typeof j != "undefined" && j.close())
            });
            h("cart.checkout.click", function(b) {
                a.handleBookClick(d, b)
            });
            h("cart.item.click", function(a) {
                j = e(c.gadget.cart.elements.itemDetails(a, d)).overlay(n)
            });
            h("cart.collapsedbutton.click", function() {
                a.showCollapsedCart(b, d)
            });
            h("cart.confirmation.start", function() {
                a.confirmingCart(this, d)
            });
            h("cart.confirmation.end", function(c) {
                a.confirmedCart(b, d, c)
            })
        };
    a.checkCart = function(e, f, j) {
        n("cart.display.loading.start", g, e);
        c.session.get(function(c) {
            d = c;
            a.comms.getCurrent(c,
                function(d) {
                    if (typeof d.paymentInformation != "undefined") try {
                        delete d.paymentInformation
                    } catch (h) {
                        d.paymentInformation = void 0
                    }
                    n("cart.display.loading.end", g, e);
                    a.buildCartDisplay(d, e, f);
                    b = d;
                    f.isBooking === !0 && a.comms.fetchCancellationPolicies(e, f, d);
                    typeof j == "function" && j.call(g);
                    var k = !1;
                    if (typeof f.externalSearch != "undefined") k = f.externalSearch;
                    if (typeof d.ExternalSearch != "undefined") k = d.ExternalSearch;
                    f.isBooking && (n("cart.confirmation.start", e), a.comms.confirmCurrent(c, f, k, function(a) {
                        n("cart.confirmation.end",
                            e, a)
                    }))
                })
        })
    };
    a.buildCartDisplay = function(b, d, f) {
        d.empty();
        var j = c.gadget.cart.text,
            h = e.event.publish;
        if (typeof b.cartcontent == "undefined" || b.cartcontent.length === 0) return d.append({
            "div.noItems": j.noItems
        }), d;
        var n = b.cartcontent.length,
            k, r, t = c.gadget.cart.elements.cartBase(b, f),
            z = 0;
        f.autoCollapse && (r = n < 10 ? j.cartContains.replace(/\{x\}/, n) : j.cartContainsGreater, t["div.cartItems"].push({
            "div.totalDisplay": {
                a: {
                    _events: {
                        click: function(a) {
                            h("cart.collapsedbutton.click", this, a)
                        }
                    },
                    span: n > 9 ? "9+" : n
                },
                _attr: {
                    title: r
                }
            }
        }));
        f.isBooking && t["div.cartItems"].push({
            h3: c.gadget.cart.text.cartItems
        });
        for (var l = c.util.exists(f.tripPlannerMode) && f.tripPlannerMode, y = 0; y < n; y++) {
            k = b.cartcontent[y];
            var v = n - 1;
            r = {
                div: {
                    _attr: {
                        "class": "item " + k.type
                    },
                    "div.stage": function() {
                        if (!c.util.exists(k.stage)) return {};
                        var a = "";
                        if (l && c.util.exists(c.gadget.tripPlanner.tripData)) {
                            var b = c.util.grep(c.gadget.tripPlanner.tripData.Stages, function(a) {
                                return a.StageId === k.stage.stageId
                            });
                            if (b.length > 0) a = b[0].Name
                        }
                        return {
                            span: a
                        }
                    }(),
                    "div.name": function() {
                        return b.cartcontent[y].type !=
                            "extra" ? {
                                a: {
                                    " ": k.description,
                                    _attr: {
                                        href: "javascript:void(0)"
                                    },
                                    _events: {
                                        click: function(a) {
                                            return function() {
                                                this.blur();
                                                h("cart.item.click", this, [b, a])
                                            }
                                        }(y)
                                    }
                                }
                            } : {
                                span: {
                                    " ": k.description
                                }
                            }
                    }(),
                    "div.price": {
                        _attr: {
                            rel: k.id
                        },
                        label: c.util.currencies.formatShort(parseFloat(k.quotedprice), c.currencyId)
                    },
                    "div.remove": function() {
                        if (!l && b.cartcontent[y].isGroupMaster || l && y === v) return {
                            a: {
                                span: j.cartRemoveItem,
                                _events: {
                                    click: function(a) {
                                        return function() {
                                            h("cart.remove.click", this, [b, a])
                                        }
                                    }(y)
                                }
                            }
                        }
                    }(),
                    "div.operator": {
                        span: k.operatorname
                    }
                }
            };
            if (typeof k.packageProducts == "undefined") {
                if (typeof k.startdate != "undefined" && k.type != "extra") {
                    var w = new Date(k.startdate);
                    w.setHours(w.getHours() + (new Date).getTimezoneOffset() / 60 + (w.getHours() != (new Date).getTimezoneOffset() ? 1 : 0));
                    r.div["div.date-nights"] = [{
                        label: j.labels.date + ":"
                    }, {
                        "": " "
                    }, {
                        "span.dayName": c.util.date.names.getDay(w.getDay() + 1, !0)
                    }, {
                        "": " "
                    }, {
                        "span.date": w.getDate()
                    }, {
                        "": " "
                    }, {
                        "span.month": c.util.date.names.getMonth(w.getMonth() + 1)
                    }, {
                        "": " "
                    }, {
                        "span.year": w.getFullYear()
                    }]
                }
                typeof k.period !=
                    "undefined" && k.type == "accom" && (r.div["div.date-nights"].push({
                        "": ", "
                    }), r.div["div.date-nights"].push({
                        label: j.labels.nights + ":"
                    }), r.div["div.date-nights"].push({
                        "": " "
                    }), r.div["div.date-nights"].push({
                        "span.nights": k.period
                    }));
                typeof k.pickup != "undefined" && (r.div["div.pickup"] = [], r.div["div.pickup"].push({
                    label: j.labels.pickup + ":"
                }), r.div["div.pickup"].push({
                    "": " "
                }), r.div["div.pickup"].push({
                    "span.pickup": k.pickup.name
                }));
                typeof k.dropoff != "undefined" && (r.div["div.dropoff"] = [], r.div["div.dropoff"].push({
                    label: j.labels.dropoff +
                        ":"
                }), r.div["div.dropoff"].push({
                    "": " "
                }), r.div["div.dropoff"].push({
                    "span.dropoff": k.dropoff.name
                }));
                if (typeof k.bookingQuestionAnswers != "undefined") {
                    r.div["div.bookingQuestions"] = [];
                    for (var w = "", E = 0, B = 0; B < k.bookingQuestionAnswers.length; B++) {
                        var C = k.bookingQuestionAnswers[B],
                            H = C.id.split("|"),
                            F = H[1],
                            H = parseInt(H[2]);
                        if (w != F || E != H) r.div["div.bookingQuestions"].push({
                            "div.bookingQuestionSet-title": F + " " + (H + 1)
                        }), w = F, E = H;
                        r.div["div.bookingQuestions"].push({
                            "div.bookingQuestion": {
                                label: C.name + (C.show ?
                                    ": " : ""),
                                span: C.show ? C.values : ""
                            }
                        })
                    }
                }
            } else {
                var G = k.packageProducts;
                r.div["div.PackageProducts"] = [];
                r.div["div.PackageProducts"].push({
                    "div.packageproducts-title": "This package consists of the following products:",
                    "div.packageproducts-items": function() {
                        for (var a = [], b = 0; b < G.length; b++) {
                            var d = G[b];
                            a.push({
                                "div.packageproducts-item": {
                                    "label.packageproducts-operatorname": d.operatorname,
                                    "label.packageproducts-name": d.name,
                                    "div.packageproducts-details": function() {
                                        var a = [];
                                        if (d.type == "accom") {
                                            var b = ["adults",
                                                "children", "infants"
                                            ];
                                            a.push({
                                                "div.packageproducts-detail": {
                                                    label: "Arrival Date",
                                                    span: [{
                                                        "span.dayName": c.util.date.names.getDay(d.startdate.getDay() + 1, !0)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.date": d.startdate.getDate()
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.year": d.startdate.getFullYear()
                                                    }]
                                                }
                                            });
                                            a.push({
                                                "div.packageproducts-detail": {
                                                    label: "Period",
                                                    span: d.period
                                                }
                                            });
                                            for (var e = 0, f; f = b[e]; e++) d[f] != 0 && a.push({
                                                "div.packageproducts-detail": {
                                                    label: j.labels[f],
                                                    span: d[f]
                                                }
                                            })
                                        } else if (d.type ==
                                            "tours") {
                                            b = ["adults", "children", "infants", "concessions", "students", "observers"];
                                            a.push({
                                                "div.packageproducts-detail": {
                                                    label: "Tour Date",
                                                    span: [{
                                                        "span.dayName": c.util.date.names.getDay(d.startdate.getDay() + 1, !0)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.date": d.startdate.getDate()
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.year": d.startdate.getFullYear()
                                                    }]
                                                }
                                            });
                                            for (e = 0; f = b[e]; e++) d[f] != 0 && a.push({
                                                "div.packageproducts-detail": {
                                                    label: j.labels[f],
                                                    span: d[f]
                                                }
                                            });
                                            (d.pickup != null || d.dropoff !=
                                                null) && a.push({
                                                "div.packageproducts-routes": [{
                                                    label: j.labels.pickup,
                                                    span: d.pickup.name
                                                }, {
                                                    label: j.labels.dropoff,
                                                    span: d.dropoff.name
                                                }]
                                            })
                                        } else if (d.type == "events") {
                                            b = ["adults", "children", "infants", "concessions", "students", "observers"];
                                            a.push({
                                                "div.packageproducts-detail": {
                                                    label: "Event Date",
                                                    span: [{
                                                        "span.dayName": c.util.date.names.getDay(d.startdate.getDay() + 1, !0)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.date": d.startdate.getDate()
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.year": d.startdate.getFullYear()
                                                    }]
                                                }
                                            });
                                            for (e = 0; f = b[e]; e++) d[f] != 0 && a.push({
                                                "div.packageproducts-detail": {
                                                    label: j.labels[f],
                                                    span: d[f]
                                                }
                                            });
                                            (d.pickup != null || d.dropoff != null) && a.push({
                                                "div.packageproducts-routes": [{
                                                    label: j.labels.pickup,
                                                    span: d.pickup.name
                                                }, {
                                                    label: j.labels.dropoff,
                                                    span: d.dropoff.name
                                                }]
                                            })
                                        } else if (d.type == "carhire") {
                                            b = ["adults", "children", "infants"];
                                            a.push({
                                                "div.packageproducts-detail": {
                                                    label: "Arrival Date",
                                                    span: [{
                                                        "span.dayName": c.util.date.names.getDay(d.startdate.getDay() + 1, !0)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.date": d.startdate.getDate()
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                                    }, {
                                                        "": " "
                                                    }, {
                                                        "span.year": d.startdate.getFullYear()
                                                    }]
                                                }
                                            });
                                            a.push({
                                                "div.packageproducts-detail": {
                                                    label: "Period",
                                                    span: d.period
                                                }
                                            });
                                            for (e = 0; f = b[e]; e++) d[f] != 0 && a.push({
                                                "div.packageproducts-detail": {
                                                    label: j.labels[f],
                                                    span: d[f]
                                                }
                                            })
                                        }
                                        return a
                                    }()
                                }
                            })
                        }
                        return a
                    }()
                })
            }
            t["div.cartItems"].push(r);
            z += k.quotedprice
        }
        t["div.cartItems"].push({
            "div.total": {
                label: j.cartTotal,
                span: c.util.currencies.formatShort(z, c.currencyId)
            }
        });
        if (f.showBookingTimer ===
            !0 && c.reservationOptions.Expiration > 0) t["div.cartItems"].push({
            "div.expirationDate": ""
        }), a.elapsedMillisecondsInterval != null && g.clearInterval(a.elapsedMillisecondsInterval), a.elapsedMillisecondsInterval = g.setInterval(function() {
            a.displayExpires(b, d, f)
        }, 1E3);
        d.append(t);
        f.showBookingTimer === !0 && a.displayExpires(b, d, f);
        return d
    };
    a.elapsedOffset = 0;
    g.performance = g.performance || {
        offset: Date.now(),
        now: function() {
            return Date.now() - this.offset
        }
    };
    a.displayExpires = function(b, d, f) {
        if (b.cartcontent.length ===
            0 || b.ReservationType == "None") return !1;
        var j = (b.Expires - (performance.now() - a.elapsedOffset)) / 6E4,
            h = Math.floor(j),
            g = Math.floor((j - h) * 60);
        h === 0 && g === 0 && (j = 0);
        var k = "";
        b.ReservationType == "Partial" && (k = ' <label style="cursor: help; color: #888" title="Only accommodation items are\r\ncurrently able to be reserved.">*</label> ');
        j > 0 ? (e("div.expirationDate").removeClass("expired"), e("div.expirationDate").find("label.active").length === 0 && e("div.expirationDate").html('<label class="active">' + c.gadget.cart.text.cartReserved.replace("{0}",
                '<div class="expiry"><div class="minutes"><div class="value">' + h.toString() + '</div><label>Mins</label></div><div class="divider"><div class="value">:</div><label>&nbsp;</label></div><div class="seconds"><div class="value">' + ("00" + g).substring(g.toString().length) + "</div><label>Secs</label></div>" + k + "</div>") + "</label>"), e("div.expirationDate div.minutes div.value").html(h.toString()), e("div.expirationDate div.seconds div.value").html(("00" + g).substring(g.toString().length)), j <= c.reservationOptions.Warning ?
            (e("div.expirationDate").addClass("expiring"), e("div.expirationDate").find("div.actions").length === 0 && e("div.expirationDate").append({
                "div.actions": {
                    button: {
                        "": c.gadget.cart.text.cartExtend,
                        _attr: {
                            type: "button"
                        }
                    },
                    _events: {
                        click: function() {
                            a.comms.save(b.key, b, f, function() {
                                a.checkCart(d, f, function() {
                                    e.event.publish("search.datepicker.change")
                                })
                            })
                        }
                    }
                }
            })) : e("div.expirationDate").removeClass("expiring")) : (e("div.expirationDate").removeClass("expiring").addClass("expired"), e("div.expirationDate").find("label.expired").length ===
            0 && e("div.expirationDate").html('<div class="expired">' + c.gadget.cart.text.cartExpired + "</label>"), e("div.expirationDate").find("label").length === 0 && (e("div.expirationDate").html(c.gadget.cart.text.cartExpired), e("div.expirationDate").append({
                "div.actions": {
                    button: {
                        "": c.gadget.cart.text.cartReserve,
                        _attr: {
                            type: "button"
                        }
                    },
                    _events: {
                        click: function() {
                            a.comms.save(b.key, b, f, function() {
                                a.checkCart(d, f, function() {
                                    e.event.publish("search.datepicker.change")
                                })
                            })
                        }
                    }
                }
            })))
    };
    a.addToCart = function(f, h, k, n) {
        j.find(".addButton").css({
            display: "none"
        });
        j.find(".addProgress").css({
            display: "block"
        });
        var p = b,
            x = f[0],
            u = f[1],
            r = f[2],
            t = f[3],
            z = f[4],
            A = f[5],
            y = f[7],
            v = f[8],
            w = f[9],
            E = f[10],
            B = f[11],
            f = f.stage,
            C = e(this.parentNode.parentNode),
            C = parseInt(C.find("div.quantity span").text(), 10);
        if (c.util.exists(p) && c.util.exists(p.controlId) && p.controlId != x && c.util.exists(p.cartcontent) && p.cartcontent.length > 0) alert("You have tried to book an item controlled by a different visitor centre. Unfortunately this is not possible. Please book the item in your shopping cart first and return to book this product."),
            typeof n == "function" ? n.call(g) : j.close(), j.find(".addProgress").css({
                display: "none"
            }), j.find(".addButton").css({
                display: null
            });
        else {
            if (r == "events") try {
                delete z.period
            } catch (H) {
                z.period = void 0
            }
            p.key = d;
            p.controlId = x;
            if (y) p.CampaignId = parseInt(y, 10);
            if (typeof w != "undefined" && w) p.ExternalSearch = !0;
            if (typeof p.cartcontent == "undefined") p.cartcontent = [];
            isNaN(C) === !0 && (C = 1);
            x = {
                operatorid: u,
                operatorname: A,
                type: r,
                id: t.Id,
                description: t.Name,
                location: g.location.href,
                quantity: C
            };
            if (u = c.util.exists(f) && c.util.exists(f.stageId) &&
                f.stageId > 0) A = c.util.grep(p.cartcontent, function(a) {
                return c.util.exists(a.stage)
            }), x.stage = {
                stageId: f.stageId,
                sort: A.length + 1,
                name: f.stageName | 0
            };
            for (var F in z)
                if (z.hasOwnProperty(F)) F != "date" && F != "nights" && (x[F] = parseInt(z[F], 10)), F == "nights" && (x.period = parseInt(z[F], 10));
            x.startdate = c.util.date.parseStr(z.date);
            x.quotedprice = r == "packages" ? t.Cost : t.Availability.Cost;
            if (E) {
                if (typeof E.pickup != "undefined" && !isNaN(E.pickup.id)) x.pickup = {
                    id: E.pickup.id,
                    name: E.pickup.name
                };
                if (typeof E.dropoff != "undefined" &&
                    !isNaN(E.dropoff.id)) x.dropoff = {
                    id: E.dropoff.id,
                    name: E.dropoff.name
                }
            }
            x.bookingQuestionAnswers = c.util.exists(B) ? B : [];
            if (r == "packages") x.packageProducts = v;
            p = a.applyResellerModuleLogic(p, void 0);
            p.cartcontent.push(x);
            if (u) p.cartcontent = p.cartcontent.sort(function(a, b) {
                return a.sort - b.sort
            });
            l.save(d, p, k, function(b) {
                if (typeof b.error == "undefined") typeof b.message != "undefined" && b.message != null && b.message != "" && alert(b.message), e(function() {
                    a.checkCart(h, k)
                }, 10), typeof n == "function" ? n.call(g) : j.close();
                else if (typeof b.error == "boolean") alert(c.gadget.cart.text.saveError);
                else {
                    var d = c.gadget.cart.text[b.error];
                    d != null ? alert(d) : alert(b.error)
                }
                j.find(".addProgress").css({
                    display: "none"
                });
                j.find(".addButton").css({
                    display: null
                });
                e.event.publish("search.datepicker.change")
            })
        }
    };
    a.applyResellerModuleLogic = function(b, c) {
        if (a.hasResellerModule(c)) b.cartcontent = [];
        return b
    };
    a.hideAddToCartIfReseller = function(b, c) {
        a.hasResellerModule(c) && b.find(".addToCart").css({
            display: "none"
        })
    };
    a.hasResellerModule = function(a) {
        return typeof a !=
            "undefined" && typeof a["67"] != "undefined"
    };
    a.removeItem = function(b, c, d, f) {
        for (var j = c.cartcontent, h = j.length, g = [], r = 0; r < h; r++) r != d && g.push(j[r]);
        c.cartcontent = g;
        l.save(c.key, c, f, function() {
            a.checkCart(b, f, function() {
                e.event.publish("search.datepicker.change")
            });
            g.length === 0 && f.isBooking === !0 && history.back()
        })
    };
    a.showCollapsedCart = function(b, d) {
        var f = e({
                "div.cartInOverlay": {
                    "div.title": c.gadget.cart.text.cartOverlayTitle,
                    "div.cartItems": {}
                }
            }),
            h = e(""),
            g = b.find("div.item"),
            k = d.overlaySettings;
        k.useClone = !1;
        k.onClose = function() {
            j = void 0;
            e(function() {
                a.checkCart(b, d)
            }, 125)
        };
        for (var n = 0, r = g.length; n < r; n++) h.push(g[n]);
        h.push(b.find("div.total")[0]);
        h.push(b.find("div.checkout")[0]);
        h.appendTo(f.find("div.cartItems"));
        j = f.overlay(k)
    };
    a.confirmingCart = function(a) {
        a.addClass("confirming")
    };
    a.confirmedCart = function(b, c, d) {
        b.removeClass("confirming");
        d.IsAvailable === !0 ? a.cartBookable(b, c, d) : a.cartProblem(b, c, d)
    };
    a.cartBookable = function(c, d, f) {
        a.addBookingFees(c, d, f);
        a.addBonds(c, d, f);
        a.updatePrices(c, d,
            f);
        e.event.publish("cart.is.bookable", g, {
            conf: f,
            cart: b
        })
    };
    a.cartProblem = function() {
        alert("An item in your cart has become unavailable. We are unable to continue with this booking.")
    };
    a.updatePrices = function(a, b, d) {
        typeof d.cost != "undefined" && a.find("div.total span").text(c.util.currencies.formatShort(d.cost, c.currencyId));
        if (typeof d.cartcontent != "undefined")
            for (var b = d.cartcontent, a = a.find("div.price"), f, j = 0, h = b.length; j < h; j++) {
                f = b[j];
                d = f.id.toString();
                f = c.util.currencies.formatShort(f.cost, c.currencyId);
                for (var g = 0, r = a.length; g < r; g++) a[g].getAttribute("rel") == d && e(a[g]).find("label").text(f)
            }
    };
    a.addBookingFees = function(a, b, d) {
        var b = a.find("div.total"),
            d = d.fees,
            f = {
                "div.bookingFees": []
            };
        a.find("div.bookingFees").remove();
        if (d.length === 0) return !1;
        for (var j = 0, h = d.length; j < h; j++) a = d[j], f["div.bookingFees"].push({
            "div.fee": {
                label: a.description,
                "span.price": c.util.currencies.formatShort(a.cost, c.currencyId)
            }
        });
        e(f).insertBefore(b)
    };
    a.addBonds = function(a, b, d) {
        if (typeof d.Bond == "undefined" || d.Bond === null) return !1;
        var b = a.find("div.total"),
            f = c.gadget.cart.text,
            j = {
                "div.bonds": [{
                    "div.header": {
                        span: d.Bond.Description
                    }
                }]
            };
        a.find("div.bonds").remove();
        d.Bond.CostDueNow > 0 && j["div.bonds"].push({
            "div.due-now": {
                label: f.bondDueNow,
                "": " ",
                "span.price": c.util.currencies.formatShort(d.Bond.CostDueNow, c.currencyId)
            }
        });
        d.Bond.CostDueLater > 0 && j["div.bonds"].push({
            "div.due-later": {
                label: f.bondDueLater,
                "": " ",
                "span.price": {
                    "": c.util.currencies.formatShort(d.Bond.CostDueLater, c.currencyId),
                    sup: "*"
                },
                "div.details": {
                    "span.mark": "*",
                    "": f.bondDueLaterDet.replace(/\{x\}/g, d.Bond.Period)
                }
            }
        });
        e(j).insertBefore(b)
    };
    a.getAdditionalTourData = function(b, d, f, j, h) {
        var g = f[3].Id,
            g = c.urls.endpoints.getTourExtraData() + "?q=" + g;
        e.getJSON(g, function(c) {
            if (c.NoDataFound === !0) return !1;
            c.Routes && c.Routes.length > 0 && a.showRoutesChooser(b, d, f, j, c, h)
        })
    };
    a.showRoutesChooser = function(a, b, d, f, j, h) {
        for (var a = j.Routes.length, g, r, t = [], k = []; a--;) {
            b = j.Routes[a];
            b = b.Locations;
            for (g = b.length; g--;) d = b[g], r = {
                    id: d.RouteLocationId,
                    name: d.Location,
                    time: d.Time
                }, d.DropOff ?
                k.push(r) : t.push(r)
        }
        j = function(a, b) {
            return [a.name, b.name].sort()[0] == a.name ? -1 : 1
        };
        t.sort(j);
        k.sort(j);
        j = {
            "div.routes-chooser": []
        };
        a = j["div.routes-chooser"];
        t.length > 0 && (b = {
            "div.pickups": {
                "label.required": {
                    "": "Pick up from",
                    "label.indicator": {
                        "": "*",
                        _attr: {
                            title: "Required field"
                        }
                    }
                },
                select: function() {
                    for (var a = [], b = 0, c = t.length; b < c; b++) {
                        var d = t[b].name;
                        d += typeof t[b].time != "undefined" && t[b].time != "" ? " at " + t[b].time : "";
                        a.push({
                            option: {
                                "": d,
                                _attr: {
                                    value: t[b].id,
                                    rel: t[b].name
                                }
                            }
                        })
                    }
                    a._events = {
                        change: function() {
                            for (var a =
                                    e(this).closest("div.routes-chooser").find("div.dropoffs select"), b = a.find("option"), c = b.length, d = null, f = e(this.options[this.selectedIndex]).attr("REL").toLowerCase(); c--;)
                                if (e(b[c]).attr("REL").toLowerCase() == f) {
                                    d = b[c].value;
                                    break
                                }
                            d !== null && a.val(d)
                        }
                    };
                    return a
                }()
            }
        }, a.push(b));
        k.length > 0 && (b = {
            "div.dropoffs": {
                "label.required": {
                    "": "Drop off at",
                    "label.indicator": {
                        "": "*",
                        _attr: {
                            title: "Required field"
                        }
                    }
                },
                select: function() {
                    for (var a = [], b = 0, c = k.length; b < c; b++) {
                        var d = k[b].name;
                        d += typeof k[b].time != "undefined" &&
                            k[b].time != "" ? " at " + k[b].time : "";
                        a.push({
                            option: {
                                "": d,
                                _attr: {
                                    value: k[b].id,
                                    rel: k[b].name
                                }
                            }
                        })
                    }
                    a._events = {
                        change: function() {
                            e(this).closest("div.routes-chooser").find("select").unbind("change")
                        }
                    };
                    return a
                }()
            }
        }, a.push(b));
        h == null && (h = "div.add-to-cart-form div.AdditionalData div.RoutesData");
        j = {
            div: {
                _attr: {
                    "class": "accordian expanded"
                },
                "div.accordian-header": {
                    "": "Pickup / Dropoff Locations",
                    _events: {
                        click: function() {
                            c.gadget.cart.elements.accordian(this, 0)
                        }
                    }
                },
                "div.accordian-content": j
            }
        };
        f.find(h).append(j);
        c.gadget.cart.elements.accordian(e(".accordian-container", f), 0)
    };
    a.displayBookingQuestions = function(b, d, f, j) {
        var h = a.bq.extractOperatorId(f),
            b = a.bq.extractProductId(f),
            g = a.bq.extractPAX(f).adults,
            k = a.bq.extractPAX(f).children,
            r = a.bq.extractPAX(f).infants,
            t = a.bq.extractPAX(f).concessions,
            n = a.bq.extractPAX(f).students,
            l = a.bq.extractPAX(f).observers,
            f = a.bq.extractPAX(f).family,
            y = c.gadget.getSjpEndpoint(h, b, g, k, r, t, n, l, f);
        d.reuseBookingQuestions ? c.gadget.cart.getCart(function(b) {
            typeof a.bq.getExistingBq(b,
                h) === "undefined" ? e.getJSON(y, function(b) {
                a.bq.isJsonValid(b) ? a.renderBookingQuestions(b.BookingQuestions) : c.gadget.cart.elements.accordian(e(".accordian-container", j), 0, !0, !1)
            }) : c.gadget.cart.elements.accordian(e(".accordian-container", j), 0, !0, !1)
        }) : e.getJSON(y, function(b) {
            a.bq.isJsonValid(b) ? a.renderBookingQuestions(b.BookingQuestions) : c.gadget.cart.elements.accordian(e(".accordian-container", j), 0, !0, !1)
        })
    };
    a.bq.getExistingBq = function(a, b) {
        if (typeof a !== "undefined" && typeof a.cartcontent !== "undefined") return c.util.first(c.util.grep(a.cartcontent,
            function(a) {
                return a.operatorid === b && typeof a.bookingQuestionAnswers != "undefined" && a.bookingQuestionAnswers.length > 0
            }))
    };
    c.gadget.getSjpEndpoint = function(a, b, d, e, f, j, h, g, t) {
        return c.urls.endpoints.getBookingQuestions() + "?q=" + a + "&p=" + b + "&adults=" + (d || 0) + "&children=" + (e || 0) + "&infants=" + (f || 0) + "&concessions=" + (j || 0) + "&students=" + (h || 0) + "&observers=" + (g || 0) + "&family=" + (t || 0)
    };
    a.renderBookingQuestions = function(b) {
        b = a.bq.buildBookingQuestionsDiv(b);
        a.bq.attachBookingQuestionsDiv(j, b);
        a.bq.resizeOverlay(j);
        e(".bookingQuestion-answer-field").trigger("change");
        c.gadget.cart.elements.accordian(e(".accordian-container", j), 0, !0, !0)
    };
    a.bq.resizeOverlay = function(a) {
        a.addClass("extraContent")
    };
    a.bq.extractOperatorId = function(a) {
        return a[1]
    };
    a.bq.extractProductId = function(a) {
        return a[3].Id
    };
    a.bq.extractPAX = function(a) {
        return a[4]
    };
    a.bq.attachBookingQuestionsDiv = function(a, b) {
        var c = a.find("div.add-to-cart-form div.AdditionalData div.BookingQuestionsData");
        c.empty();
        c.append(b);
        e("input.bookingQuestion-answer-field").trigger("change")
    };
    a.bq.isJsonValid = function(a) {
        if (a.NoDataFound === !0) return !1;
        if (!(typeof a.BookingQuestions != "undefined" && a.BookingQuestions.length > 0)) return !1;
        return !0
    };
    a.bq.buildBookingQuestionsDiv = function(b) {
        for (var c = [], d = 0, e = b.length; d < e; d++) c.push(a.bq.buildBookingQuestionDiv(b[d]));
        return {
            "div.booking-questions": c
        }
    };
    a.bq.buildBookingQuestionDiv = function(b) {
        for (var d = b.DynamicFormFieldSets, e = [], f = 0; f < d.length; f++) {
            for (var j = d[f].DynamicFormFields, h = [], g = 0; g < j.length; g++) h.push(a.bq.buildBookingQuestionFieldDiv(j[g]));
            e.push({
                "div.bookingQuestionSet": [{
                    "label.bookingQuestionSet-title": d[f].PaxType
                }, {
                    "div.bookingQuestionFields": h
                }]
            })
        }
        return {
            div: {
                _attr: {
                    "class": "bookingQuestion accordian collapsed"
                },
                "div.accordian-header": {
                    "": b.Identifier,
                    _events: {
                        click: function() {
                            c.gadget.cart.elements.accordian(this, 0)
                        }
                    }
                },
                "div.accordian-content": {
                    input: {
                        _attr: {
                            type: "hidden",
                            name: "DynamicFormId",
                            value: b.DynamicFormId
                        }
                    },
                    "div.bookingQuestionSets": e
                }
            }
        }
    };
    a.bq.buildBookingQuestionFieldDiv = function(b) {
        var c = {};
        switch (b.Type) {
            case "HIDDEN":
                c =
                    a.bq.elements.hiddenField(b);
                break;
            case "TEXTBOX":
                c = a.bq.elements.textBoxField(b);
                break;
            case "CHECKBOXLIST":
                c = a.bq.elements.listField("CHECKBOX", b);
                break;
            case "DROPDOWNLIST":
                c = a.bq.elements.dropDownListField(b);
                break;
            case "RADIOBUTTONLIST":
                c = a.bq.elements.listField("RADIO", b)
        }
        return c
    };
    a.bq.valuesContain = function(a, b) {
        for (var c = 0; c < a.length; c++)
            if (a[c][1] == b) return !0;
        return !1
    };
    a.bq.getTextValuePairs = function(a, b) {
        var c = [];
        if (a.indexOf("DATABASE ") > -1) throw "Not Implemented";
        else if (a == "CUSTOM LIST")
            for (var d =
                    b.split("\n"), e = 0; e < d.length; e++) {
                var f = d[e];
                c[c.length] = [f, f]
            } else if (a == "NUMERIC RANGE") {
                d = b.split("|");
                e = d[0];
                d = d[1];
                f = 1;
                for (e > d && (f = -1); e <= d; e += f) c[c.length] = [e, e]
            } else c[c.length] = [b, b];
        return c
    };
    a.bq.elements.renderBookingQuestionFieldTitle = function(a, b) {
        return a.IsRequired ? {
            label: {
                _attr: {
                    "class": "bookingQuestion-title required " + (b || "")
                },
                "": a.Name,
                "label.indicator": {
                    "": "*",
                    _attr: {
                        title: "Required field"
                    }
                }
            }
        } : {
            label: {
                _attr: {
                    "class": "bookingQuestion-title " + (b || "")
                },
                "": a.Name
            }
        }
    };
    a.bq.elements.hiddenField =
        function(b) {
            return [{
                "div.bookingQuestion-container": [a.bq.elements.renderBookingQuestionFieldTitle(b, ""), {
                    "div.bookingQuestion-answers": [{
                        "label.bookingQuestion-answer": [{
                            "input.bookingQuestion-answer-field": {
                                _attr: {
                                    type: "hidden",
                                    name: b.UniqueHash,
                                    value: b.ValuesDefault
                                },
                                _events: {
                                    change: function() {
                                        e("div.bookingQuestion-answer-message." + b.UniqueHash.replace(/\|/g, "-")).html(" ");
                                        e("div.bookingQuestion-answer-actions." + b.UniqueHash.replace(/\|/g, "-")).html(" ");
                                        for (var c = 0; c < b.Actions.length; c++) {
                                            var d =
                                                b.Actions[c];
                                            e(this).val() == d.Values && (e("div.bookingQuestion-answer-message." + b.UniqueHash.replace(/\|/g, "-")).append({
                                                div: d.Message
                                            }), d.Type == "QUESTION" && e("div.bookingQuestion-answer-actions." + b.UniqueHash.replace(/\|/g, "-")).append(a.bq.buildBookingQuestionFieldDiv(d.Effect)))
                                        }
                                    }
                                }
                            }
                        }, {
                            div: {
                                _attr: {
                                    "class": "bookingQuestion-answer-message " + b.UniqueHash.replace(/\|/g, "-")
                                }
                            }
                        }]
                    }]
                }]
            }, {
                div: {
                    _attr: {
                        "class": "bookingQuestion-answer-actions " + b.UniqueHash.replace(/\|/g, "-")
                    }
                }
            }]
        };
    a.bq.elements.textBoxField =
        function(b) {
            return [{
                "div.bookingQuestion-container": [a.bq.elements.renderBookingQuestionFieldTitle(b), {
                    "div.bookingQuestion-answers": [{
                        "label.bookingQuestion-answer": [{
                            "input.bookingQuestion-answer-field": {
                                _attr: {
                                    type: "textbox",
                                    name: b.UniqueHash,
                                    value: b.ValuesDefault
                                },
                                _events: {
                                    change: function() {
                                        e("div.bookingQuestion-answer-message." + b.UniqueHash.replace(/\|/g, "-")).html(" ");
                                        e("div.bookingQuestion-answer-actions." + b.UniqueHash.replace(/\|/g, "-")).html(" ");
                                        for (var c = 0; c < b.Actions.length; c++) {
                                            var d =
                                                b.Actions[c];
                                            e(this).val() == d.Values && (e("div.bookingQuestion-answer-message." + b.UniqueHash.replace(/\|/g, "-")).append({
                                                div: d.Message
                                            }), d.Type == "QUESTION" && e("div.bookingQuestion-answer-actions." + b.UniqueHash.replace(/\|/g, "-")).append(a.bq.buildBookingQuestionFieldDiv(d.Effect)))
                                        }
                                    }
                                }
                            }
                        }, {
                            div: {
                                _attr: {
                                    "class": "bookingQuestion-answer-message " + b.UniqueHash.replace(/\|/g, "-")
                                }
                            }
                        }]
                    }]
                }]
            }, {
                div: {
                    _attr: {
                        "class": "bookingQuestion-answer-actions " + b.UniqueHash.replace(/\|/g, "-")
                    }
                }
            }]
        };
    a.bq.elements.listField = function(b,
        c) {
        for (var d = [], f = a.bq.getTextValuePairs(c.ValuesType, c.Values), j = a.bq.getTextValuePairs(c.ValuesType, c.ValuesDefault), h = 0; h < f.length; h++) {
            var g = f[h][0],
                r = f[h][1],
                t = {
                    type: b,
                    name: c.UniqueHash,
                    value: r
                };
            if (a.bq.valuesContain(j, r)) t.checked = !0;
            d[d.length] = {
                "label.bookingQuestion-answer": [{
                    "input.bookingQuestion-answer-field": {
                        _attr: t,
                        _events: {
                            change: function() {
                                e("div.bookingQuestion-answer-message." + c.UniqueHash.replace(/\|/g, "-")).html(" ");
                                e("div.bookingQuestion-answer-actions." + c.UniqueHash.replace(/\|/g,
                                    "-")).html(" ");
                                for (var b = 0; b < c.Actions.length; b++) {
                                    var d = c.Actions[b],
                                        f;
                                    if (!(f = e(this)[0].checked && e(this).val() == d.Values)) {
                                        f = e('[name="' + e(this)[0].name + '"]');
                                        for (var j = !1, h = 0; h < f.length; h++)
                                            if (f[h].checked) {
                                                j = !0;
                                                break
                                            }
                                        f = !j && d.Values == ""
                                    }
                                    f && (e("div.bookingQuestion-answer-message." + c.UniqueHash.replace(/\|/g, "-")).append({
                                        div: d.Message
                                    }), d.Type == "QUESTION" && e("div.bookingQuestion-answer-actions." + c.UniqueHash.replace(/\|/g, "-")).append(a.bq.buildBookingQuestionFieldDiv(d.Effect)))
                                }
                            }
                        }
                    }
                }, {
                    "span.bookingQuestion-answer-title": g
                }]
            }
        }
        d[d.length] = {
            div: {
                _attr: {
                    "class": "bookingQuestion-answer-message " + c.UniqueHash.replace(/\|/g, "-")
                }
            }
        };
        return [{
            "div.bookingQuestion-container": [a.bq.elements.renderBookingQuestionFieldTitle(c), {
                "div.bookingQuestion-answers": d
            }]
        }, {
            div: {
                _attr: {
                    "class": "bookingQuestion-answer-actions " + c.UniqueHash.replace(/\|/g, "-")
                }
            }
        }]
    };
    a.bq.elements.dropDownListField = function(b) {
        return [{
            "div.bookingQuestion-container": [a.bq.elements.renderBookingQuestionFieldTitle(b), {
                "div.bookingQuestion-answers": [{
                    "label.bookingQuestion-answer": [{
                        "select.bookingQuestion-answer-field": function() {
                            for (var c = [{
                                    _attr: {
                                        name: b.UniqueHash
                                    },
                                    _events: {
                                        change: function() {
                                            e("div.bookingQuestion-answer-message." + b.UniqueHash.replace(/\|/g, "-")).html(" ");
                                            e("div.bookingQuestion-answer-actions." + b.UniqueHash.replace(/\|/g, "-")).html(" ");
                                            for (var c = 0; c < b.Actions.length; c++) {
                                                var d = b.Actions[c];
                                                e(this).val() == d.Values && (e("div.bookingQuestion-answer-message." + b.UniqueHash.replace(/\|/g, "-")).append({
                                                    div: d.Message
                                                }), d.Type == "QUESTION" && e("div.bookingQuestion-answer-actions." + b.UniqueHash.replace(/\|/g, "-")).append(a.bq.buildBookingQuestionFieldDiv(d.Effect)))
                                            }
                                        }
                                    }
                                }, {
                                    option: {
                                        _attr: {
                                            value: ""
                                        }
                                    }
                                }], d = a.bq.getTextValuePairs(b.ValuesType, b.Values), f = 0; f < d.length; f++) {
                                var j = d[f][0],
                                    h = d[f][1],
                                    g = {
                                        value: h
                                    };
                                if (b.ValuesDefault == h) g.selected = !0;
                                c[c.length] = {
                                    option: {
                                        "": j,
                                        _attr: g
                                    }
                                }
                            }
                            return c
                        }()
                    }]
                }, {
                    div: {
                        _attr: {
                            "class": "bookingQuestion-answer-message " + b.UniqueHash.replace(/\|/g, "-")
                        }
                    }
                }]
            }]
        }, {
            div: {
                _attr: {
                    "class": "bookingQuestion-answer-actions " + b.UniqueHash.replace(/\|/g, "-")
                }
            }
        }]
    };
    a.handleBookClick = function(a) {
        c.session.get(function(b) {
            e(function() {
                g.name = "BE-Session-Key=" + b;
                g.location.href = a.bookingURL
            }, 100)
        })
    };
    var l;
    l = a.comms = {};
    l.getCurrent = function(b, d) {
        typeof h != "undefined" && h !== null && h.cancel();
        h = e.getJSON(c.urls.endpoints.cartGet() + "&key=" + b, function(b) {
            a.elapsedOffset = performance.now();
            h = null;
            b.NoDataFound ? d.call(g, {}) : d.call(g, e.json.convertDates(b))
        })
    };
    l.confirmCurrent = function(a, b, d, f) {
        a = c.urls.endpoints.cartConfirm() + "&key=" + a;
        b.campaignID != null && (a += "&campaignID=" + b.campaignID);
        d != null && (a += "&ExternalSearch=" + d);
        b.agentID != null && (a += "&agentID=" + b.agentID);
        b.agentType != null && (a += "&agentType=" + b.agentType);
        e.getJSON(a, function(a) {
            a = e.json.convertDates(a);
            f.call(g, a)
        })
    };
    l.fetchCancellationPolicies = function(a, b, d) {
        if (typeof d.cartcontent == "undefined") return !1;
        var f = e.event.publish,
            j = c.urls.endpoints.getOpDetailsShort(),
            d = d.cartcontent,
            h = "&operators=",
            k = !1,
            r = !1;
        f("cart.comms.cancellation.start", g);
        j += "?q=" + b.vcID;
        for (var a = 0, t = d.length; a < t; a++) d[a].type != "packages" ? (k = !0, h += d[a].operatorid + ",") : r = !0;
        if (k || r) {
            e("body > div.BE_cancellationPolicies").remove();
            var n = e({
                    "div.BE_cancellationPolicies": ""
                }).appendTo("body"),
                l = c.util.stripTags;
            k && (h = h.replace(/,$/, ""), j += h, e.getJSON(j, function(a) {
                for (var b = 0, c = a.length; b < c; b++) typeof a[b].CancellationPolicy != "undefined" && a[b].CancellationPolicy.replace(/(^\s+|\s+$)/, "") && n.append({
                    "div.cancellationPolicy": {
                        "h3.name": a[b].TradingName,
                        "div.policy": l(a[b].CancellationPolicy)
                    }
                });
                r || f("cart.comms.cancellation.end", g)
            }));
            if (r) {
                a = 0;
                for (t = d.length; a < t; a++) {
                    var j = c.urls.endpoints.getPackageDetails() + "?q=" + b.vcID + "&packages=",
                        y = c.urls.endpoints.getOpDetailsShort() + "?q=" + b.vcID + "&operators=";
                    if (d[a].type == "packages") {
                        j += d[a].operatorid + ",";
                        for (h = 0; h < d[a].packageProducts.length; h++) y += d[a].packageProducts[h].operatorid + ","
                    }
                    j = j.replace(/,$/, "");
                    y = y.replace(/,$/, "");
                    e.getJSON(j, function(a) {
                        for (var b = 0, c = a.length; b < c; b++) typeof a[b].TermsAndConditions != "undefined" && a[b].TermsAndConditions.replace(/(^\s+|\s+$)/, "") && n.append({
                            "div.cancellationPolicy": {
                                "h3.name": a[b].Name,
                                "div.policy": l(a[b].TermsAndConditions)
                            }
                        });
                        e.getJSON(y,
                            function(a) {
                                for (var b = 0, c = a.length; b < c; b++) typeof a[b].CancellationPolicy != "undefined" && a[b].CancellationPolicy.replace(/(^\s+|\s+$)/, "") && n.append({
                                    "div.cancellationPolicy": {
                                        "ul.packageProducts": {
                                            "h3.name": a[b].TradingName,
                                            "div.policy": l(a[b].CancellationPolicy)
                                        }
                                    }
                                })
                            })
                    })
                }
                f("cart.comms.cancellation.end", g)
            }
        }
    };
    l.save = function(a, b, d, j) {
        if (typeof b != "undefined" && typeof b.cartcontent != "undefined")
            for (d = 0; d < b.cartcontent.length; d++)
                if (b.cartcontent[d].operatorid == 78196) {
                    c.gadget.book.hasCustomItem = !0;
                    break
                }
        f =
            0;
        for (var a = c.urls.endpoints.cartSave() + "&key=" + a, d = 0, h = [], b = encodeURI(e.json.stringify(b)), b = b.replace(/\?/g, "%3F"), b = b.replace(/&/g, "%26"), b = b.replace(/#/g, "%23"), b = b.replace(/\+/g, "%2B"), b = b.replace(/(.)=(.)/g, "$1%3D$2"), k = 0;; k++) {
            for (var l = b.substr(d, 1500); l.substr(l.length - 2, 2).indexOf("%") > -1;) l = l.substr(0, l.length - 1);
            h[h.length] = l;
            d += l.length;
            if (d >= b.length) break
        }
        a += "&totalParts=" + h.length;
        for (k = 0; k < h.length; k++) e.getJSON(a + "&partNo=" + (k + 1) + "&data=" + h[k], function(a) {
            typeof a == "undefined" ||
                typeof a.error != "undefined" ? (j.call(g, a), n("cart.save.complete", null, !0)) : f++;
            f == h.length && (j.call(g, a), n("cart.save.complete", null, !0))
        })
    };
    l.destroy = function(a, b) {
        c.session.destroy();
        e.getJSON(c.urls.endpoints.cartDelete() + "&key=" + a, b || function() {})
    }
})(window);
(function(g) {
    g.BE.gadget.cart.defaults = {
        bookingURL: "https://" + g.location.host + "/product/book.html",
        isBooking: !1,
        autoCollapse: !1,
        overlaySettings: {
            useBlockout: !0,
            overlayColour: "#777",
            overlayOpacity: 0.5,
            innerBackground: "#FFF",
            zIndexLowest: 1E6,
            width: !1,
            height: !1
        },
        reuseBookingQuestions: !1,
        showBookingTimer: !1
    }
})(window);
(function(g) {
    g.BE.gadget.cart.text = {};
    var e = g.BE.gadget.cart.text;
    e.typeLookup = g.BE.text.typeLookup;
    e.labels = {
        accom: {
            date: "Check in",
            out: "Check out"
        },
        tours: {
            date: "Tour date"
        },
        events: {
            date: "Event date"
        },
        carhire: {
            date: "Pick up date",
            out: "Drop off date"
        },
        packages: {
            date: "Check in",
            out: "Check out"
        },
        price: "Price",
        nights: "Nights",
        pickup: "Pickup",
        dropoff: "Dropoff",
        days: "Days",
        date: "Date",
        adults: "Adults",
        children: "Children",
        infants: "Infants",
        concessions: "Concessions",
        students: "Students",
        observers: "Observers",
        family: "Families(2A2C)",
        total: "Total",
        quantity: "Quantity"
    };
    e.noItems = "You currently don't have any items in your cart";
    e.cartItems = "Cart Items";
    e.addToCart = "Add item to cart";
    e.cartTotal = "Cart total: ";
    e.cartCheckout = "Checkout Now";
    e.checkOutImmediately = "Buy Now";
    e.checkOutReservation = "Request Now";
    e.cartRemoveItem = "Remove item";
    e.cartRemoveItemConf = "\nAre you sure you wish to remove this?";
    e.cartClear = "Clear cart";
    e.cartClearConf = "Are you sure you want to clear your shopping cart?";
    e.saveError = "Sorry there has been a network error, please try again.";
    e.pastDateError = "The selected date is in the past, please select a new date and try again.";
    e.editItem = "View item details";
    e.cartContains = "Your cart contains {x} items.";
    e.cartContainsGreater = "Your cart contains more then 9 items.";
    e.cartOverlayTitle = "Your Cart";
    e.bondDueNow = "Due now";
    e.bondDueLater = "Prior to check-in";
    e.bondDueLaterDet = "Due {x} days before check-in. Not included in the total shown.";
    e.cartReserved = "Complete your booking in {0}";
    e.cartExtend = "I need more time";
    e.cartExpired = "Your cart has expired";
    e.cartReserve = "Attempt to reserve cart"
})(window);
(function(g) {
    g.BE.gadget.cart.elements = {};
    var e = g.wisDOM,
        c = g.BE,
        a = g.BE.gadget.cart.elements,
        h = g.BE.gadget.cart.text,
        f = e.event.publish;
    a.cartBase = function(a, b) {
        var c = {
            "div.cartItems": []
        };
        b.isBooking || c["div.cartItems"].push({
            "div.checkout": {
                a: {
                    span: h.cartCheckout,
                    _events: {
                        click: function() {
                            f("cart.checkout.click", this, a)
                        }
                    }
                }
            }
        });
        return c
    };
    a.extractAdditionalData = function(b, c, f) {
        if (!1 == a.validateAdditionalData(c)) return !1;
        var h = {};
        if (b == "tours" || b == "events") {
            var b = c.closest("div.add-to-cart-form"),
                g = b.find("div.routes-chooser"),
                m = g.find("div.pickups select"),
                g = g.find("div.dropoffs select");
            m.length > 0 && (h = {
                pickup: {
                    id: parseInt(m.val(), 10),
                    name: e(m[0].options[m[0].selectedIndex]).text()
                },
                dropoff: {
                    id: parseInt(g.val(), 10),
                    name: e(g[0].options[g[0].selectedIndex]).text()
                }
            })
        } else if (b == "packages")
            for (var b = c.closest("div.add-to-cart-form"), o = b.find("div.packageproducts-additionaldata"), b = 0; b < o.length; b++) g = o.find("div.routes-chooser"), m = g.find("div.pickups select"), g = g.find("div.dropoffs select"), m.length > 0 && (h = {
                pickup: {
                    id: parseInt(m.val(),
                        10),
                    name: e(m[0].options[m[0].selectedIndex]).text()
                },
                dropoff: {
                    id: parseInt(g.val(), 10),
                    name: e(g[0].options[g[0].selectedIndex]).text()
                }
            });
        f[10] = h;
        b = c.closest("div.add-to-cart-form");
        c = b.find("div.bookingQuestion-container");
        h = [];
        if (c.length > 0)
            for (b = 0; b < c.length; b++) {
                o = e(c[b]);
                m = o.find("label.bookingQuestion-title")[0].childNodes[0].nodeValue;
                o = o.find(".bookingQuestion-answer-field");
                for (g = 0; g < o.length; g++) h = a.setBookingQuestionsDataValue(h, m, o[g])
            }
        f[11] = h;
        return !0
    };
    a.validateAdditionalData = function(b) {
        for (var c =
                "", f = {}, c = b.closest("div.add-to-cart-form").find("div.bookingQuestion-container"), b = !1, h = 0; h < c.length; h++) {
            var g = e(c[h]),
                m = g.find("label.bookingQuestion-title")[0].childNodes[0].nodeValue,
                o = g.find(".bookingQuestion-answer-field"),
                q = g.closest(".bookingQuestion").find(".accordian-header")[0].childNodes[0].nodeValue,
                s = g.closest(".bookingQuestionSet").find(".bookingQuestionSet-title"),
                s = s.length > 0 && s[0].childNodes.length > 0 ? s[0].childNodes[0].nodeValue : "";
            f[q] == null && (f[q] = {});
            f[q][s] == null && (f[q][s] = []);
            if ((g.find("label.bookingQuestion-title").attr("class") || "").toLowerCase().indexOf("required") > -1) {
                for (var p = "", x = 0; x < o.length; x++) {
                    var u = e(o[x]),
                        r = u.val();
                    if ((u.attr("type") || "").toLowerCase() == "checkbox" || (u.attr("type") || "").toLowerCase() == "radio") r = r == "" ? u[0].checked ? "True" : "" : u[0].checked ? r : "";
                    p += r
                }
                p == "" && (!1 == b && (a.accordian(g, 0), u[0].focus(), b = !0), f[q][s][f[q][s].length] = m)
            }
        }
        c = "";
        for (q in f) {
            u = !1;
            for (s in f[q]) f[q][s].length > 0 && (u = !0);
            if (!1 != u)
                for (s in c += "\n" + q + "\n", f[q])
                    if (f[q][s].length !=
                        0)
                        for (var t in s != "" && (c += "    \u00b7 " + s + "\n"), f[q][s]) c += (s == "" ? "    \u00b7 " : "        \u00b7 ") + f[q][s][t] + "\n"
        }
        if (c != "") return alert("The following fields are required:\n" + c), !1;
        return !0
    };
    a.setBookingQuestionsDataValue = function(b, c, f) {
        var f = e(f),
            h = !1,
            g = a.parseBookingQuestionsAnswerFieldValue(f);
        if (g != null) {
            for (var m = 0; m < b.length; m++) b[m].id == f.attr("name") && (b[m].values += (g.length > 0 && b[m].values.length > 0 ? "\n" : "") + g, h = !0);
            h || (b[b.length] = {
                id: f.attr("name"),
                name: c,
                values: g,
                show: !1 == ((f.attr("type") ||
                    "").toLowerCase() == "hidden")
            })
        }
        return b
    };
    a.parseBookingQuestionsAnswerFieldValue = function(a) {
        var a = e(a),
            b = a.val();
        if ((a.attr("type") || "").toLowerCase() == "checkbox" || (a.attr("type") || "").toLowerCase() == "radio") b = b == "" ? a[0].checked ? "True" : "False" : a[0].checked ? b : "";
        return b
    };
    a.form = function(b) {
        var j = b[2],
            g = b[3],
            k = b[4],
            l = parseInt(b[6], 10),
            m = b[8],
            o = {
                adults: parseInt(k.adults, 10),
                children: parseInt(k.children, 10),
                infants: parseInt(k.infants, 10),
                concessions: parseInt(k.concessions, 10),
                students: parseInt(k.students,
                    10),
                observers: parseInt(k.observers, 10),
                family: parseInt(k.family, 10)
            },
            q = {
                "div.add-to-cart-form": {
                    _attr: {
                        "class": "add-to-cart-form accordian-container"
                    },
                    "div.add-to-cart-information": function() {
                        var a = {
                            "div.name": {
                                "span.operator-name": b[5],
                                "": " ",
                                "span.item-name": g.Name
                            },
                            "div.price": {
                                label: h.labels.price,
                                span: c.util.currencies.formatShort(j == "packages" ? g.Cost * l % 1 > 0 ? parseFloat(g.Cost * l).toFixed(2) : parseFloat(g.Cost * l).toFixed(0) : g.Availability.Cost * l % 1 > 0 ? parseFloat(g.Availability.Cost * l).toFixed(2) : parseFloat(g.Availability.Cost *
                                    l).toFixed(0), c.currencyId)
                            },
                            "div.quantity": {
                                label: h.labels.quantity,
                                span: l
                            }
                        };
                        j != "packages" && (a["div.date"] = {
                            label: h.labels[j].date,
                            span: k.date
                        });
                        return a
                    }()
                }
            };
        if (j == "accom" || j == "carhire") q["div.add-to-cart-form"]["div.add-to-cart-information"]["div.dateEnd"] = {
            label: h.labels[j].out,
            span: function() {
                var a = parseInt(k.period, 10),
                    a = c.util.date.addDays(k.date, a);
                return c.util.date.names.getDay(a.getDay() + 1, !0) + " " + a.getDate() + "/" + (a.getMonth() + 1) + "/" + a.getFullYear()
            }()
        };
        j == "accom" && (q["div.add-to-cart-form"]["div.add-to-cart-information"]["div.period"] = {
            label: h.labels.nights,
            span: k.period
        });
        if (j != "carhire" && j != "packages")
            for (var s in o) o.hasOwnProperty(s) && !(j == "accom" && s != "adults" && s != "children" && s != "infants") && (isNaN(o[s]) || o[s] != 0 && (q["div.add-to-cart-form"]["div.add-to-cart-information"]["div." + s] = {
                label: h.labels[s],
                span: o[s]
            }));
        o = q["div.add-to-cart-form"]["div.add-to-cart-information"]["div.AdditionalData"] = {};
        m != null && m.length != null && m.length > 0 && (o["div.PackageProducts"] = {
            "div.packageproducts-title": "This package consists of the following products:",
            "div.packageproducts-items": function() {
                for (var a = [], b = 0; b < m.length; b++) {
                    var d = m[b];
                    a.push({
                        "div.packageproducts-item": {
                            "label.packageproducts-operatorname": d.operatorname,
                            "label.packageproducts-name": d.name,
                            "div.packageproducts-details": function() {
                                var a = [];
                                if (d.type == "accom") {
                                    var b = ["adults", "children", "infants"];
                                    a.push({
                                        "div.packageproducts-detail": {
                                            label: "Arrival Date",
                                            span: [{
                                                "span.dayName": c.util.date.names.getDay(d.startdate.getDay() + 1, !0)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.date": d.startdate.getDate()
                                            }, {
                                                "": " "
                                            }, {
                                                "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.year": d.startdate.getFullYear()
                                            }]
                                        }
                                    });
                                    a.push({
                                        "div.packageproducts-detail": {
                                            label: "Period",
                                            span: d.period
                                        }
                                    });
                                    for (var f = 0, e; e = b[f]; f++) d[e] != 0 && a.push({
                                        "div.packageproducts-detail": {
                                            label: h.labels[e],
                                            span: d[e]
                                        }
                                    })
                                } else if (d.type == "tours") {
                                    b = ["adults", "children", "infants", "concessions", "students", "observers"];
                                    a.push({
                                        "div.packageproducts-detail": {
                                            label: "Tour Date",
                                            span: [{
                                                "span.dayName": c.util.date.names.getDay(d.startdate.getDay() +
                                                    1, !0)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.date": d.startdate.getDate()
                                            }, {
                                                "": " "
                                            }, {
                                                "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.year": d.startdate.getFullYear()
                                            }]
                                        }
                                    });
                                    for (f = 0; e = b[f]; f++) d[e] != 0 && a.push({
                                        "div.packageproducts-detail": {
                                            label: h.labels[e],
                                            span: d[e]
                                        }
                                    })
                                } else if (d.type == "events") {
                                    b = ["adults", "children", "infants", "concessions", "students", "observers"];
                                    a.push({
                                        "div.packageproducts-detail": {
                                            label: "Event Date",
                                            span: [{
                                                "span.dayName": c.util.date.names.getDay(d.startdate.getDay() +
                                                    1, !0)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.date": d.startdate.getDate()
                                            }, {
                                                "": " "
                                            }, {
                                                "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.year": d.startdate.getFullYear()
                                            }]
                                        }
                                    });
                                    for (f = 0; e = b[f]; f++) d[e] != 0 && a.push({
                                        "div.packageproducts-detail": {
                                            label: h.labels[e],
                                            span: d[e]
                                        }
                                    })
                                } else if (d.type == "carhire") {
                                    b = ["adults", "children", "infants"];
                                    a.push({
                                        "div.packageproducts-detail": {
                                            label: "Arrival Date",
                                            span: [{
                                                "span.dayName": c.util.date.names.getDay(d.startdate.getDay() + 1, !0)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.date": d.startdate.getDate()
                                            }, {
                                                "": " "
                                            }, {
                                                "span.month": c.util.date.names.getMonth(d.startdate.getMonth() + 1)
                                            }, {
                                                "": " "
                                            }, {
                                                "span.year": d.startdate.getFullYear()
                                            }]
                                        }
                                    });
                                    a.push({
                                        "div.packageproducts-detail": {
                                            label: "Period",
                                            span: d.period
                                        }
                                    });
                                    for (f = 0; e = b[f]; f++) d[e] != 0 && a.push({
                                        "div.packageproducts-detail": {
                                            label: h.labels[e],
                                            span: d[e]
                                        }
                                    })
                                }
                                return a
                            }(),
                            "div.packageproducts-additionaldata": {}
                        }
                    })
                }
                return a
            }()
        });
        q["div.add-to-cart-form"]["div.addButton"] = {
            "a.next": {
                span: "Next",
                _events: {
                    click: function() {
                        a.accordian(this, 1)
                    }
                }
            },
            "a.checkOutNow": {
                span: g.IsGoldMedal ?
                    h.checkOutImmediately : h.checkOutReservation,
                _events: {
                    click: function() {
                        a.extractAdditionalData(j, e(this), b) && f("cart.addAndBuy.click", this, b)
                    }
                }
            },
            "a.addToCart": {
                span: h.addToCart,
                _events: {
                    click: function() {
                        a.extractAdditionalData(j, e(this), b) && f("cart.add.click", this, b)
                    }
                }
            },
            "a.previous": {
                span: "Previous",
                _events: {
                    click: function() {
                        a.accordian(this, -1)
                    }
                }
            }
        };
        q["div.add-to-cart-form"]["div.addProgress"] = {
            "div.spinner": {
                span: ""
            }
        };
        return q
    };
    a.itemDetails = function(a) {
        var b = {
                "div.item-details": {}
            },
            e = g.BE.text.cartKeys,
            k = a[0].cartcontent[a[1]];
        if (k.type == "events") try {
            delete k.period
        } catch (l) {
            k.period = void 0
        }
        for (var m in k)
            if (k.hasOwnProperty(m) && !(m == "id" || m == "operatorid" || m == "operatorname" || m == "pickup" || m == "dropoff" || m == "bookingQuestionAnswers" || m == "packageProducts" || m == "groupGuid" || m == "groupMaster" || m === "stage" || m == "isGroupMaster")) m == "location" && c.util.exists(c.gadget.tripPlanner) && c.gadget.tripPlanner.isActive || (m == "description" ? b["div.item-details"]["div.name"] = {
                    "span.operator-name": k.operatorname,
                    "": " ",
                    "span.item-name": k.description
                } :
                m == "location" ? b["div.item-details"]["div." + m] = {
                    a: {
                        _attr: {
                            href: k[m]
                        },
                        span: h.editItem
                    }
                } : m == "type" ? b["div.item-details"]["div." + m] = {
                    div: {
                        _attr: {
                            "class": k[m]
                        }
                    }
                } : m == "quotedprice" ? b["div.item-details"]["div.price"] = {
                    label: h.labels.price,
                    span: c.util.currencies.formatShort(k[m], c.currencyId)
                } : k.type != "packages" && (m == "startdate" ? b["div.item-details"]["div.startdate"] = function() {
                    var a = {},
                        b = k[m],
                        d = "";
                    d += c.util.date.names.getDay(b.getDay() + 1, !0) + " ";
                    d += b.getDate() + " ";
                    d += c.util.date.names.getMonth(b.getMonth() +
                        1, !0) + " ";
                    d += b.getFullYear();
                    a.label = e.startdate;
                    a.span = d;
                    return a
                }() : k[m] != 0 && (b["div.item-details"]["div." + m] = [{
                    label: e[m]
                }, {
                    span: k[m].toString()
                }])));
        b["div.item-details"]["div.AdditionalData"] = function() {
            var a = [];
            if (k.type == "tours" || k.type == "events") typeof k.pickup != "undefined" && (a[a.length] = {
                "div.pickup": {
                    label: "Pickup",
                    span: k.pickup.name
                }
            }), typeof k.dropoff != "undefined" && (a[a.length] = {
                "div.dropoff": {
                    label: "Dropoff",
                    span: k.dropoff.name
                }
            });
            k.bookingQuestionAnswers && (a[a.length] = {
                "div.bookingQuestions": function() {
                    for (var a = [], b = "", c = 0, d = 0; d < k.bookingQuestionAnswers.length; d++) {
                        var f = k.bookingQuestionAnswers[d],
                            e = f.id.split("|"),
                            j = e[1],
                            e = parseInt(e[2]);
                        if (b != j || c != e) a[a.length] = {
                            "div.bookingQuestionSet-title": j + " " + (e + 1)
                        }, b = j, c = e;
                        a[a.length] = {
                            "div.bookingQuestion": {
                                label: f.name,
                                span: f.show ? f.values : ""
                            }
                        }
                    }
                    return a
                }()
            });
            if (k.packageProducts != null && k.packageProducts.length != null && k.packageProducts.length > 0) {
                var b = k.packageProducts;
                a[a.length] = {
                    "div.PackageProducts": {
                        "div.packageproducts-title": "This package consists of the following products:",
                        "div.packageproducts-items": function() {
                            for (var a = [], d = 0; d < b.length; d++) {
                                var f = b[d];
                                a.push({
                                    "div.packageproducts-item": {
                                        "label.packageproducts-operatorname": f.operatorname,
                                        "label.packageproducts-name": f.name,
                                        "div.packageproducts-details": function() {
                                            var a = [];
                                            if (f.type == "accom") {
                                                var b = ["adults", "children", "infants"];
                                                a.push({
                                                    "div.packageproducts-detail": {
                                                        label: "Arrival Date",
                                                        span: [{
                                                            "span.dayName": c.util.date.names.getDay(f.startdate.getDay() + 1, !0)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.date": f.startdate.getDate()
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.month": c.util.date.names.getMonth(f.startdate.getMonth() + 1)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.year": f.startdate.getFullYear()
                                                        }]
                                                    }
                                                });
                                                a.push({
                                                    "div.packageproducts-detail": {
                                                        label: "Period",
                                                        span: f.period
                                                    }
                                                });
                                                for (var d = 0, e; e = b[d]; d++) f[e] != 0 && a.push({
                                                    "div.packageproducts-detail": {
                                                        label: h.labels[e],
                                                        span: f[e]
                                                    }
                                                })
                                            } else if (f.type == "tours") {
                                                b = ["adults", "children", "infants", "concessions", "students", "observers"];
                                                a.push({
                                                    "div.packageproducts-detail": {
                                                        label: "Tour Date",
                                                        span: [{
                                                            "span.dayName": c.util.date.names.getDay(f.startdate.getDay() +
                                                                1, !0)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.date": f.startdate.getDate()
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.month": c.util.date.names.getMonth(f.startdate.getMonth() + 1)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.year": f.startdate.getFullYear()
                                                        }]
                                                    }
                                                });
                                                for (d = 0; e = b[d]; d++) f[e] != 0 && a.push({
                                                    "div.packageproducts-detail": {
                                                        label: h.labels[e],
                                                        span: f[e]
                                                    }
                                                })
                                            } else if (f.type == "events") {
                                                b = ["adults", "children", "infants", "concessions", "students", "observers"];
                                                a.push({
                                                    "div.packageproducts-detail": {
                                                        label: "Event Date",
                                                        span: [{
                                                            "span.dayName": c.util.date.names.getDay(f.startdate.getDay() +
                                                                1, !0)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.date": f.startdate.getDate()
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.month": c.util.date.names.getMonth(f.startdate.getMonth() + 1)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.year": f.startdate.getFullYear()
                                                        }]
                                                    }
                                                });
                                                for (d = 0; e = b[d]; d++) f[e] != 0 && a.push({
                                                    "div.packageproducts-detail": {
                                                        label: h.labels[e],
                                                        span: f[e]
                                                    }
                                                })
                                            } else if (f.type == "carhire") {
                                                b = ["adults", "children", "infants"];
                                                a.push({
                                                    "div.packageproducts-detail": {
                                                        label: "Arrival Date",
                                                        span: [{
                                                            "span.dayName": c.util.date.names.getDay(f.startdate.getDay() + 1, !0)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.date": f.startdate.getDate()
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.month": c.util.date.names.getMonth(f.startdate.getMonth() + 1)
                                                        }, {
                                                            "": " "
                                                        }, {
                                                            "span.year": f.startdate.getFullYear()
                                                        }]
                                                    }
                                                });
                                                a.push({
                                                    "div.packageproducts-detail": {
                                                        label: "Period",
                                                        span: f.period
                                                    }
                                                });
                                                for (d = 0; e = b[d]; d++) f[e] != 0 && a.push({
                                                    "div.packageproducts-detail": {
                                                        label: h.labels[e],
                                                        span: f[e]
                                                    }
                                                })
                                            }
                                            return a
                                        }()
                                    }
                                })
                            }
                            return a
                        }()
                    }
                }
            }
            return a
        }();
        k.isGroupMaster && (b["div.item-details"]["div.removeItem"] = {
            a: {
                span: h.cartRemoveItem,
                _events: {
                    click: function() {
                        f("cart.remove.click", this, a)
                    }
                }
            }
        });
        return b
    };
    var b = null;
    a.accordian = function(d, f, h, k) {
        g.clearInterval(b);
        e(".addToCart").css({
            display: "none"
        });
        e(".checkOutNow").css({
            display: "none"
        });
        var l = c.util.hasClass(e(d), "accordian-container") ? e(d) : e(d).closest(".accordian-container"),
            m = e(l).find(".accordian");
        if (m.length === 0 && h === !1 && k === !1 && k !== "undefined") e(".addToCart").css({
            display: "block"
        }), e(".checkOutNow").css({
            display: "block"
        }), e(".previous").css({
            display: "none"
        }), e(".next").css({
            display: "none"
        });
        else if (m.length === 0 && h === !1 && typeof k === "undefined") e(".addToCart").css({
                display: "none"
            }),
            e(".checkOutNow").css({
                display: "none"
            }), e(".previous").css({
                display: "none"
            }), e(".next").css({
                display: "none"
            });
        else if (m.length === 0 && h === !0 && k === !0 && typeof k !== "undefined") e(".addToCart").css({
            display: "none"
        }), e(".checkOutNow").css({
            display: "none"
        }), e(".previous").css({
            display: "none"
        }), e(".next").css({
            display: "none"
        });
        else if (m.length === 0 && h === !0 && k === !1 && typeof k !== "undefined") e(".addToCart").css({
            display: "block"
        }), e(".checkOutNow").css({
            display: "block"
        }), e(".previous").css({
            display: "none"
        }), e(".next").css({
            display: "none"
        });
        else {
            var d = f == 0 ? c.util.hasClass(e(d), "accordian") ? e(d) : e(d).closest(".accordian") : e(l).find(".accordian.expanded"),
                o = -1;
            if (d.length > 0)
                for (h = 0; h < m.length; h++)
                    if (e(m[h]).html() == d.html()) {
                        o = h;
                        break
                    }
            var d = !1,
                q = l.find("div.add-to-cart-information")[0];
            if (f < 0) {
                if (q.scrollTop > 0) q.scrollTop = 0, d = !0
            } else if (f > 0 && q.scrollTop < q.scrollHeight - q.clientHeight) q.scrollTop = q.scrollHeight, d = !0;
            !1 == d && (o += f, o < 0 ? o = 0 : o > m.length - 1 && (o = m.length - 1), l.find(".accordian").removeClass("expanded").addClass("collapsed"), e(m[o]).removeClass("collapsed").addClass("expanded"));
            f != 0 && (q.scrollTop < q.scrollHeight - q.clientHeight ? (b = g.setInterval(function() {
                q.scrollTop == q.scrollHeight - q.clientHeight && (g.clearInterval(b), a.accordian(m[o], 0))
            }, 100), d = !0) : d = !1);
            !1 == d && o == m.length - 1 && (e(".addToCart").css({
                display: "block",
                "pointer-events": "auto",
                "background-color": "#3377cc"
            }), e(".checkOutNow").css({
                display: "block",
                "pointer-events": "auto",
                "background-color": "#229933"
            }));
            o == 0 ? e(".previous").css({
                display: "none"
            }) : e(".previous").css({
                display: "block"
            });
            !1 == d && o == m.length - 1 ? e(".next").css({
                    display: "none"
                }) :
                e(".next").css({
                    display: "block"
                })
        }
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {};
    c.gadget.book = function(h, f) {
        var b = e(h);
        if (b.length === 0) return !1;
        f = c.util.mergeObjects(f, c.gadget.book.defaults);
        c.gadget.init(f, function() {
            c.util.performSynchronousOperations([a.getVisCentreData(b, f), a.getHearOfUsData(b, f), a.getVcCountries(b, f), a.getVcOnlineBookingFields(b, f)], function() {
                var b = f,
                    j = e(h);
                if (j.length !== 0 && (j.empty(), j.append({
                        "div.booking-gadget BE": ""
                    }), j = j.find("div.booking-gadget"), a.subscriptions(j, b), b.automaticCart)) {
                    var g = {
                        isBooking: !0,
                        vcID: b.vcID,
                        campaignID: b.campaignID,
                        ExternalSearch: typeof b.ExternalSearch != "undefined" ? b.ExternalSearch : !1,
                        agentID: b.agentID,
                        agentType: b.agentType,
                        showBookingTimer: b.showBookingTimer
                    };
                    if (b.overlaySettings) g.overlaySettings = b.overlaySettings;
                    c.gadget.cart.embed(g).appendTo(j)
                }
            })
        });
        return b
    };
    a.subscriptions = function(c, f) {
        var b = e.event.subscribe;
        b("cart.confirmation.end", function(a) {
            if (a.cartcontent.length > 0) f.operatorID = a.cartcontent[0].operatorid, f.Deposits = a.Deposits;
            else if (a.packages.length > 0) f.operatorID =
                0, f.Deposits = a.Deposits
        });
        b("cart.is.bookable", function(b) {
            a.showForm(c, f, b)
        });
        b("book.button.click", function(b) {
            a.saveCart(c, f, b)
        });
        b("book.showCancellation.click", function(b) {
            a.showCancellationPolicies(b, f)
        });
        b("book.paymentTypePayPal.click", function(b) {
            a.setPaymentTypePayPal(c, f, b)
        });
        b("book.paymentTypeCreditCard.click", function(b) {
            a.setPaymentTypeCreditCard(c, f, b)
        })
    };
    a.getVisCentreData = function(a, f) {
        var b = arguments.callee,
            d = this,
            j = c.util.exists;
        !j(f.vcID) && j(f.vcModules["64"]) && !j(f.operatorID) &&
            e(function() {
                b.call(d, a, f)
            }, 125);
        var g = c.urls.endpoints.getVisCenData() + "?q=" + f.vcID;
        j(f.vcModules["64"]) && (g = c.urls.endpoints.getTourManOpData() + "?q=" + f.vcID + "&OperatorId=" + f.operatorID);
        return e.getJSON(g, function(a) {
            f.vcData = a
        })
    };
    a.getHearOfUsData = function(a, f) {
        return e.getJSON(c.urls.endpoints.getHearData() + "&q=" + f.vcID, function(a) {
            f.hearData = a.Facilities
        })
    };
    a.getVcCountries = function(a, f) {
        return e.getJSON(c.urls.endpoints.getVcCountries() + "?q=" + f.vcID, function(a) {
            f.vcCountries = a.Countries
        })
    };
    a.getVcOnlineBookingFields = function(a, f) {
        return e.getJSON(c.urls.endpoints.getVcOnlineBookingFields() + "?q=" + f.vcID, function(a) {
            f.VcOnlineBookingFields = a.OnlineBookingFields
        })
    };
    c.gadget.getBookingUrl = function(a, f) {
        var b = c.urls.endpoints.finaliseBooking() + "&key=" + f;
        a.agentID != null && (b += "&agentID=" + a.agentID);
        a.agentType != null && (b += "&agentType=" + a.agentType);
        a.bookedBy != null && (b += "&bookedBy=" + escape(a.bookedBy));
        a.bookingLocation != null && (b += "&bookingLocation=" + escape(a.bookingLocation));
        return b
    };
    a.doBooking =
        function(h, f, b) {
            if (f.demoMode) alert("Sorry, this gadget is in demonstration mode, and won't make a booking");
            else if (e.event.publish("book.finalise.start", g), typeof f.queueBookings != "undefined" && f.queueBookings || typeof c.gadget.book.hasCustomItem != "undefined" && c.gadget.book.hasCustomItem) var d = {
                    loop0: "Your booking is being processed. Due to high demand this may take up to 5 minutes to complete.",
                    loop5: "We thank you for your patience. Your booking is still being processed.",
                    loop10: "Apologies for the delay.  Our servers are still busy processing your booking and will be finished shortly."
                },
                j = !1,
                n = 0,
                k = setInterval(function() {
                    j !== !0 && (j = !0, typeof d["loop" + n] != "undefined" && e("#gadgets-queuing-additional-info").html(d["loop" + n]), n === 14 ? n = 0 : n += 1, e.getJSON(c.urls.endpoints.acquireLock() + f.vcID, function(d) {
                        typeof d.Win != "undefined" && d.Win !== "" && d.Win.length > 0 ? (clearInterval(k), e("#gadgets-queuing-additional-info").html("Almost completed. Performing final steps."), e.getJSON(c.gadget.getBookingUrl(f, b), function(b) {
                            e("#gadgets-queuing-additional-info").html("");
                            e.getJSON(c.urls.endpoints.releaseLock() +
                                f.vcID + "&guid=" + d.Win,
                                function() {});
                            h.find("div.button").removeClass("finalising");
                            e.event.publish("book.finalise.end", g);
                            typeof b.error != "undefined" || typeof b.PdfLink == "undefined" ? (a.bookingError(h, f, b), j = !1) : a.bookingCompleted(h, f, b)
                        })) : j = !1
                    }))
                }, 1E3);
            else e.getJSON(c.gadget.getBookingUrl(f, b), function(b) {
                h.find("div.button").removeClass("finalising");
                e.event.publish("book.finalise.end", g);
                typeof b.error != "undefined" || typeof b.PdfLink == "undefined" ? a.bookingError(h, f, b) : a.bookingCompleted(h, f, b)
            })
        };
    a.stopFinalising = function(a) {
        a.find("div.button a").css({
            visibility: ""
        });
        a.find("div.button").removeClass("finalising")
    };
    a.bookingError = function(c, f, b) {
        a.stopFinalising(c);
        typeof b.error == "boolean" ? alert("Sorry, an error has occured.\n\nIf you have entered your credit card, please check with your bank whether your\ncard has been debited, and if necessary check your card details and try again.") : alert("Sorry, an error has occured.\n\nThe response from the payment gateway was:\n" + b.error + ". \n\nPlease check the response and if necessary check your card details and\ntry again, or check with your bank whether your card has been debited.")
    };
    a.paymentFrameOverlay = null;
    a.paymentPopupWin = null;
    a.paymentFrameInterval = null;
    a.paymentToken = "#" + Math.random().toString(36).substr(2);
    a.bookingCompleted = function(c, f, b) {
        b.SecurePayment != null && b.SecurePayment.IsApproved == !1 ? a.makePayment(c, f, b) : a.destroyCartAndRedirect(c, f, b);
        a.storeBookingDetailsToLocalStorage(b, f)
    };
    a.storeBookingDetailsToLocalStorage = function(e, f) {
        if (a.isLocalStorageAvailable("localStorage")) {
            var b = g.localStorage;
            b.ControlID = 0;
            b.Itinerary = {};
            b.SecurePayment = {};
            b.PdfLink = {};
            var d =
                c.urls.endpoints.sjp() + e.PdfLink.replace(/^\//, "");
            f.itineraryCSS !== null && (d += "&customCSS=" + escape(f.itineraryCSS));
            b.setItem("ControlID", e.ControlID);
            b.setItem("Itinerary", JSON.stringify(e.Itinerary));
            b.setItem("SecurePayment", JSON.stringify(e.SecurePayment));
            b.setItem("PdfLink", d)
        }
    };
    a.isLocalStorageAvailable = function() {
        return !0
    };
    a.makePayment = function(c, f, b) {
        a.paymentToken = "#" + Math.random().toString(36).substr(2);
        if (navigator.userAgent.toLowerCase().indexOf("iphone") !== -1) {
            var d = b.SecurePayment.Url +
                "&ReturnUrl=" + escape(g.location.protocol + "//" + g.location.host + g.location.pathname + g.location.search + a.paymentToken);
            e("body").html(e("body").html() + '<style>#iphoneFriendlyFrameWrap{-webkit-overflow-scrolling:touch !important; overflow:scroll !important;}</style><div class="remove" id="iphoneFriendlyFrameClose"><a><span></span></a></div><div id="iphoneFriendlyFrameWrap"><iframe id="iphoneFriendlyFrame" src="' + d + '"></iframe></div>');
            e("#iphoneFriendlyFrameWrap").css({
                width: "100%",
                height: "100%",
                position: "fixed",
                top: "0px",
                left: "0px",
                "z-index": "1000000",
                "background-color": "#ffffff"
            });
            e("#iphoneFriendlyFrame").css({
                width: "100%",
                height: "100%"
            });
            e("#iphoneFriendlyFrameClose").css({
                position: "fixed",
                top: "10px",
                right: "10px",
                "z-index": "1000010",
                display: "inline-block",
                width: "18px",
                height: "18px",
                cursor: "pointer",
                background: 'transparent url("../../img/cart-sprites.png") no-repeat scroll -9px -94px'
            });
            e("#iphoneFriendlyFrameClose").bind("click", function() {
                e("#iphoneFriendlyFrame").remove();
                e("#iphoneFriendlyFrameClose").remove();
                e("#iphoneFriendlyFrameWrap").remove()
            });
            a.paymentFrameOverlay = e("#iphoneFriendlyFrame")
        } else a.paymentFrameOverlay = e({
            iframe: {
                _attr: {
                    src: b.SecurePayment.Url + "&ReturnUrl=" + escape(g.location.protocol + "//" + g.location.host + g.location.pathname + g.location.search + a.paymentToken),
                    style: "position: absolute;top:0;left: 0;width: 1px;height: 100%;min-width:100%;"
                }
            }
        }).overlay({
            useBlockout: !0,
            overlayColour: "#777",
            overlayOpacity: 0.5,
            innerBackground: "#FFF",
            zIndexLowest: 1E6,
            width: g.innerWidth < 600 ? g.innerWidth - 50 : 600,
            height: g.innerHeight < 600 ? g.innerHeight - 50 : 600
        });
        a.paymentFrameInterval = g.setInterval(function() {
            var d = !1;
            if (g.location.hash == a.paymentToken) d = !0;
            else {
                var n = a.paymentFrameOverlay.parent();
                if (n == null || n.length == 0) d = !0
            }
            if (d) {
                g.clearInterval(a.paymentFrameInterval);
                try {
                    e.overlay.call("closeall")
                } catch (k) {}
                a.checkPayment(c, f, b)
            }
        }, 50)
    };
    a.checkPayment = function(h, f, b) {
        var d = {
            target: h,
            options: f,
            json: b
        };
        e.getJSON(c.urls.endpoints.getBooking() + "&itineraryId=" + b.Itinerary.ItineraryID + "&password=" + b.Itinerary.Credentials.Password,
            function(b) {
                !1 == b.IsPaid ? confirm(c.gadget.book.text.errors.declinedPayment) ? a.makePayment(d.target, d.options, d.json) : (alert(c.gadget.book.text.errors.noPayment), a.destroyCartAndRedirect(d.target, d.options, d.json, !1)) : a.destroyCartAndRedirect(d.target, d.options, d.json, !0)
            })
    };
    a.destroyCartAndRedirect = function(a, f, b, d) {
        c.gadget.cart.save({
            firstname: null,
            surname: null,
            address: null,
            city: null,
            address: null,
            city: null,
            state: null,
            postcode: null,
            country: null,
            phone: null,
            email: null,
            comment: null,
            receiveENewsletter: null,
            salutation: null,
            acceptCancellationPolicy: null,
            WhereDidYouHearId: null,
            cartcontent: []
        });
        var j = c.urls.endpoints.sjp() + b.PdfLink.replace(/^\//, "");
        f.itineraryCSS !== null && (j += "&customCSS=" + escape(f.itineraryCSS));
        if ((f.confirmationURL || "") === "") a.slideUp(), typeof d != "undefined" && !d ? e({
                "div.bookingCancelled": {
                    label: c.gadget.book.text.bookingCancelled
                }
            }).insertAfter(a) : e({
                "div.bookingComplete": {
                    label: c.gadget.book.text.bookingCompleted,
                    a: {
                        _attr: {
                            href: j
                        },
                        "": c.gadget.book.text.pdfLinkText
                    }
                }
            }).insertAfter(a),
            e.getJSON(c.urls.endpoints.getBooking() + "&itineraryId=" + b.Itinerary.ItineraryID + "&password=" + b.Itinerary.Credentials.Password, function(a) {
                e.event.publish("Confirmation.Complete", g, a)
            });
        else {
            a = typeof b.SecurePayment != "undefined" ? b.SecurePayment.IsApproved : !0;
            typeof d != "undefined" && (a = d);
            var n = c.util.cookieName("c0nf14MA71onL!Nk");
            e.cookie(n, e.json.stringify({
                pdfURL: typeof d != "undefined" && !d ? "" : j,
                ItineraryId: b.Itinerary.ItineraryID,
                Password: b.Itinerary.Credentials.Password,
                IsApproved: a
            }));
            g.name = e.json.stringify({
                pdfURL: typeof d !=
                    "undefined" && !d ? "" : j,
                ItineraryId: b.Itinerary.ItineraryID,
                Password: b.Itinerary.Credentials.Password,
                IsApproved: a
            });
            setTimeout(function() {
                g.location.href = f.confirmationURL
            }, 200)
        }
    };
    a.destroyCartAndRedirect2 = function(a, f, b) {
        c.gadget.cart.save({
            firstname: null,
            surname: null,
            address: null,
            city: null,
            address: null,
            city: null,
            state: null,
            postcode: null,
            country: null,
            phone: null,
            email: null,
            comment: null,
            receiveENewsletter: null,
            salutation: null,
            acceptCancellationPolicy: null,
            WhereDidYouHearId: null,
            cartcontent: []
        });
        if ((f.confirmationURL ||
                "") === "") a.slideUp(), typeof b != "undefined" && !b ? e({
            "div.bookingCancelled": {
                label: c.gadget.book.text.bookingCancelled
            }
        }).insertAfter(a) : e({
            "div.bookingComplete": {
                label: c.gadget.book.text.bookingCompletedNoItinerary
            }
        }).insertAfter(a);
        else {
            var a = typeof localStorage.Itinerary !== "undefined" ? JSON.parse(localStorage.Itinerary) : {},
                d = typeof localStorage.PdfLink !== "undefined" ? localStorage.PdfLink : "",
                j = c.util.cookieName("c0nf14MA71onL!Nk");
            e.cookie(j, e.json.stringify({
                pdfURL: d,
                ItineraryId: typeof a.ItineraryID !==
                    "undefined" ? a.ItineraryID : 0,
                Password: typeof a.Credentials.Password !== "undefined" ? a.Credentials.Password : "",
                IsApproved: b
            }));
            setTimeout(function() {
                g.location.href = f.confirmationURL
            }, 200)
        }
    };
    a.showCancellationPolicies = function(a, f) {
        var b = e("div.BE_cancellationPolicies");
        if (!b.length) return !1;
        c.util.exists(f.vcModules["64"]) && b.empty();
        b.find("div.vcPolicies").remove();
        b.prepend({
            "div.vcPolicies": {
                h2: c.gadget.book.text.termsAndConditions,
                h3: c.gadget.book.text.generalTerms,
                p: c.util.stripTags(f.vcData.CancellationPolicy)
            }
        });
        f.overlaySettings.useClone = !0;
        var d = 800,
            j = 250;
        typeof f.overlaySettings != "undefined" && (d = typeof f.overlaySettings.width != "undefined" ? f.overlaySettings.width : d, j = typeof f.overlaySettings.height != "undefined" ? f.overlaySettings.height : j);
        b.overlay({
            useBlockout: !0,
            width: d,
            height: j
        })
    };
    a.depositOptionsExist = function() {
        var a = e("input[name=depositPayment]");
        return typeof a != "undefined" && a.length > 0
    };
    a.getDepositOption = function() {
        var a = e("input[name=depositPayment]");
        if (typeof a == "undefined") return null;
        for (var c =
                0, b = 0, d = a.length; b < d; b++) {
            var j = a[b];
            if (j.checked) {
                c = j.value;
                break
            }
        }
        return c
    };
    a.getPaymentType = function() {
        var a = !1,
            c = e("input[name=paymentTypeRadio]");
        if (typeof c == "undefined") return a;
        for (var b = 0, d = c.length; b < d; b++) {
            var j = c[b];
            if (j.checked) {
                j.value == "paymentTypeRadioPayPal" && (a = !0);
                break
            }
        }
        return a
    };
    a.resetCreditCardDetails = function(a) {
        i = 0;
        for (len = a.length; i < len; i++)
            if (a[i].type != "radio") a[i].value = ""
    };
    a.setPaymentTypePayPal = function(c) {
        var f = c.find(".paym");
        a.resetCreditCardDetails(f);
        cardTypeSection =
            c.find("div.ccDetails");
        cardTypeSection.find("div.cardTypes").css({
            display: "none"
        });
        cardTypeSection.find("div.name").css({
            display: "none"
        });
        cardTypeSection.find("div.number").css({
            display: "none"
        });
        cardTypeSection.find("div.cardExpiry").css({
            display: "none"
        });
        cardTypeSection.find("div.ccv").css({
            display: "none"
        })
    };
    a.setPaymentTypeCreditCard = function(c) {
        var f = c.find(".paym");
        a.resetCreditCardDetails(f);
        cardTypeSection = c.find("div.ccDetails");
        cardTypeSection.find("div.cardTypes").css({
            display: ""
        });
        cardTypeSection.find("div.name").css({
            display: ""
        });
        cardTypeSection.find("div.number").css({
            display: ""
        });
        cardTypeSection.find("div.cardExpiry").css({
            display: ""
        });
        cardTypeSection.find("div.ccv").css({
            display: ""
        })
    };
    a.saveCart = function(h, f) {
        var b = {},
            d = {},
            j = h.find(".pers"),
            n = h.find(".paym"),
            k;
        k = !1;
        for (var l = 0, m = j.length; l < m; l++) k = j[l].type == "checkbox" ? j[l].checked : j[l].value, k !== "" && (b[j[l].name] = k);
        if (k = a.getPaymentType()) a.resetCreditCardDetails(n);
        else {
            l = 0;
            for (m = n.length; l < m; l++) d[n[l].name] = n[l].value
        }
        if (a.depositOptionsExist() && (j = a.getDepositOption(),
                j != null)) d.depositOption = j;
        d.payByPayPal = k;
        j = a.validatePersonalFields(b, f);
        n = a.validatePaymentFields(d);
        h.find("span.validationError").remove();
        h.find("BE_error").removeClass("BE_error");
        var o;
        if (j.error === !0)
            for (o in j.keys) l = h.find("div.personalDetails div." + j.keys[o].name), l.length == 0 && j.keys[o].name == "WhereDidYouHearId" && (l = h.find("div.personalDetails div.hear-of-us")), l.length == 0 && j.keys[o].name == "EventTrackingId" && (l = h.find("div.personalDetails div.event-tracking")), l.append({
                    "span.validationError": {
                        span: j.keys[o].text
                    }
                }),
                l.addClass("BE_error");
        if (n.error === !0)
            for (o in n.keys) n.keys[o].name != "depositOption" && (l = h.find("div.ccDetails ." + n.keys[o].name), l.append({
                "span.validationError": {
                    span: n.keys[o].text
                }
            }), l.addClass("BE_error")), n.keys[o].name == "depositOption" && (l = h.find("div.paymentOptions"), l.append({
                "span.validationError": {
                    span: n.keys[o].text
                }
            }), l.addClass("BE_error"));
        if (typeof d.expirymonth != "undefined" && k == !1) d.expirymonth = parseInt(d.expirymonth, 10);
        if (typeof d.expirymonth != "undefined" && k == !1) d.expiryyear =
            parseInt(d.expiryyear, 10);
        if (typeof d.number != "undefined" && k == !1) d.type = a.getCCType(d.number), d.number = d.number.replace(/\s/g, "").replace(/[^0-9]/g, "");
        if (d.type === !1 && n.keys.length > 0) return alert(c.gadget.book.text.errors.number), !1;
        b.paymentInformation = d;
        j.error === !1 && n.error === !1 && (h.find("div.button a").css({
            visibility: "hidden"
        }), h.find("div.button").addClass("finalising"), e(g).unbind("focus.BECartGadget"), e.event.publish("book.saveCart.start", g), c.gadget.cart.save(b, f, function(b) {
            b.result ===
                !0 ? (e.event.publish("book.saveCart.end", g), c.gadget.cart.getCart(function() {
                    c.session.get(function(b) {
                        a.doBooking(h, f, b)
                    })
                })) : (alert(c.gadget.cart.text.saveError + "\n\nIf you entered credit card details, your card has NOT been debited at this point."), a.stopFinalising(h))
        }))
    };
    a.validatePaymentFields = function(e) {
        var f = {
                error: !1,
                keys: []
            },
            b = c.gadget.book.text.errors,
            d, j;
        if (e.payByPayPal && e.payByPayPal == !0) return f;
        for (var g in e)
            if (e.hasOwnProperty(g)) {
                d = e[g];
                typeof d == "string" && (j = d.replace(/(^\s*|\s*$)/,
                    ""));
                if (g == "ccv" && (/[^0-9]/.test(d) === !0 || !j)) f.error = !0, f.keys.push({
                    name: g,
                    text: b.ccv
                });
                if (g == "name" && !j) f.error = !0, f.keys.push({
                    name: g,
                    text: b.name
                });
                if (g == "number" && (!j || /[^0-9\s]/.test(d) === !0)) f.error = !0, f.keys.push({
                    name: g,
                    text: b.number
                });
                if (g == "expirymonth" && (!j || /[^0-9\s]/.test(d) === !0)) f.error = !0, f.keys.push({
                    name: g,
                    text: b.expiryMonth
                });
                if (g == "expiryyear" && (!j || /[^0-9\s]/.test(d) === !0)) f.error = !0, f.keys.push({
                    name: g,
                    text: b.expiryYear
                });
                if (a.depositOptionsExist() && g == "depositOption" && (!j ||
                        /[^0-9\s]/.test(d) === !0 || /[^0-9\s]/.test(d) === !1 && d === 0)) f.error = !0, f.keys.push({
                    name: g,
                    text: b.depositOption
                })
            }
        return f
    };
    a.validatePersonalFields = function(a, f) {
        for (var b = {
                error: !1,
                keys: []
            }, d = c.gadget.book.text.errors, e, g = [], k = 0, l = f.VcOnlineBookingFields.length; k < l; k++) f.VcOnlineBookingFields[k].IsMandatoryExternal && g.push(f.VcOnlineBookingFields[k].FieldShortName);
        typeof(f != "undefined") && typeof f.eventTrackingIsRequired != "undefined" && f.eventTrackingIsRequired && g.push("EventTrackingId");
        k = 0;
        for (l =
            g.length; k < l; k++) typeof a[g[k]] == "undefined" && (a[g[k]] = "");
        for (var m in a)
            if (a.hasOwnProperty(m)) {
                typeof a[m] == "string" && (e = a[m].replace(/(^\s*|\s*$)/, ""));
                if (m == "acceptCancellationPolicy" && a[m] !== !0) b.error = !0, b.keys.push({
                    name: m,
                    text: d.cancellation
                });
                if (m == "firstname" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.firstname
                });
                if (m == "surname" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.surname
                });
                if (m == "phone" && (!e || /^(\+)?(((\()\d{2,4}(\)))|(\d{1,4}))([-.\s]?\d{1,4}){1,4}[\s]*/.test(e) === !1)) b.error = !0,
                    b.keys.push({
                        name: m,
                        text: d.phone
                    });
                if (m == "email" && (!e || /[A-Z0-9._%+-]+@[A-Z0-9.-]+\b/i.test(e) === !1)) b.error = !0, b.keys.push({
                    name: m,
                    text: d.email
                });
                if (m == "postcode" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.postcode
                });
                if (m == "state" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.state
                });
                if (m == "address" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.address
                });
                if (m == "city" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.city
                });
                if (m == "country" && !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.country
                });
                if (m == "WhereDidYouHearId" &&
                    !e) b.error = !0, b.keys.push({
                    name: m,
                    text: d.hear
                });
                if (m == "EventTrackingId" && e && a[m] == "999999999") b.error = !0, b.keys.push({
                    name: m,
                    text: d.event
                })
            }
        return b
    };
    a.showForm = function(g, f, b) {
        var d = b.cart,
            j = arguments.callee,
            n = this,
            k = c.util.exists,
            l = function() {
                j.call(n, g, f, b)
            },
            m = !1;
        if (!k(f.hearData) || !k(f.vcModules) || !k(f.vcData)) e(l, 75);
        else if (k(f.vcModules["44"]) && !k(f.vcModules["44"].data)) e(l, 75);
        else if (k(f.vcCountries)) {
            b.conf.EnablePayPalPayments && b.conf.EnablePayPalPayments === !0 && (m = !0);
            d = c.gadget.book.elements.bookingForm(b.conf.IsPaymentRequired,
                b.conf.IsPaymentDeferred, m, d, f);
            k = [];
            if (g.find("div.personalDetails").length)
                for (var l = g.find("input"), m = 0, o = l.length; m < o; m++) k.push({
                    name: l[m].name,
                    val: l[m].value
                });
            g.find("hr.clear").remove();
            g.find("div.personalDetails").remove();
            g.find("div.ccDetails").remove();
            g.append(d);
            l = 0;
            for (m = k.length; l < m; l++) d.find("div." + k[l].name + " input").val(k[l].val);
            a.checkRedirectedFromCompletedPayment(g, f)
        } else e(l, 75)
    };
    a.checkRedirectedFromCompletedPayment = function(c, f) {
        var b = g.location.hash;
        b != null && b.length >
            1 && (b = /\/IsApproved/.test(b), b != null && a.destroyCartAndRedirect2(c, f, b))
    };
    a.getCCType = function(a) {
        if (typeof a == "undefined") return !1;
        a = a.replace(/\s/g, "").replace(/[^0-9]/, "");
        if (/^4[0-9]{12}(?:[0-9]{3})?$/.test(a)) return "Visa";
        if (/^5[1-5][0-9]{14}$/.test(a)) return "MasterCard";
        if (/^3[47][0-9]{13}$/.test(a)) return "AmericanExpress";
        if (/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/.test(a)) return "DinersClub";
        return !1
    }
})(window);
(function(g) {
    g.BE.gadget.book.defaults = {
        automaticCart: !0,
        itineraryCSS: null,
        demoMode: !1,
        confirmationURL: "/product/confirmation.html",
        overlaySettings: g.BE.gadget.cart.defaults.overlaySettings,
        showBookingTimer: !1
    }
})(window);
(function(g) {
    g.BE.gadget.book.text = {};
    g = g.BE.gadget.book.text;
    g.noSSL = "Sorry, this gadget will not run unless\nit is hosted on a secure page.";
    g.termsAndConditions = "Terms and Conditions";
    g.generalTerms = "Applicable to all bookings";
    g.cardsAccepted = "Accepted credit cards";
    g.nameOnCard = "Name on card";
    g.cardNumber = "Credit card number";
    g.cardExpiry = "Card expiry";
    g.cardSecurity = "Security code";
    g.cardMonth = "Month";
    g.cardYear = "Year";
    g.deferredGateway = "Payment options will be available once your booking has been finalised.";
    g.bookingCompleted = "Thank you for your booking. You can download your itinerary with the link below.";
    g.bookingCancelled = "Your payment has been unsuccessful.";
    g.pdfLinkText = "Download your itinerary PDF now.";
    g.bookingCompletedNoItinerary = "Thank you for your booking. Your itinerary will be emailed to the email address provided in the booking process. If you do not receive your itinerary please check your email junk folder or contact us.";
    g.payPal = "PayPal";
    g.creditCard = "Credit Card";
    g.paymentType = "Payment Type ";
    g.form = {};
    var e = g.form;
    e.salutation = "Salutation";
    e.firstname = "First Name";
    e.surname = "Surname";
    e.address = "Address";
    e.city = "Suburb/City";
    e.state = "State";
    e.postcode = "Post Code";
    e.country = "Country";
    e.phone = "Phone Number";
    e.email = "Email Address";
    e.comment = "Comments / Requests";
    e.hear = "How did you hear of us?";
    e.hearNothing = "--- Please choose ---";
    e.noCountry = "--- Please choose ---";
    e.eventTracking = "Are you attending an event?";
    e.notAttendingEvent = "No I'm not attending an event";
    e.pleaseChoose = "--- Please choose ---";
    e.newsletter = "I would like to receive news/updates";
    e.acceptCancel = "I accept the ";
    e.acceptCancel2nd = " terms & conditions";
    e.button = "Finalise";
    g.errors = {};
    g = g.errors;
    g.cancellation = "Please confirm you accept the terms & conditions of this booking";
    g.firstname = "Please check you have entered your first name";
    g.surname = "Please check your surname (family name)";
    g.phone = "Please check your phone number";
    g.email = "Please confirm your email is correct";
    g.hear = "Please select how you heard of us";
    g.event = "Please select if you are attending an event";
    g.country = "Please select country";
    g.postcode = "Please enter your postcode";
    g.state = "Please enter your state";
    g.address = "Please enter your address";
    g.city = "Please enter your Suburb/City";
    g.ccv = "Please check your credit card ccv";
    g.name = "Please check your name as per your credit card";
    g.number = "Please check your credit card number";
    g.expiryMonth = "Please supply your card's month of expiry";
    g.expiryYear = "Please supply your card's year of expiry";
    g.depositOption = "Please Specify a Valid Deposit Option";
    g.declinedPayment = "The payment gateway indicated that your credit card was declined.\n\nWould you like to attempt your payment again?";
    g.noPayment = "Your itinerary has not been paid for. Please follow the instructions in your confirmation email to make a payment."
})(window);
(function(g) {
    g.BE.gadget.book.elements = {};
    var e = g.wisDOM,
        c = g.BE,
        a = g.BE.gadget.book.elements,
        h = g.BE.gadget.book.text,
        f = e.event.publish;
    a.bookingForm = function(b, d, j, g, k) {
        var l = {
                "div.personalDetails": []
            },
            m = c.util.exists,
            o = l["div.personalDetails"],
            q = [{
                h3: "Booking Details"
            }, {
                "div.salutation": {
                    label: h.form.salutation,
                    "": " ",
                    "select.pers": {
                        _attr: {
                            name: "salutation"
                        },
                        "0 option": {
                            _attr: {
                                value: "Mr"
                            },
                            "": "Mr"
                        },
                        "1 option": {
                            _attr: {
                                value: "Mrs"
                            },
                            "": "Mrs"
                        },
                        "2 option": {
                            _attr: {
                                value: "Ms"
                            },
                            "": "Ms"
                        },
                        "3 option": {
                            _attr: {
                                value: "Dr"
                            },
                            "": "Dr"
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[0].IsMandatoryExternal ? "firstname required" : "firstname" : "firstname required"
                    },
                    label: h.form.firstname,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "firstname",
                            maxlength: 50
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[1].IsMandatoryExternal ? "surname required" : "surname" : "surname required"
                    },
                    label: h.form.surname,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "surname",
                            maxlength: 25
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[2].IsMandatoryExternal ? "address required" : "address" : "address required"
                    },
                    label: h.form.address,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "address",
                            maxlength: 100
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[3].IsMandatoryExternal ? "city required" : "city" : "city required"
                    },
                    label: h.form.city,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "city",
                            maxlength: 25
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length >
                            0 ? k.VcOnlineBookingFields[4].IsMandatoryExternal ? "state required" : "state" : "state required"
                    },
                    label: h.form.state,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "state",
                            maxlength: 15
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[5].IsMandatoryExternal ? "postcode required" : "postcode" : "postcode required"
                    },
                    label: h.form.postcode,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "postcode",
                            maxlength: 15
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[6].IsMandatoryExternal ?
                            "country required" : "country" : "country required"
                    },
                    label: h.form.country,
                    "": " ",
                    "select.pers": function() {
                        var a = k.vcCountries,
                            b = [],
                            c;
                        b._attr = {
                            name: "country"
                        };
                        b.push({
                            option: {
                                "": h.form.noCountry,
                                _attr: {
                                    value: ""
                                }
                            }
                        });
                        for (var d = 0, f = a.length; d < f; d++) {
                            c = {
                                option: {
                                    "": a[d],
                                    _attr: {
                                        value: a[d]
                                    }
                                }
                            };
                            if (a[d] === k.VcOnlineBookingFields[6].ExternalDefaultValue) c.option._attr.value = k.VcOnlineBookingFields[6].ExternalDefaultValue, c.option._attr.selected = k.VcOnlineBookingFields[6].ExternalDefaultValue;
                            b.push(c)
                        }
                        return b
                    }()
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[7].IsMandatoryExternal ? "phone required" : "phone" : "phone required"
                    },
                    label: h.form.phone,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "phone",
                            maxlength: 20
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[8].IsMandatoryExternal ? "email required" : "email" : "email required"
                    },
                    label: h.form.email,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "text",
                            name: "email",
                            maxlength: 50
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length >
                            0 ? k.VcOnlineBookingFields[9].IsMandatoryExternal ? "comment required" : "comment" : "comment required"
                    },
                    label: h.form.comment,
                    "": " ",
                    "textarea.pers": {
                        _attr: {
                            name: "comment"
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[10].IsMandatoryExternal ? "WhereDidYouHearId required" : "WhereDidYouHearId" : "WhereDidYouHearId required"
                    },
                    label: h.form.hear,
                    "": " ",
                    "select.pers": function() {
                        var a = k.hearData,
                            b = [],
                            c;
                        b._attr = {
                            name: "WhereDidYouHearId"
                        };
                        b.push({
                            option: {
                                "": h.form.hearNothing,
                                _attr: {
                                    value: ""
                                }
                            }
                        });
                        for (var d = 0, f = a.length; d < f; d++) c = a[d], b.push({
                            option: {
                                "": c.FacilityDesc,
                                _attr: {
                                    value: c.FacilityId
                                }
                            }
                        });
                        return b
                    }()
                }
            }, {
                "div.event-tracking": function() {
                    var a = {};
                    if (m(k.vcModules["44"])) a.label = h.form.eventTracking, a[""] = " ", a["select.pers"] = function() {
                        var a = [],
                            b = k.vcModules["44"].data;
                        k.eventTrackingIsRequired != "undefined" && k.eventTrackingIsRequired && a.push({
                            option: {
                                "": h.form.pleaseChoose,
                                _attr: {
                                    value: "999999999"
                                }
                            }
                        });
                        a.push({
                            option: {
                                "": h.form.notAttendingEvent,
                                _attr: {
                                    value: ""
                                }
                            }
                        });
                        a._attr = {
                            name: "EventTrackingId"
                        };
                        for (var c = 0, d = b.length; c < d; c++) b[c].EventTrackingId > 0 && a.push({
                            option: {
                                "": b[c].EventTrackingName,
                                _attr: {
                                    value: b[c].EventTrackingId
                                }
                            }
                        });
                        return a
                    }();
                    return a
                }()
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length > 0 ? k.VcOnlineBookingFields[11].IsMandatoryExternal ? "receiveENewsletter required" : "receiveENewsletter" : "receiveENewsletter required"
                    },
                    label: h.form.newsletter,
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "checkbox",
                            unchecked: "",
                            name: "receiveENewsletter"
                        }
                    }
                }
            }, {
                div: {
                    _attr: {
                        "class": k.VcOnlineBookingFields.length >
                            0 ? k.VcOnlineBookingFields[12].IsMandatoryExternal ? "acceptCancellationPolicy required" : "acceptCancellationPolicy" : "acceptCancellationPolicy required"
                    },
                    label: {
                        "": h.form.acceptCancel,
                        a: {
                            _events: {
                                click: function() {
                                    f("book.showCancellation.click", this)
                                }
                            },
                            span: h.form.acceptCancel2nd,
                            _attr: {
                                href: "javascript:void(0);"
                            }
                        }
                    },
                    "": " ",
                    "input.pers": {
                        _attr: {
                            type: "checkbox",
                            name: "acceptCancellationPolicy"
                        }
                    }
                }
            }];
        m(k.vcModules["44"]);
        for (var s in q)
            if (q.hasOwnProperty(s)) {
                var p = q[s];
                c.util.exists(p["div.event-tracking"]) &&
                    c.util.exists(k.eventTrackingIsRequired) && k.eventTrackingIsRequired && (p = {
                        "div.event-tracking required": q[s]["div.event-tracking"]
                    });
                o.push(p)
            }
        o = {
            a: {
                _events: {
                    click: function() {
                        e.event.publish("book.button.click", this)
                    }
                },
                span: h.form.button
            }
        };
        b === !0 || typeof k.Deposits != "undefined" ? (l["div.ccDetails"] = a.ccDetails(b, d, j, g, k), l["div.ccDetails"]["div.button"] = o, l["div.ccDetails"]["div#gadgets-queuing-additional-info"] = "") : (l["div.personalDetails"].push({
            "div.button": o
        }), l["div.personalDetails"].push({
            "div#gadgets-queuing-additional-info": ""
        }));
        l["hr.clear"] = "";
        var l = e(l),
            x;
        for (x in g) g.hasOwnProperty(x) && (b = l.find("div." + x), b.find("input").val(g[x]), b.find("select").val(g[x]), b.find("textarea").val(g[x]));
        return l
    };
    a.depositRadio = function(a, c, f, e) {
        f = {
            type: "radio",
            name: "depositPayment",
            value: f
        };
        if (e) f.checked = !0;
        return {
            "div.paymentItem": {
                label: a,
                "span.depositChoice": {
                    input: {
                        _attr: f
                    },
                    label: c
                }
            }
        }
    };
    a.ccDetails = function(b, d, e, g, h) {
        var l = c.gadget.book.text,
            m = {};
        b === !0 && d == !1 ? (m = {
            h3: "Payment Details",
            "div.paymentType": {},
            "div.cardTypes": {
                label: l.cardsAccepted,
                "span.cardList": function(a) {
                    for (var b = [], c, d = 0, f = a.length; d < f; d++) c = {}, c["span.ccLabel ccID_" + a[d].CreditCardId] = {
                        span: a[d].Description
                    }, b.push(c);
                    return b
                }(h.vcData.CreditCards)
            },
            "div.name": {
                label: l.nameOnCard,
                "input.paym": {
                    _attr: {
                        name: "name",
                        type: "text"
                    }
                }
            },
            "div.number": {
                label: l.cardNumber,
                "input.paym": {
                    _attr: {
                        name: "number",
                        type: "text"
                    }
                }
            },
            "div.cardExpiry": {
                label: l.cardExpiry,
                "span.expirySelects": {
                    "select.paym month": function() {
                        var a = [{
                            option: {
                                "": l.cardMonth,
                                _attr: {
                                    value: ""
                                }
                            }
                        }];
                        a._attr = {
                            name: "expirymonth"
                        };
                        for (var b = 1; b < 13; b++) a.push({
                            option: {
                                _attr: {
                                    value: b
                                },
                                "": b
                            }
                        });
                        return a
                    }(),
                    "": " ",
                    "select.paym year": function() {
                        var a = [{
                                option: {
                                    "": l.cardYear,
                                    _attr: {
                                        value: ""
                                    }
                                }
                            }],
                            b = (new Date).getFullYear(),
                            c = b + 19;
                        for (a._attr = {
                                name: "expiryyear"
                            }; b < c; b++) a.push({
                            option: {
                                _attr: {
                                    value: b
                                },
                                "": b
                            }
                        });
                        return a
                    }()
                },
                "div.expirymonth": {},
                "div.expiryyear": {}
            },
            "div.ccv": {
                label: l.cardSecurity,
                "input.paym": {
                    _attr: {
                        name: "ccv",
                        type: "text"
                    }
                }
            }
        }, e === !0 && (m["div.paymentType"] = {
            label: l.paymentType,
            "span.paymentTypeList": {
                "span.paymentTypeItemPP": {
                    "span.paymentTypeOption": {
                        input: {
                            _events: {
                                click: function() {
                                    f("book.paymentTypePayPal.click",
                                        this)
                                }
                            },
                            _attr: {
                                type: "radio",
                                name: "paymentTypeRadio",
                                value: "paymentTypeRadioPayPal"
                            }
                        }
                    },
                    label: l.payPal
                },
                "span.paymentTypeItemCC": {
                    "span.paymentTypeOption": {
                        input: {
                            _events: {
                                click: function() {
                                    f("book.paymentTypeCreditCard.click", this)
                                }
                            },
                            _attr: {
                                type: "radio",
                                name: "paymentTypeRadio",
                                value: "paymentTypeRadioCreditCard",
                                checked: !0
                            }
                        }
                    },
                    label: l.creditCard
                }
            }
        })) : b === !0 && d === !0 && (m = {
            h3: "Payment Details",
            "div.deferredGateway": l.deferredGateway
        });
        typeof h.Deposits != "undefined" && (m["div.deposits"] = {
            h3: "Deposit/Payment Options",
            "div.paymentOptions": function() {
                var b = [],
                    d = function(a) {
                        return typeof a != "undefined" && a != null
                    },
                    f = !0;
                if (h.Deposits.PayInFull != null || h.Deposits.OneNightDeposit == null && h.Deposits.DepositPercentageValue == null && h.Deposits.DepositAmountValue == null && h.Deposits.XNightDeposit == null && h.Deposits.IConnectAmountValue == null && h.Deposits.AgentRemainingAmount == null) b.push(a.depositRadio("Pay In Full", c.util.currencies.formatShort(h.Deposits.PayInFull, c.currencyId), 1, f)), f = !1;
                d(h.Deposits.OneNightDeposit) && h.Deposits.OneNightDeposit >
                    0 && (b.push(a.depositRadio("Pay One Night", c.util.currencies.formatShort(h.Deposits.OneNightDeposit, c.currencyId), 2, f)), f = !1);
                d(h.Deposits.DepositPercentageValue) && h.Deposits.DepositPercentageValue > 0 && (b.push(a.depositRadio("Pay Percentage", c.util.currencies.formatShort(h.Deposits.DepositPercentageValue, c.currencyId), 3, f)), f = !1);
                d(h.Deposits.DepositAmountValue) && h.Deposits.DepositAmountValue > 0 && (b.push(a.depositRadio("Deposit Amount", c.util.currencies.formatShort(h.Deposits.DepositAmountValue, c.currencyId),
                    4, f)), f = !1);
                d(h.Deposits.XNightDeposit) && h.Deposits.XNightDeposit > 0 && (b.push(a.depositRadio("X Night Deposit", c.util.currencies.formatShort(h.Deposits.XNightDeposit, c.currencyId), 5, f)), f = !1);
                if (h.Deposits.IConnectAmountValue != null) {
                    d = "";
                    if (g != null && g.cartcontent != null)
                        for (var e = 0; e < g.cartcontent.length; e++) g.cartcontent[e] != null && g.cartcontent[e].operatorname != null && (d != "" && (d += " / "), d += g.cartcontent[e].operatorname);
                    b.push(a.depositRadio("Deposit Amount " + c.util.currencies.formatShort(h.Deposits.IConnectAmountValue,
                        c.currencyId) + "." + (d == "" ? "" : "\n(Remainder payable to " + d + ")"), c.util.currencies.formatShort(h.Deposits.IConnectAmountValue, c.currencyId), 6, f));
                    f = !1
                }
                h.Deposits.AgentRemainingAmount != null && (b.push(a.depositRadio("Pay Remainder", c.util.currencies.formatShort(h.Deposits.AgentRemainingAmount, c.currencyId), 7, f)), f = !1);
                return b
            }()
        });
        return m
    }
})(window);
(function(g) {
    function e(a) {
        time = a.split(":");
        if (time.length !== 2) return a;
        var a = parseInt(time[0]),
            b = parseInt(time[1]),
            c = a >= 12 ? "pm" : "am";
        a %= 12;
        return (a ? a : 12) + ":" + (b < 10 ? "0" + b : b) + c
    }
    var c = g.wisDOM,
        a = g.BE,
        h = {},
        f = null,
        b, d = c.event.publish,
        j = {},
        n = {};
    a.gadget.details = function(b, f) {
        var e = c(b);
        if (e.length === 0) return !1;
        f = a.util.mergeObjects(f, a.gadget.details.defaults);
        if (!f.vcID && !f.webID) return !1;
        if (f.vcID == 6) f.productIDs = h.findIDs(f);
        a.gadget.init(f, function() {
            var a = f,
                e = c(b);
            e.append({
                "div.details-gadget BE": ""
            });
            e = e.find("div.details-gadget");
            d("details.begin", g, {});
            h._init(e, a);
            h.setupSubscriptions(e, a)
        });
        return e
    };
    a.gadget.details.findIDs = function(a) {
        return h.findIDs(a)
    };
    a.gadget.details.buildGridStandard = function(b, c, d, f) {
        a.util.exists(c.collapseToursMode) && c.collapseToursMode && (d === "tours" || d === "events") ? h.buildGridTourCollapsed(b, c, d, f) : h.buildGridStandard(b, c, d, f)
    };
    a.gadget.details.getDetailData = function(a, b) {
        h.getDetailData(a, b)
    };
    a.gadget.details.resetDataStore = function() {
        j = {}
    };
    h._init = function(b,
        f) {
        b.empty();
        d("details.init.start", g, {});
        if (typeof f.productIDs == "undefined") f.productIDs = h.findIDs(f);
        f.embedSearch === !0 && a.gadget.search.embed(f).appendTo(b).find("div.product").css({
            display: "none"
        });
        f.vcID && c(function() {
            h.getData(b, f)
        }, 10);
        f.descriptionHover && c(function() {
            h.getDetailData(b, f)
        }, 100);
        var e = f.showSimilarProperties;
        e !== null && a.util.exists(a.gadget.details.similar) && (e = a.gadget.details.similar(e), e.enabled && c(e.selector).length > 0 && (c(function() {
            h.getSimilarPropData(f, e)
        }, 250), a.gadget.search.subscribeToChanges(function() {
            c(function() {
                h.getSimilarPropData(f,
                    e)
            }, 250)
        })))
    };
    h.findIDs = function(b) {
        var c, d = g.location.hash,
            f;
        c = b.productID;
        b = b.type;
        f = d.replace(/^#\/[a-zA-Z]+\/(\d+)\/*(\d*)/, "$1");
        d = d.replace(/^#\/([a-zA-Z]+)\/\d+\/*(\d*)/, "$1");
        c = f || c;
        b = d || b;
        isNaN(parseInt(b, 10)) || (b = a.text.typeIDToString[b]);
        if (!c || !b) return !1;
        return [c, b]
    };
    h.getData = function(f, e) {
        if (!e.productIDs) return !1;
        d("details.getdata.start", g, {});
        var j = e.productIDs[0],
            k = e.productIDs[1],
            n;
        switch (k) {
            case "accom":
                n = a.urls.endpoints.beAccomRatesGrid();
                break;
            case "tours":
                n = a.urls.endpoints.beToursRatesGrid();
                break;
            case "events":
                n = a.urls.endpoints.beEventsRatesGrid();
                break;
            case "carhire":
                n = a.urls.endpoints.beCarHireRatesGrid();
                break;
            case "packages":
                n = a.urls.endpoints.bePackagesRatesGrid()
        }
        n += "?q=" + e.vcID;
        var l = a.gadget.search.userState();
        n += k == "packages" ? "&packages=" + j.toString().replace(/^#/, "") : "&operators=" + j.toString().replace(/^#/, "");
        if (l) {
            var j = {},
                u;
            for (u in l) l.hasOwnProperty(u) && (j[u] = u != "date" ? l[u] : l[u].replace(/^[a-zA-Z]+\s(\d+)\/(\d+)\/(\d+)/g, "$3-$2-$1"));
            if (typeof j.period != "undefined" &&
                (k == "tours" || k == "events")) j.period = 1;
            n += a.util.buildParamString(j)
        }
        n += "&InclAvailability=true";
        typeof e.campaignID != "undefined" && (n += "&CampaignId=" + e.campaignID);
        k == "accom" && (n += "&enforceBookingConditions=false&enforceEntirePeriod=false");
        typeof e.showAllTours != "undefined" && e.showAllTours && k == "tours" && (n += "&enforceBookingConditions=false");
        typeof e.showAllEvents != "undefined" && e.showAllEvents && k == "events" && (n += "&enforceBookingConditions=false");
        typeof e.externalSearch != "undefined" && (n += "&ExternalSearch=" +
            e.externalSearch);
        typeof e.showFutureEvents != "undefined" && k == "events" && (n += "&ShowFutureEvents=" + e.showFutureEvents);
        typeof e.showFutureEventsPeriod != "undefined" && k == "events" && (n += "&ShowFutureEventsPeriod=" + e.showFutureEventsPeriod);
        a.util.exists(e.stageId) && e.stageId > 0 && (n += "&StageId=" + e.stageId);
        b && b.cancel();
        d("region.loading.start", g, f);
        c(function() {
            b = c.getJSON(n, function(a, b) {
                return function(c) {
                    d("region.loading.end", g, a);
                    c.length ? h.buildGrid(a, b, k, c[0]) : h.noResults(a, b)
                }
            }(f, e))
        }, 50);
        return f
    };
    h.noResults = function(a) {
        a.find("div.priceGrid").remove();
        a.append({
            "div.priceGrid im-grid": {
                "h3.noResults": "Sorry, no results match your search criteria. Please change your dates and options and try searching again."
            }
        })
    };
    h.extractPackageProducts = function(a, b, d, f) {
        b = [];
        for (d = 0; d < f.Operators.length; d++) {
            for (var e = f.Operators[d], j = 0; j < e.Products.Rooms.length; j++) {
                var g = e.Products.Rooms[j];
                b.push({
                    type: g.type,
                    operatorid: e.OperatorID,
                    operatorname: e.Name,
                    id: g.RoomID,
                    name: g.Name,
                    startdate: g.Days[0].Date,
                    period: g.Nights,
                    adults: g.Adults,
                    children: g.Children,
                    infants: g.Infants
                })
            }
            for (j = 0; j < e.Products.Tours.length; j++)
                for (var g = e.Products.Tours[j], h = a.find('input[name="tour-' + f.PackageID + "-" + g.TourID + '"]'), t = 0; t < h.length; t++) {
                    var k = c(h[t]);
                    if (k[0].checked) {
                        b.push({
                            type: g.type,
                            operatorid: e.OperatorID,
                            operatorname: e.Name,
                            id: g.TourID,
                            name: g.Name,
                            startdate: new Date(isNaN(k.val()) ? k.val() : parseInt(k.val())),
                            adults: g.Adults,
                            children: g.Children,
                            infants: g.Infants,
                            concessions: g.Concessions,
                            students: g.Students,
                            observers: g.Observers
                        });
                        break
                    }
                }
            for (h = 0; h < e.Products.Events.length; h++) {
                g = e.Products.Events[j];
                t = a.find('input[name="event-' + f.PackageID + "-" + g.EventID + '"]');
                for (k = 0; k < t.length; k++) {
                    var n = c(t[k]);
                    if (n[0].checked) {
                        b.push({
                            type: g.type,
                            operatorid: e.OperatorID,
                            operatorname: e.Name,
                            id: g.TourID,
                            name: g.Name,
                            startdate: new Date(isNaN(n.val()) ? n.val() : parseInt(n.val())),
                            adults: g.Adults,
                            children: g.Children,
                            infants: g.Infants,
                            concessions: g.Concessions,
                            students: g.Students,
                            observers: g.Observers
                        });
                        break
                    }
                }
            }
            for (j = 0; j < e.Products.CarHires.length; j++) g =
                e.Products.CarHires[j], b.push({
                    type: g.type,
                    operatorid: e.OperatorID,
                    operatorname: e.Name,
                    id: g.RoomID,
                    name: g.Name,
                    startdate: g.Days[0].Date,
                    period: g.Nights,
                    adults: g.Adults,
                    children: g.Children,
                    infants: g.Infants
                })
        }
        return b
    };
    h.buildGrid = function(b, c, f, e) {
        f == "packages" ? h.buildGridPackages(b, c, f, e) : a.util.exists(c.collapseToursMode) && c.collapseToursMode && (f === "tours" || f === "events") ? h.buildGridTourCollapsed(b, c, f, e) : h.buildGridStandard(b, c, f, e);
        d("grid.rendered", g, {})
    };
    h.getShortDecimal = function(a) {
        return (a %
            1 == 0 ? a : a.toFixed(2)).toString()
    };
    h.getShortDecimalOrFree = function(a) {
        a = h.getShortDecimal(a);
        return a === "0" ? "Free" : a
    };
    h.buildGridPackages = function(b, d, f, e) {
        b.find("div.priceGrid").remove();
        e = c.json.convertDates(e);
        n.operator = e;
        var g = a.gadget.region.text,
            k = {
                "div.priceGrid im-grid": {
                    table: {
                        thead: {
                            tr: [{
                                "td.title": g.headerTitle
                            }, {
                                "td.total": g.total
                            }]
                        },
                        tbody: []
                    }
                }
            },
            l = k["div.priceGrid im-grid"].table.thead.tr,
            r = k["div.priceGrid im-grid"].table.tbody,
            t = a.util.date.names.getMonth,
            z = a.util.date.names.getDay,
            A, y = c.event.publish;
        A = a.gadget.search.userState();
        for (var v = e.Days, w = v.length, E = 0, B = ["adults", "children", "infants", "students", "concessions", "observers", "family"], C = B.length; C--;) E += parseInt(A[B[C]], 10);
        for (A = 0; A < w; A++) {
            C = v[A].Date;
            E = z(C.getDay() + 1, !0);
            B = C.getDate();
            C = t(C.getMonth() + 1, !0);
            E = {
                "td.date": [{
                    "a.day": E
                }, {
                    "": " "
                }, {
                    "a.date": B
                }, {
                    "": " "
                }, {
                    "a.month": C
                }]
            };
            if (f == "events" || f == "tours") E["td.date"]._attr = {
                "class": "date " + f
            };
            l.push(E)
        }
        t = {
            tr: []
        };
        z = t.tr;
        z._data = {
            _all: e,
            roomID: e.PackageID,
            name: e.Name
        };
        var H, l = e.Days.length,
            v = g.requestNow;
        if (typeof e.IsGoldMedal != "undefined" && e.IsGoldMedal === !0) v = g.bookNow;
        if (e.IsConstrained) e.ConstrainedMinNights === 0 ? v = a.util.exists(d.restrictedButtonText) ? d.restrictedButtonText : "Restricted" : (g = e.ConstrainedDescription, v = (a.util.exists(g) && g != "" && g.toLowerCase().indexOf("max") >= 0 ? "Max " : "Min ") + e.ConstrainedMinNights + " nights");
        !1 == e.IsAvailable && (v = "Not Available");
        z.push({
            "td.name": {
                a: e.Name
            },
            "td.total": {
                "a.im-pricebutton": {
                    "span.book im-pricebutton-label": v,
                    "": " ",
                    "span.number im-pricebutton-amount": a.util.currencies.formatShort(e.Cost, a.gadget.currencyId),
                    _attr: {
                        href: "javascript://;"
                    },
                    _events: {
                        click: function() {
                            return function() {
                                if (!e.IsConstrained && !1 != e.IsAvailable) {
                                    var c = h.extractPackageProducts(b, d, f, e),
                                        c = [d.vcID, d.productIDs[0], f, e, a.gadget.search.userState(), e.Name, 1, d.campaignID, c, d.externalSearch, void 0, void 0];
                                    if (a.util.exists(d.stageId) && d.stageId > 0) c.stage = {
                                        stageId: d.stageId
                                    };
                                    y("item.book.click", this, c)
                                }
                            }
                        }(A)
                    }
                }
            }
        });
        if (d.thumbsInGrid && e.Images.length >
            0) B = e.Images[0], E = B.ThumbnailImage, B = B.FullSizeImage, z[0]["td.name"]["div.thumb"] = {
            img: {
                _attr: {
                    src: E.replace(/^http:/, ""),
                    rel: B
                }
            }
        };
        for (H = 0; H < l; H++) z.push({
            "td.price": ""
        });
        r.push(t);
        g = [];
        for (t = 0; t < e.Operators.length; t++)
            for (var F = e.Operators[t], z = [F.Products.Rooms, F.Products.Tours, F.Products.Events, F.Products.CarHires], v = 0; v < z.length; v++)
                for (w = 0; w < z[v].length; w++) g.push(z[v][w]);
        g.sort(function(a, b) {
            return a.SortOrder > b.SortOrder
        });
        for (v = 0; v < g.length; v++) {
            w = g[v];
            t = {
                tr: []
            };
            z = t.tr;
            z._data = {
                _all: w,
                productID: w.Id,
                name: w.Name
            };
            z.push({
                "td.name": {
                    a: w.Name
                },
                "td.total": {}
            });
            if (d.thumbsInGrid && w.Images.length > 0) B = w.Images[0], E = B.ThumbnailImage, B = B.FullSizeImage, z[0]["td.name"]["div.thumb"] = {
                img: {
                    _attr: {
                        src: E.replace(/^http:/, ""),
                        rel: B
                    }
                }
            };
            if (w.IsConstrained) z[0]["td.total"] = w.ConstrainedDescription;
            E = "even";
            A % 2 === 0 && (E = "odd");
            F.IsGoldMedal && (E += " instant-confirmation");
            w.IsConstrained && (E += " min-nights");
            z._attr = {
                "class": E
            };
            var G = !1;
            for (H = 0; H < l; H++) z.push({
                "td.price": function(a) {
                    var b = [];
                    if (typeof a.RoomID != "undefined") {
                        var c = {
                            input: {
                                _attr: {
                                    type: "checkbox",
                                    "class": "room-date",
                                    disabled: "disabled"
                                }
                            }
                        };
                        if (a.Days[H].IsAvailable) c.input._attr.checked = "checked";
                        c.input._attr.disabled = "disabled";
                        b.push(c)
                    }
                    if (typeof a.TourID != "undefined") {
                        c = {
                            input: {
                                _attr: {
                                    type: "radio",
                                    name: "tour-" + e.PackageID + "-" + a.TourID,
                                    "class": "tour-date",
                                    value: Date.parse(a.Days[H].Date)
                                }
                            }
                        };
                        if (!1 == a.Days[H].IsAvailable) c.input._attr.disabled = "disabled";
                        else if (!1 == G) G = !0, c.input._attr.checked = "checked";
                        b.push(c)
                    }
                    if (typeof a.EventID != "undefined") {
                        c = {
                            input: {
                                _attr: {
                                    type: "radio",
                                    name: "event-" + e.PackageID + "-" + a.EventID,
                                    "class": "event-date",
                                    value: Date.parse(a.Days[H].Date)
                                }
                            }
                        };
                        if (!1 == a.Days[H].IsAvailable) c.input._attr.disabled = "disabled";
                        else if (!1 == G) G = !0, c.input._attr.checked = "checked";
                        b.push(c)
                    }
                    if (typeof a.CarHireID != "undefined") {
                        c = {
                            input: {
                                _attr: {
                                    type: "checkbox",
                                    "class": "carHire-date",
                                    disabled: "disabled"
                                }
                            }
                        };
                        if (a.Days[H].IsAvailable) c.input._attr.checked = "checked";
                        c.input._attr.disabled = "disabled";
                        b.push(c)
                    }
                    return b
                }(w)
            });
            r.push(t)
        }
        r.length > 0 ? b.append(k) : h.noResults(b, d);
        d.descriptionHover && h.addHovers(b, d, f, j[f], e)
    };
    h.sortItems = function(a) {
        return a.sort(function(a, b) {
            return (b.Availability.IsAvailable ? 1 : 0) - (a.Availability.IsAvailable ? 1 : 0)
        })
    };
    h.buildGridTourCollapsedMarkup = function(b, f, j, g, h, k) {
        b = a.util.first(h.items);
        b.Name = h.tourMasterName;
        var n = {};
        n["tr." + k] = {
            _data: {
                _all: b,
                roomID: b.Id,
                name: h.Name
            },
            "td.name": function(b) {
                var c = {};
                a.util.exists(b.image) && a.util.exists(b.image.ThumbnailImage) && (c["div.thumb"] = {
                    img: {
                        _attr: {
                            src: b.image.ThumbnailImage,
                            rel: b.image.FullSizeImage
                        }
                    }
                });
                c.a = h.tourMasterName;
                return c
            }(h),
            td: {
                "div.tour-row-item": function(b) {
                    var h = [];
                    a.util.each(b.items, function(b, c) {
                        var k = c.Availability,
                            r = "div.tour-row-item-occ",
                            m = !0;
                        if (a.util.existsInArray(!0, c.Availability.Days, function(a, b) {
                                return a === b.IsAvailable
                            })) {
                            if (a.util.exists(c.IsGoldMedal)) m = c.IsGoldMedal;
                            var n = "REQUEST";
                            m && (r += " instant-confirmation", n = "BOOK");
                            m = {};
                            m[r] = {
                                "span.start-time": {
                                    _: e(c.TocStartTime)
                                },
                                "span.cost": {
                                    _: a.util.currencies.formatShort(k.Cost, a.gadget.currencyId)
                                },
                                "span.label": {
                                    _: n
                                },
                                _events: {
                                    click: function(b) {
                                        return function() {
                                            if (!b.Availability.IsConstrained) {
                                                var c = [f.vcID, f.productIDs[0], g, b, a.gadget.search.userState(), j.OperatorName, 1, f.campaignID, [], f.externalSearch, void 0, void 0, a.util.exists(f.stageId) ? {
                                                    stageId: f.stageId
                                                } : void 0];
                                                if (a.util.exists(f.stageId) && f.stageId > 0) c.stage = {
                                                    stageId: f.stageId
                                                };
                                                d("item.book.click", this, c)
                                            }
                                        }
                                    }(c)
                                }
                            };
                            h.push(m)
                        }
                    });
                    if (h.length === 0) {
                        for (var k = void 0, b = a.util.map(b.items, function(b) {
                                    if (a.util.exists(b.Availability) && a.util.exists(b.Availability.NextAvailable)) return b.Availability.NextAvailable
                                }),
                                b = a.util.grep(b, function(a) {
                                    return typeof a !== "undefined"
                                }), m = 0; m < b.length; m++) {
                            var n = b[m];
                            if (typeof k === "undefined" || n < k) k = n
                        }
                        typeof k !== "undefined" && k !== null ? (k = c.json.convertDates({
                            date: k
                        }).date, h.push({
                            span: [{
                                label: "Next Available"
                            }, {
                                "": " "
                            }, {
                                "span.day": a.util.date.names.getDay(k.getDay() + 1)
                            }, {
                                "span.daydatecomma": ", "
                            }, {
                                "span.date": k.getDate()
                            }, {
                                "": " "
                            }, {
                                "span.month": a.util.date.names.getMonth(k.getMonth() + 1)
                            }, {
                                "": " "
                            }, {
                                "span.year": k.getFullYear()
                            }],
                            _attr: {
                                "class": "price tour-date"
                            }
                        })) : h.push({
                            span: "N/A",
                            _attr: {
                                "class": "price sold"
                            }
                        })
                    }
                    return h
                }(h)
            }
        };
        return n
    };
    h.removeSpecificTours = function(a, b, c, d) {
        for (var a = [], c = 0, f = d.Items.length; c < f; c++)
            for (var e = d.Items[c], j = 0, g = b.specificTours.length; j < g; j++) e.Id == b.specificTours[j] && a.push(e);
        return a
    };
    h.removeSpecificRooms = function(a, b, c, d) {
        for (var a = [], c = 0, f = d.Items.length; c < f; c++)
            for (var e = d.Items[c], j = 0, g = b.specificRooms.length; j < g; j++) e.Id == b.specificRooms[j] && a.push(e);
        return a
    };
    h.buildGridTourCollapsed = function(b, d, f, e) {
        var g = a.util.copyObject(e),
            e = b.find("div.priceGrid");
        e.length > 0 && e.remove();
        if (typeof d.specificTours != "undefined") g.Items = h.removeSpecificTours(b, d, f, g);
        var e = {
                "div.priceGrid im-grid collapsed": {
                    table: {
                        tbody: []
                    }
                }
            },
            k = e["div.priceGrid im-grid collapsed"].table.tbody,
            l = h.groupItemsByTourMasterId(g.Items);
        g.Items = h.removeTourMasterRecords(g.Items);
        l.length === 0 && g.Items.length > 0 ? h.buildGridStandard(b, d, f, g) : (g = c.json.convertDates(g), n.operator = g, l = a.util.map(l, function(a, c) {
                return h.buildGridTourCollapsedMarkup(b, d, g, f, a, ["even", "odd"][c % 2])
            }), k.push(l),
            k.length > 0 ? b.append(e) : h.noResults(b, d), d.descriptionHover && h.addHovers(b, d, f, j[f]))
    };
    h.formatSpecialText = function(b) {
        for (var c = a.text.specials[b.Type], d = 0; d < b.Variables.length; d++) c = c.replace(RegExp("\\{" + d + "\\}", "g"), b.Variables[d]);
        return c
    };
    h.buildGridStandard = function(b, d, f, e) {
        var k = b.find("div.priceGrid");
        k.length > 0 && k.remove();
        e = c.json.convertDates(e);
        if (typeof d.specificTours != "undefined") e.Items = h.removeSpecificTours(b, d, f, e);
        if (typeof d.specificRooms != "undefined") e.Items = h.removeSpecificRooms(b,
            d, f, e);
        n.operator = e;
        var k = a.gadget.region.text,
            l = {
                "div.priceGrid im-grid": {
                    table: {
                        thead: {
                            tr: [{
                                "td.title": k.headerTitle
                            }, {
                                "td.quantity": k.quantity
                            }, {
                                "td.total": k.total
                            }]
                        },
                        tbody: []
                    }
                }
            },
            u = l["div.priceGrid im-grid"].table.thead.tr,
            r = l["div.priceGrid im-grid"].table.tbody,
            t = a.util.date.names.getMonth,
            z = a.util.date.names.getDay,
            A, y = c.event.publish;
        A = a.gadget.search.userState();
        for (var v = e.Items[0].Availability.Days, w = v.length, E = 0, B = ["adults", "children", "infants", "students", "concessions", "observers", "family"],
                C = B.length; C--;) {
            var H = A[B[C]];
            typeof H == "undefined" && (H = 0);
            E += parseInt(H, 10)
        }
        for (A = 0; A < w; A++) {
            H = v[A].Date;
            B = z(H.getDay() + 1, !0);
            C = H.getDate();
            H = t(H.getMonth() + 1, !0);
            B = {
                "td.date": [{
                    "a.day": B
                }, {
                    "": " "
                }, {
                    "a.date": C
                }, {
                    "": " "
                }, {
                    "a.month": H
                }]
            };
            if (f == "tours" || f == "events") B["td.date"]._attr = {
                "class": "date " + f
            };
            u.push(B)
        }
        var u = e.Items,
            t = u.length,
            F, z = u.length > 0 ? u[0].Availability.Days.length : 0;
        for (A = 0; A < t; A++) {
            var G = u[A],
                J = !(G.Availability.IsAvailable === !1 || G.Availability.Cost === 0 && f != "tours" && f != "events"),
                L = k.requestNow;
            if (f == "tours" || f == "events") {
                if (typeof G.IsGoldMedal != "undefined" && G.IsGoldMedal === !0) L = k.bookNow
            } else if (typeof e.IsGoldMedal != "undefined" && e.IsGoldMedal === !0) L = k.bookNow;
            if (!J) L = g.BE.gadget.details.text.changeDates;
            if (G.Availability.IsConstrained) G.Availability.ConstrainedMinNights === 0 ? L = a.util.exists(d.restrictedButtonText) ? d.restrictedButtonText : "Restricted" : (v = G.Availability.ConstrainedDescription, L = (a.util.exists(v) && v != "" && v.toLowerCase().indexOf("max") >= 0 ? "Max " : "Min ") + G.Availability.ConstrainedMinNights +
                " nights");
            v = {
                tr: []
            };
            w = v.tr;
            w._data = {
                _all: G,
                roomID: G.Id,
                name: G.Name
            };
            B = {
                "td.name": {
                    "div.specials": function() {
                        var b = [];
                        a.util.each(G.Availability.Specials, function(a, d) {
                            b[b.length] = {
                                div: [{
                                    "div.name": h.formatSpecialText(d)
                                }, {
                                    _attr: {
                                        "class": "special active " + d.Type,
                                        title: "<h3>" + d.Name + "</h3>\n\n<div>" + d.Description.replace(/[\n]/g, "<br />\n") + "</div>"
                                    },
                                    _events: {
                                        click: function() {
                                            var a = c(this).closest("tr").find("a.more");
                                            a.length > 0 && a[0].click()
                                        }
                                    }
                                }]
                            }
                        });
                        a.util.each(G.Availability.AvailableSpecials, function(d,
                            f) {
                            b[b.length] = {
                                div: [{
                                    "div.name": h.formatSpecialText(f)
                                }, {
                                    _attr: {
                                        "class": "special inactive " + f.Type,
                                        title: "<h3>" + f.Name + "</h3>\n\n<div>" + f.Description.replace(/[\n]/g, "<br />\n") + "</div>\n\n<label>" + a.text.upsell + "</label>"
                                    },
                                    _events: {
                                        click: function() {
                                            c("div.period select").val(f.Variables[0]).trigger("change")
                                        }
                                    }
                                }]
                            }
                        });
                        return b
                    }(),
                    a: G.Name
                },
                "td.quantity": {
                    select: function(a) {
                        var b = a.Availability.Days,
                            c = [],
                            d = 100000000000001,
                            e;
                        if (f == "tours" || f == "events") d = e = b[0].NumAvailable, d = b[0].UnlimitedPAX ? e = d : e =
                            Math.floor(d / E);
                        else
                            for (var j = 0, g = b.length; j < g; j++)
                                if (b[j].NumAvailable < d) d = e = b[j].NumAvailable; if (isFinite(e) && e-- > 0) {
                            do c.push({
                                option: {
                                    "": d - e,
                                    _attr: {
                                        value: d - e
                                    }
                                }
                            }); while (isFinite(e) && e-- > 0)
                        } else c.push({
                            option: {
                                "": 0,
                                _attr: {
                                    value: 0
                                }
                            }
                        });
                        c._events = {
                            change: function(a) {
                                return function() {
                                    a.Availability.IsConstrained || h.updateRowTotal.call(this, this.value, a.Availability.Cost)
                                }
                            }(a)
                        };
                        return c
                    }(G)
                },
                "td.total": {}
            };
            B["td.total"]["a" + (!J ? ".sold-out im-pricebutton" : ".im-pricebutton")] = function() {
                var b = h.getShortDecimalOrFree(G.Availability.Cost),
                    b = b !== "Free" ? a.util.currencies.formatShort(b, a.gadget.currencyId) : b;
                if (!J) return {
                    "span.book im-pricebutton-label": g.BE.gadget.details.text.changeDates,
                    "": " ",
                    "span.number im-pricebutton-amount": b,
                    _attr: {
                        href: "javascript://;"
                    },
                    _events: {
                        click: function() {
                            a.gadget.search.primaryDatePicker.show()
                        }
                    }
                };
                return {
                    "span.book im-pricebutton-label": L,
                    "": " ",
                    "span.number im-pricebutton-amount": b,
                    _attr: {
                        href: "javascript://;"
                    },
                    _events: {
                        click: function(b) {
                            return function() {
                                if (b.Availability.IsConstrained) {
                                    var j = c(".period select");
                                    j.val(b.Availability.ConstrainedMinNights);
                                    j.trigger("change")
                                } else {
                                    j = [d.vcID, d.productIDs[0], f, b, a.gadget.search.userState(), e.OperatorName, c(this.parentNode.parentNode).find("td.quantity select").val(), d.campaignID, [], d.externalSearch, void 0, void 0, a.util.exists(d.stageId) ? {
                                        stageId: d.stageId
                                    } : void 0];
                                    if (a.util.exists(d.stageId) && d.stageId > 0) j.stage = {
                                        stageId: d.stageId
                                    };
                                    y("item.book.click", this, j)
                                }
                            }
                        }(G)
                    }
                }
            }();
            w.push(B);
            if (d.thumbsInGrid && G.Images.length > 0) B = G.Images[0], C = B.FullSizeImage, w[0]["td.name"]["div.thumb"] = {
                img: {
                    _attr: {
                        src: B.ThumbnailImage.replace(/^http:/, ""),
                        rel: C
                    }
                }
            };
            if (G.Availability.IsConstrained && J) w[0]["td.total"]["a" + (!J ? ".sold-out im-pricebutton" : ".im-pricebutton")]._attr.value = G.Availability.ConstrainedDescription;
            var I = "even";
            A % 2 === 0 && (I = "odd");
            G.IsGoldMedal && (I += " instant-confirmation");
            G.Availability.IsConstrained && (I += " min-nights");
            J || (I += " min-nights");
            a.util.exists(G.Availability.Specials) && G.Availability.Specials.length > 0 && (I += " has-specials");
            a.util.each(G.Availability.Specials, function(a,
                b) {
                if (b.IsLastMinute) return I += " has-last-minute", !1
            });
            w._attr = {
                "class": I
            };
            if (f == "tours" || f == "events") B = {}, B = typeof G.Availability != "undefined" && typeof G.Availability.NextAvailable != "undefined" ? G.Availability.NextAvailable : null, B = B != null ? J ? {
                td: {
                    span: [{
                        label: "Available"
                    }],
                    _attr: {
                        "class": "price tour-date"
                    }
                }
            } : {
                td: {
                    span: [{
                        label: "Next Available"
                    }, {
                        "": " "
                    }, {
                        "span.day": a.util.date.names.getDay(B.getDay() + 1)
                    }, {
                        "": ", "
                    }, {
                        "span.date": B.getDate()
                    }, {
                        "": " "
                    }, {
                        "span.month": a.util.date.names.getMonth(B.getMonth() +
                            1)
                    }, {
                        "": " "
                    }, {
                        "span.year": B.getFullYear()
                    }],
                    _attr: {
                        "class": "price tour-date"
                    }
                }
            } : {
                td: {
                    span: "N/A",
                    _attr: {
                        "class": "price sold"
                    }
                }
            }, w.push(B);
            else
                for (F = 0; F < z; F++) w.push(function() {
                    var b = G.Availability.Days[F],
                        c;
                    c = b ? b.IsAvailable ? b.Cost == 0 ? {
                        td: {
                            span: "FREE",
                            _attr: {
                                "class": "price free"
                            }
                        }
                    } : {
                        td: {
                            span: a.util.currencies.formatShort(h.getShortDecimal(b.Cost), a.gadget.currencyId),
                            _attr: {
                                "class": "price"
                            }
                        }
                    } : {
                        td: {
                            span: typeof d.bookingStatus != "undefined" && d.bookingStatus != null ? d.bookingStatus : "SOLD",
                            _attr: {
                                "class": "price sold"
                            }
                        }
                    } : {
                        td: {
                            span: "N/A",
                            _attr: {
                                "class": "price"
                            }
                        }
                    };
                    if (b.Specials != null && b.Specials.length > 0) c.td._attr["class"] += " special " + b.Specials[0].Type, c.td._attr.title = "<h3>" + b.Specials[0].Name + "</h3>\n\n<div>" + b.Specials[0].Description + "</div>";
                    return c
                }());
            r.push(v)
        }
        r.length > 0 ? b.append(l) : h.noResults(b, d);
        d.descriptionHover && h.addHovers(b, d, f, j[f], e);
        b = c("body").find("div.special, td.price.special");
        for (k = 0; k < b.length; k++)
            if (l = b[k], l.title != "") d.descriptionHover ? (c(c(l).find("span").length == 0 ? l : c(l).find("span")).hover(c({
                    "div.BE product-info-hover variable": ""
                }).html(l.title)).addClass("has-hover"),
                l.title = "") : l.title = l.title.replace(/<[^>]*>/g, "").trim();
        d.showQuantity === !1 ? c(".priceGrid .quantity").css({
            display: "none"
        }) : d.showQuantity === !0 ? c(".priceGrid .quantity").css({
            display: "table-cell"
        }) : (f == "tours" || f == "events") && c(".priceGrid .quantity").css({
            display: "none"
        })
    };
    h.groupItemsByTourMasterId = function(b) {
        var c = [],
            d = a.util.map(b, function(a) {
                return a.TourMasterId
            }),
            d = a.util.distinct(a.util.grep(d, function(a) {
                return a > 0
            }), function(a, b) {
                return a === b
            });
        a.util.each(d, function(d, f) {
            var e = a.util.grep(b,
                    function(a) {
                        return a.TourMasterId === f
                    }),
                j = a.util.first(e),
                e = {
                    tourMasterId: f,
                    tourMasterName: a.util.exists(j) ? j.TourMasterTourName : "",
                    items: e
                };
            if (a.util.exists(j) && a.util.exists(j.Images) && j.Images.length > 0) e.image = a.util.first(j.Images);
            c.push(e)
        });
        return c
    };
    h.removeTourMasterRecords = function(b) {
        return a.util.grep(b, function(a) {
            return a.TourMasterId === 0
        })
    };
    h.getSimilarPropData = function(b, d) {
        var f = a.gadget.search.userState(),
            e = a.urls.endpoints.beAccomRatesGrid() + "?q=" + b.vcID;
        if (typeof d.enableRegionSearch !=
            "undefined" && d.enableRegionSearch) {
            var j = typeof d.forceRegionState != "undefined" ? d.forceRegionState : "",
                g = typeof d.forceRegionRegion != "undefined" ? d.forceRegionRegion : "",
                k = typeof d.forceRegionLoc != "undefined" ? d.forceRegionLoc : "";
            j != "" && (e += "&StateName=" + encodeURIComponent(j));
            g != "" && (e += "&RegionName=" + encodeURIComponent(g));
            k != "" && (e += "&LocationName=" + encodeURIComponent(k))
        }
        f && (e += a.util.buildParamString({
            date: f.date.replace(/^[a-zA-Z]+\s(\d+)\/(\d+)\/(\d+)/g, "$3-$2-$1"),
            period: f.period,
            adults: f.adults,
            children: f.children,
            infants: f.infants
        }));
        f = {
            "div.similar-properties BE": [{
                h3: a.gadget.details.text.similar
            }, {
                "div.spinner": ""
            }]
        };
        j = c(d.selector);
        j.empty();
        j.append(f);
        var r = j.find("div.similar-properties");
        r.addClass("loading");
        c.getJSON(e, function(a) {
            a = c.json.convertDates(a);
            a = h.removeMyself(b, a);
            n.region = a;
            h.buildSimilarProperties(b, d, r)
        })
    };
    h.removeMyself = function(a, b) {
        if (typeof a.productIDs == "undefined") return b;
        for (var c = a.productIDs[0], d = [], f = 0, e = b.length; f < e; f++) {
            var j = b[f];
            j.OperatorId != c &&
                d.push(j)
        }
        return d
    };
    var k = 0;
    h.buildSimilarProperties = function(b, d, f) {
        var e = this,
            j = arguments.callee,
            l = a.util.exists;
        if (!l(n.region) || !l(n.operator)) {
            if (!l(n.operator) && l(n.region) && (k++, k > 50)) n.operator = {
                TypeGrouping: [""],
                Address: ""
            };
            c(function() {
                j.call(e, b, d, f)
            }, 100)
        } else {
            if (typeof BE_gadgetURLOverrides != "undefined") n.region = a.gadget.region.applyGadgetDataOverrides(n.region);
            for (var l = h.similarFilter(n.operator, n.region, b, d), u = {
                    "div.items": []
                }["div.items"], r, t = 0, z = l.length; t < z; t++) r = l[t], r = {
                "div.property": {
                    _events: {
                        click: function(c) {
                            return function() {
                                var f =
                                    a.gadget.region.setupBookClick(d, {
                                        id: c.OperatorId,
                                        name: c.OperatorName,
                                        type: b.productIDs[1]
                                    }),
                                    e = f.replace(/#.*$/, ""),
                                    j = g.location,
                                    h = RegExp(j.pathname + "$", "gi");
                                j.href = f;
                                (h == e || h.test(e)) && j.reload()
                            }
                        }(r)
                    },
                    "div.name": r.OperatorName,
                    "div.thumb": function(a) {
                        var b = {
                            img: {
                                _attr: {}
                            }
                        };
                        if (a.PrimaryImage) b.img._attr.src = a.PrimaryImage.ThumbnailImage;
                        else if (a.OtherImages && a.OtherImages.length > 0) b.img._attr.src = a.OtherImages[0].ThumbnailImage;
                        else return {};
                        return b
                    }(r),
                    "div.from-price": function(b) {
                        for (var c = {
                                "span.from": "From",
                                "": " "
                            }, d = 10000000000001, f = 0, e = b.Items.length; f < e; f++)
                            if (b.Items[f].Availability.Cost < d) d = b.Items[f].Availability.Cost;
                        c["span.cost"] = a.util.currencies.formatShort(d, a.gadget.currencyId);
                        return c
                    }(r)
                }
            }, u.push(r);
            f.removeClass("loading");
            f.append(u)
        }
    };
    h.similarFilter = function(a, b, c, d) {
        var c = [],
            f = d.maxProperties,
            e, j = d.onlyGold,
            g = d.filterOrder,
            k = a.OperatorName;
        maxGuests = d.maxNumberOfGuests;
        e = b.length;
        if (j)
            for (; e--;) b[e].IsGoldMedal && b[e].OperatorName != k && c.push(b[e]);
        else
            for (; e--;) b[e].OperatorName !=
                k && c.push(b[e]);
        d.random && c.sort(function() {
            return 0.5 - Math.random()
        });
        d = 0;
        for (e = g.length; d < e; d++) {
            b = c;
            if (c.length > 0 && c.length <= f) return c;
            switch (g[d]) {
                case "type":
                    c = h.similarFilterByType(a, c);
                    break;
                case "rating":
                    c = h.similarFilterByRating(a, c);
                    break;
                case "location":
                    c = h.similarFilterByLocation(a, c)
            }
            c.length === 0 && (c = b)
        }
        maxGuests && (c = h.maxGuestsFilter(a, c));
        if (c.length > f) return c.slice(0, f);
        return c
    };
    h.similarFilterByType = function(a, b) {
        for (var c = a.TypeGrouping[0], d = [], f = b.length; f--;) b[f].TypeGrouping[0] ==
            c && d.push(b[f]);
        return d
    };
    h.similarFilterByRating = function(a, b) {
        for (var c = a.StarRating + 0.5, d = a.StarRating - 0.5, f = [], e = b.length; e--;) b[e].StarRating >= d && b[e].StarRating <= c && f.push(b[e]);
        return f
    };
    h.similarFilterByLocation = function(a, b) {
        for (var c = [], d = b.length, f = /.*(\d{4})[^\d]*$/, e = a.Address.replace(f, "$1"), j = [a.Latitude - 0.053, a.Longitude - 0.053, a.Latitude + 0.053, a.Longitude + 0.053]; d--;) b[d].Address && b[d].Address.replace(f, "$1") == e && c.push(b[d]), b[d].Latitude <= j[0] && b[d].Latitude >= j[2] && b[d].Longitude <=
            j[1] && b[d].Longitude >= j[3] && c.push(b[d]);
        return c
    };
    h.maxGuestsFilter = function(b, c) {
        var d = [],
            f = c.length,
            e = a.gadget.search.userState(),
            j = 0;
        typeof e.adults != "undefined" && (j += parseInt(e.adults));
        typeof e.children != "undefined" && (j += parseInt(e.children));
        typeof e.concessions != "undefined" && (j += parseInt(e.concessions));
        typeof e.infants != "undefined" && (j += parseInt(e.infants));
        typeof e.observers != "undefined" && (j += parseInt(e.observers));
        for (typeof e.students != "undefined" && (j += parseInt(e.students)); f--;)
            for (var e =
                    c[f].Items, g = c[f].Items.length; g--;)
                if (j <= e[g].MaxNumberOfGuests) {
                    d.push(c[f]);
                    break
                }
        return d
    };
    h.getDetailData = function(b, d) {
        var e, f = d.productIDs[1];
        switch (f) {
            case "accom":
                e = a.urls.endpoints.beAccomRoomDetails();
                break;
            case "tours":
                e = a.urls.endpoints.getTourOpsDetails();
                break;
            case "events":
                e = a.urls.endpoints.getEventOpsDetails()
        }
        if (typeof e == "undefined") return !1;
        e += "?q=" + d.vcID;
        e += "&operators=" + d.productIDs[0];
        typeof d.campaignID != "undefined" && (e += "&campaignid=" + d.campaignID);
        c.getJSON(e, function(a) {
            typeof a[0] !=
                "undefined" && (j[f] = a[0]);
            typeof a.Operators != "undefined" && (j[f] = a.Operators[0])
        })
    };
    var l = 0;
    h.addHovers = function(a, b, d, e, f) {
        var g = arguments.callee;
        if (typeof e == "undefined") c(function() {
            l++;
            l < 200 && g(a, b, d, j[d], f)
        }, 50);
        else {
            var k = {},
                r, t;
            switch (d) {
                case "accom":
                    r = e.Rooms;
                    t = "RoomID";
                    break;
                case "tours":
                    r = e.Tours;
                    t = "TourId";
                    break;
                case "events":
                    r = e.Events, t = "EventId"
            }
            for (var n = 0, A = r.length; n < A; n++) k[r[n][t]] = r[n];
            r = a.find("div.priceGrid table tbody tr");
            t = 0;
            for (n = r.length; t < n; t++) {
                var A = r[t],
                    y = d == "accom" ?
                    A.childNodes[2].getElementsByTagName("a")[0].getAttribute("value") : null;
                y === null && (y = void 0);
                var v = k[A._data.roomID];
                typeof y != "undefined" && h.buildRestrictedHover(a, A, y);
                typeof v != "undefined" && h.buildHover(a, b, A, v, f, y)
            }
        }
    };
    h.buildRestrictedHover = function(a, b, d) {
        a = {
            "div.BE restriction-info-hover": {
                "h3 div.name": "Booking Restriction",
                "div.description": d
            }
        };
        b = c(b).find("a.im-pricebutton");
        b.hover(a);
        b.addClass("has-hover")
    };
    h.buildHover = function(b, d, e, f, j, g) {
        var h = e._data._all,
            k = h.Name,
            b = a.util.stripTags,
            t = {
                "div.BE product-info-hover": []
            },
            n = t["div.BE product-info-hover"],
            l = c(e).find("td.name > a"),
            y;
        y = a.util.exists(a.gadget.region.list) ? a.gadget.region.list.parseParas(f.Description) : [{
            p: f.Description
        }];
        if (a.util.exists(d.showHoverInline) && d.showHoverInline) {
            t = {
                "": a.util.exists(d.showHoverInlineToggleButtonContent) ? d.showHoverInlineToggleButtonContent : ".",
                _events: {
                    click: function(b) {
                        var d = c(this),
                            e = d.parent().find(".OperatorInfo"),
                            f = a.util.hasClass(e, "OperatorInfoHidden");
                        f ? $w.event.publish("details-more-click",
                            b, {
                                theDiv: e[0],
                                clickItem: this
                            }) : $w.event.publish("details-less-click", b, {
                            theDiv: e[0],
                            clickItem: this
                        });
                        b = c(".OperatorInfoVisible");
                        b.length > 0 && (b.removeClass("OperatorInfoVisible").addClass("OperatorInfoHidden"), b = b.parent().find(".more"), b.removeClass("OperatorInfoLess"), b.addClass("OperatorInfoMore"));
                        f ? (e.removeClass("OperatorInfoHidden"), e.addClass("OperatorInfoVisible"), d.addClass("OperatorInfoLess"), d.removeClass("OperatorInfoMore")) : (e.addClass("OperatorInfoHidden"), e.removeClass("OperatorInfoVisible"),
                            d.removeClass("OperatorInfoLess"), d.addClass("OperatorInfoMore"))
                    }
                }
            };
            n = typeof g != "undefined" && g ? {
                "div.bookingRestriction OperatorItem": {
                    "span.OperatorItemHeading": "Booking Restriction:",
                    "div.OperatorItemContent": g
                }
            } : {};
            t = {
                "a.more OperatorInfoMore": t,
                "div.OperatorInfo OperatorInfoHidden": {
                    "div.contraint": n,
                    "div.specials-info": function() {
                        if (typeof j == "undefined") return {};
                        var b = null;
                        a.util.each(j.Items, function(c, d) {
                            if (b != null) return !1;
                            if (d.Id != f.RoomID) return !0;
                            a.util.each(d.Availability.Specials, function(a,
                                c) {
                                b = {
                                    "div.special": {
                                        "div.name": c.Name,
                                        "div.description": c.Description
                                    }
                                };
                                return !1
                            });
                            b == null && a.util.each(d.Availability.AvailableSpecials, function(a, c) {
                                b = {
                                    "div.special": {
                                        "div.name": c.Name,
                                        "div.description": c.Description
                                    }
                                };
                                return !1
                            })
                        });
                        b == null && (b = {});
                        return b
                    }()
                }
            };
            typeof f.RoomConfig != "undefined" && f.RoomConfig && (t["div.OperatorInfo OperatorInfoHidden"]["div.RoomConfig OperatorItem"] = {
                "span.OperatorItemHeading": "Room Configuration:",
                "div.OperatorItemContent": a.util.stripTags(f.RoomConfig)
            });
            typeof f.NoPersons !=
                "undefined" && f.NoPersons && (t["div.OperatorInfo OperatorInfoHidden"]["div.MaxGuests OperatorItem"] = {
                    "span.OperatorItemHeading": "Maximum Guests:",
                    "div.OperatorItemContent": f.NoPersons
                });
            n = [];
            l = 0;
            for (g = y.length; l < g; l++) typeof y[l] != "undefined" && n.push({
                p: b(y[l].p)
            });
            t["div.OperatorInfo OperatorInfoHidden"]["div.Description OperatorItem"] = {
                "span.OperatorItemHeading": "Description:",
                "div.OperatorItemContent": n
            };
            c(c(e).find("td")[0]).append(t)
        } else {
            h.Images.length > 0 && n.push({
                "div.image": {
                    img: {
                        _attr: {
                            src: h.Images[0].FullSizeImage.replace(/^http:/,
                                "")
                        }
                    }
                }
            });
            n.push({
                h3: k
            });
            typeof g != "undefined" && n.push({
                "p.constrained-info": {
                    "div.name": "Booking Restriction:",
                    "div.description": g
                }
            });
            n.push({
                "p.specials-info": function() {
                    if (typeof j == "undefined") return {};
                    var b = null;
                    a.util.each(j.Items, function(c, d) {
                        if (b != null) return !1;
                        if (d.Id != f.RoomID) return !0;
                        a.util.each(d.Availability.Specials, function(a, c) {
                            b = {
                                "div.special": {
                                    "div.name": c.Name,
                                    "div.description": c.Description
                                }
                            };
                            return !1
                        });
                        b == null && a.util.each(d.Availability.AvailableSpecials, function(a, c) {
                            b = {
                                "div.special": {
                                    "div.name": c.Name,
                                    "div.description": c.Description
                                }
                            };
                            return !1
                        })
                    });
                    b == null && (b = {});
                    return b
                }()
            });
            f.RoomConfig && n.push({
                h4: f.RoomConfig
            });
            f.NoPersons && n.push({
                "p.max-guests": {
                    "span.label": "Maximum guests:",
                    "": " ",
                    "span.number": f.NoPersons
                }
            });
            e = [];
            g = 0;
            for (d = y.length; g < d; g++) e.push({
                p: b(y[g].p)
            });
            n.push({
                "div.description": e
            });
            n.push({
                "hr.clear": ""
            });
            l.hover(t);
            l.addClass("has-hover")
        }
    };
    h.formatTheDecimal = function(a) {
        return a % 1 > 0 ? parseFloat(a).toFixed(2) : parseFloat(a).toFixed(0)
    };
    h.updateRowTotal = function(b, d) {
        var e = c(this.parentNode.parentNode).find("td.total a span.number"),
            f = parseInt(b, 10) * d;
        e.text(a.util.currencies.formatShort(h.formatTheDecimal.call(this, f), a.gadget.currencyId))
    };
    h.setupSubscriptions = function(b, c) {
        a.gadget.search.subscribeToChanges(function() {
            clearTimeout(f);
            f = setTimeout(function() {
                c.vcID && h.getData(b, c)
            }, 125)
        })
    }
})(window);
(function(g) {
    g.BE.gadget.details.defaults = {
        vcID: null,
        webID: null,
        embedSearch: !0,
        thumbsInGrid: !0,
        descriptionHover: !0,
        showSimilarProperties: null,
        type: null,
        productID: null,
        showQuantity: null,
        showPeriod: null,
        showAllTours: !1,
        showAllEvents: !1,
        collapseToursMode: !1
    }
})(window);
(function(g) {
    g = g.BE.gadget.details.text = {};
    g.similar = "Similar Properties";
    g.changeDates = "Change Dates"
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = null,
        f = {},
        b = 0,
        d = 0,
        j = null,
        n = e.event.publish,
        k, l = {},
        m = null,
        o = {};
    c.gadget.region = function(b, d) {
        var f = e(b);
        if (f.length === 0) return !1;
        d = c.util.mergeObjects(d, c.gadget.region.defaults);
        if (!d.vcID && !d.webID) return !1;
        c.gadget.init(d, function() {
            var c = d;
            e(b);
            typeof c.campaignID != "undefined" ? a.OverrideDefaultDateForCampaign(b, c, a.gadget.region) : a.gadget.region(b, c)
        });
        return f
    };
    c.gadget.region.itemURL = function(a) {
        return c.gadget.region.setupBookClick(k, a)
    };
    var q = /(^\s+|\s+$)/g,
        s = /(\{name\}|\{id\}|\{type\}|\{url\})/g,
        p = /('|")/g,
        x = /[^a-z0-9]/g,
        u = /-+/g;
    c.gadget.region.setupBookClick = function(b, c) {
        var d, e;
        c.type != "packages" && (e = encodeURI(c.name.replace(q, "")));
        d = b.itemDetailPageURL.replace(s, function(a) {
            switch (a) {
                case "{name}":
                    return e;
                case "{type}":
                    return c.type;
                case "{id}":
                    return c.id;
                case "{url}":
                    return a = c.name.replace(q, "").toLowerCase().replace(p, ""), a = a.replace(x, "-").replace(u, "-")
            }
            return ""
        });
        if (a.doesAnOverrideExistForOperator(c.id)) {
            var f = g.BE_gadgetURLOverrides[c.id];
            typeof f == "string" && (d = f);
            if (typeof f.url != "undefined") d = f.url
        }
        d += "#/" + c.type + "/" + c.id;
        b.campaignID !== null && (d += "/" + b.campaignID);
        return d
    };
    c.gadget.region.buildRefineTools = function(b, d, f) {
        d = c.util.mergeObjects(d, c.gadget.region.defaults);
        typeof o.locations == "undefined" && a.fetchVCLocations(d);
        typeof o.types == "undefined" && d.showAccomTypeFilter && a.fetchAcommTypes(d);
        typeof o.facilities == "undefined" && a.fetchFacilities(d);
        typeof o.tourTypes == "undefined" && a.fetchTourTypes(d);
        e(function() {
            a.buildRefineTools(b,
                d, f)
        }, 10)
    };
    c.gadget.region.buildRefineTools.saveRefineCookie = function(b) {
        a.buildRefineTools.saveRefineCookie(b)
    };
    c.gadget.region.refineCookieExists = function() {
        var a = e.cookie(c.util.cookieName("r3FinE70oLs"));
        return e.json.parse(a) != null
    };
    c.gadget.region.buildRefineTools.clearRefineCookie = function() {
        a.buildRefineTools.clearRefineCookie()
    };
    c.gadget.region.buildRefineTools.getRefineCookiePreffs = function() {
        return a.getRefineCookiePreffs()
    };
    c.gadget.region.getBEData = function(b, c) {
        a.prepGetBeData(b, c)
    };
    c.gadget.region.applyGadgetDataOverrides = function(b) {
        return a.applyGadgetDataOverrides(b)
    };
    c.gadget.region.et = function() {
        return a
    };
    a.gadget = {};
    a.gadget.region = function(b, d) {
        var f = e(b);
        if (f.length !== 0 && (k = d = c.util.mergeObjects(d, c.gadget.region.defaults), d.vcID || d.webID)) {
            f.empty();
            f.append({
                "div.region-gadget BE": ""
            });
            f = f.find("div.region-gadget");
            d.embedSearch && !d.interactiveMapMode && c.gadget.search.embed(d).appendTo(f);
            if (d.listAllMode) d.showRefineTools = !0, d.showMap = !1, d.showLegend = !1, d.showAllAccom = !0, d.showAccomTypeFilter = !0, d.showFacilitiesFilter = !0, d.showLocationFilter = !0, d.interactiveMapMode = !1, d.lastMinuteMode = null, f.addClass("list-all-mode");
            d.showAccomTypeFilter && e(function() {
                a.fetchAcommTypes.call(a, d)
            }, 1);
            d.showTourTypesFilter && e(function() {
                a.fetchTourTypes.call(a, d)
            }, 1);
            d.showFacilitiesFilter && e(function() {
                a.fetchFacilities.call(a, d)
            }, 1);
            d.interactiveMapMode && e(function() {
                a.fetchVCTypes.call(a, d);
                a.fetchVCBusinessGroupings.call(a, d)
            }, 1);
            d.showLocationFilter && e(function() {
                a.fetchVCLocations.call(a,
                    d)
            }, 1);
            d.lastMinuteMode !== null && !isNaN(d.lastMinuteMode) && c.gadget.search.lastMinuteMode(d.lastMinuteMode);
            var j = function() {
                a._init(f, d);
                a.setupSubscriptions(f, d);
                (d.showMap || d.interactiveMapMode) && e(function() {
                    c.util.exists(c.gadget.region.map) && c.gadget.region.map.attachMapCode(f, d)
                }, 250)
            };
            d.showRefineTools && !d.interactiveMapMode ? a.buildRefineTools(f, d, !0, function() {
                j()
            }) : j();
            var g = c.gadget.search.userCookie(),
                h = typeof d.ignoreSearchCookie != "undefined" ? d.ignoreSearchCookie : !1;
            !g && h && d.defaultProductType !=
                null && a.productUserStateExistsInSelect(f, d.defaultProductType) && a.setDefaultProductType(f, d.defaultProductType)
        }
    };
    a.productUserStateExistsInSelect = function(a, b) {
        var c = a.find("div.product select option"),
            d = !1;
        if (typeof c != "undefined")
            for (var f = 0, j = c.length; f < j; f++)
                if (e(c[f]).attr("value") == b) {
                    d = !0;
                    break
                }
        return d
    };
    a.setDefaultProductType = function(a, b) {
        typeof a.find("div.product select option") != "undefined" && e('select[rel="product"]').val(b)
    };
    a._init = function(f, e, g) {
        d = b = 0;
        if (e.vcID) {
            var h = a.IsRunningRegionSearch(e);
            (!h || h && e.interactiveMapMode || h && typeof g != "undefined" && g && c.gadget.search.locations.refreshSearchCriteriaMet()) && a.prepGetBeData(f, e);
            g = a.getProducts(f, e);
            !e.interactiveMapMode && !e.listAllMode ? a.makeTabs(f, g, e) : j = "map"
        }
    };
    a.OverrideDefaultDateForCampaign = function(b, d, f) {
        var j = c.urls.endpoints.getCampaignData() + "?q=" + d.vcID + "&campaignId" + d.campaignID;
        e.getJSON(j, function(c) {
            d.defaultDate = typeof d.defaultDate != "undefined" ? d.defaultDate : moment().startOf("day").format("DD-MM-YYYY");
            if (typeof c != "undefined" &&
                typeof c.Campaigns != "undefined" && typeof c.Campaigns.length != "undefined" && (c = a.getCampaignInfoFromJson(c.Campaigns, d.campaignID), c != null && typeof c.StartDate != "undefined" && !a.IsDateInThePast(c.StartDate))) d.defaultDate = moment(c.StartDate).startOf("day").format("DD-MM-YYYY");
            f(b, d)
        })
    };
    a.getCampaignInfoFromJson = function(a, b) {
        for (var c = null, d = 0, f = a.length; d < f; d++) {
            var e = a[d];
            if (e.CampaignId == b) {
                c = e;
                break
            }
        }
        return c
    };
    a.IsDateInThePast = function(a) {
        var a = moment(a, "YYYY-MM-DD").startOf("day"),
            b = moment().startOf("day");
        return a < b
    };
    a.doesAnOverrideExistForOperator = function(a) {
        return typeof g.BE_gadgetURLOverrides != "undefined" && g.BE_gadgetURLOverrides[a]
    };
    a.IsRunningRegionSearch = function(a) {
        return typeof a.enableRegionSearch != void 0 && a.enableRegionSearch == !0 && typeof c.gadget.search.locations != "undefined"
    };
    a.getProducts = function(a, b) {
        var d = "?q=" + b.vcID + (Object.prototype.toString.call(b.operators) === "[object Array]" ? "&operators=" + b.operators : "");
        b.showDetailsInline === !0 && (d += "&InclAvailability=true");
        return {
            accom: c.urls.endpoints.beAccomRatesGrid() +
                d,
            tours: c.urls.endpoints.beToursRatesGrid() + d,
            events: c.urls.endpoints.beEventsRatesGrid() + d,
            carhire: c.urls.endpoints.beCarHireRatesGrid() + d,
            packages: c.urls.endpoints.bePackagesRatesGrid() + d
        }
    };
    a.prepGetBeData = function(c, d) {
        if (d.vcID) {
            var f = a.getProducts(c, d),
                j = typeof d.disabledTypes != "undefined" && d.disabledTypes !== null && d.disabledTypes.length > 0 ? d.disabledTypes.join(".") : "";
            d.lastMinuteMode && (j = "tours.events.carhire.packages");
            for (var g in f) f.hasOwnProperty(g) && j.indexOf(g) == -1 && (b++, e(function(b) {
                return function() {
                    a.getBEData(c,
                        d, b, f[b])
                }
            }(g), 10))
        }
    };
    a.makeTabs = function(b, d, f) {
        var d = c.util.exists,
            h = c.gadget.region,
            k = typeof c.gadget.region.map != "undefined" && typeof c.gadget.region.map.lightinteractive != "undefined";
        if (!d(h.list) && !d(h.map) || k) return !1;
        if (b.find("div.tabs-group").length === 0) {
            b.prepend({
                "div.tabs-group": ""
            });
            b = b.find("div.tabs-group");
            d = [];
            d.push(c.gadget.region.elements.viewChoice(f));
            b.append(d);
            d = a.readViewChoice();
            h = /^#\/view\/([a-z]+)\/{0,1}([a-z]+)*\/{0,1}/.exec(g.location.hash);
            if (h !== null && (h[1] == "price" ||
                    h[1] == "list" || h[1] == "map")) d = h[1];
            d || (d = "price");
            j = d;
            b.find("div.view-choice a." + d).addClass("current");
            h !== null && c.util.exists(h[2]) && c.gadget.search.setUserState({
                product: h[2]
            });
            f.showLegend && !f.advancedPriceView && e(c.gadget.region.elements.legend(f)).appendTo(b)
        } else b.find("div.tabs-group a").removeClass("shown")
    };
    a.getBEData = function(b, j, h, k) {
        var m = c.gadget.search.userState(void 0, j);
        if (m) {
            if (j.interactiveMapMode === !0 && !j.interactiveMapUser) m.period = 1;
            var o = m.period;
            if (h == "tours" || h == "events") o =
                1;
            k += c.util.buildParamString({
                date: m.date.replace(/^[a-zA-Z]+\s(\d+)\/(\d+)\/(\d+)/g, "$3-$2-$1"),
                period: o,
                adults: m.adults,
                children: m.children,
                infants: m.infants
            });
            m.types != "ALL" && m.types !== "" && typeof m.types != "undefined" && h == "accom" && (k += "&AccomGrouping=" + encodeURI(m.types))
        }
        if (typeof c.gadget.search.locations != "undefined" && j.enableRegionSearch) {
            var m = c.gadget.search.locations.getStateValue(b),
                o = c.gadget.search.locations.getRegionValue(b),
                w = c.gadget.search.locations.getLocationValue(b);
            if (j.interactiveMapMode) {
                if (typeof j.forceRegionState !=
                    "undefined") m = j.forceRegionState;
                if (typeof j.forceRegionRegion != "undefined") o = j.forceRegionRegion;
                if (typeof j.forceRegionLoc != "undefined") w = j.forceRegionLoc
            }
            m != "" && (k += "&StateName=" + encodeURIComponent(m));
            o != "" && (k += "&RegionName=" + encodeURIComponent(o));
            w != "" && (k += "&LocationName=" + encodeURIComponent(w))
        }
        if ((j.showAllAccom || j.lastMinuteMode) && h == "accom") k += "&enforceBookingConditions=false&enforceEntirePeriod=false";
        typeof j.showAllTours != "undefined" && j.showAllTours && h == "tours" && (k += "&enforceBookingConditions=false");
        typeof j.showAllEvents != "undefined" && j.showAllEvents && h == "events" && (k += "&enforceBookingConditions=false");
        j.campaignID !== null && (k += "&CampaignId=" + j.campaignID);
        typeof j.externalSearch != "undefined" && j.externalSearch && typeof j.enableRegionSearch != "undefined" && j.enableRegionSearch && (k += "&ExternalSearch=" + j.externalSearch);
        c.util.exists(j.stageId) && j.stageId > 0 && (k += "&StageId=" + j.stageId);
        typeof f[h] != "undefined" && (f[h].cancel(), n("region.loading.end", g, b));
        n("region.loading.start", g, b);
        e(function() {
            f[h] =
                e.getJSON(k, function(b, e, j) {
                    return function(g) {
                        c.util.exists(e) && c.util.exists(e.excludeOperators) && (g = a.removeExcludedOperators(g, e));
                        c.util.exists(e) && c.util.exists(e.includedOperators) && (g = a.keepOnlyIncludedOperators(g, e));
                        d++;
                        l[j] = g;
                        a.checkLoadingStatus(b, e, j);
                        f[j] = void 0;
                        a.buildView(b, e, j, g)
                    }
                }(b, j, h))
        }, Math.round(Math.random() * 450) + 50)
    };
    a.checkLoadingStatus = function(a) {
        d == b && n("region.loading.end", g, a)
    };
    a.removeExcludedOperators = function(a, b) {
        for (var d = [], f = 0; f < a.length; f++) {
            var e = a[f];
            c.util.existsInArray(e,
                b.excludeOperators,
                function(a, b) {
                    return a.OperatorId == b
                }) || d.push(e)
        }
        return d
    };
    a.keepOnlyIncludedOperators = function(a, b) {
        for (var d = [], f = 0; f < a.length; f++) {
            var e = a[f];
            c.util.existsInArray(e, b.includedOperators, function(a, b) {
                return a.OperatorId == b
            }) && d.push(e)
        }
        return d
    };
    a.makeSpecialsHover = function(a) {
        for (var b = e("body").find("div.specials div.special, div.specials td.price.special"), c = 0; c < b.length; c++) {
            var d = b[c];
            if (d.title != "") a.descriptionHover ? (e(e(d).find("span").length == 0 ? d : e(d).find("span")).hover(e({
                    "div.BE product-info-hover variable": ""
                }).html(d.title)).addClass("has-hover"),
                d.title = "") : d.title = d.title.replace(/<[^>]*>/g, "").trim()
        }
    };
    a.noResults = function(a) {
        e("h3.noResults").remove();
        a.find("div.prices-grid").remove();
        a.find("div.list-view").remove();
        a.append({
            "h3.noResults": "Sorry, no results match your search criteria. Please change your dates and options and try searching again."
        })
    };
    a.buildView = function(b, d, f, h) {
        h = e.json.convertDates(h);
        (b.find("div.accom").length > 0 && (f == "accom" || e('select[rel="product"]').val == "accom") || b.find("div.tours").length > 0 && (f == "tours" ||
            e('select[rel="product"]').val == "tours") || b.find("div.carhire").length > 0 && (f == "carhire" || e('select[rel="product"]').val == "carhire") || b.find("div.packages").length > 0 && (f == "packages" || e('select[rel="product"]').val == "packages") || b.find("div.event").length > 0 && (f == "events" || e('select[rel="product"]').val == "events")) && e("h3.noResults").remove();
        h = a.filterData(b, d, h, f);
        h.length === 0 && (h = l[f], d.limitLocations !== null && d.limitLocations.length > 0 && (h = a.limitLocations(d, h)), c.gadget.search.userState().product ==
            f && f != "packages" && !d.interactiveMapMode && !d.lastMinuteMode && (a.noResults(b), setTimeout(function() {
                alert("Sorry, there is nothing available using the dates and/or criteria chosen.\nPlease change the dates and options chosen, then try searching again.")
            }, 50)));
        typeof BE_gadgetURLOverrides != "undefined" && (h = a.applyGadgetDataOverrides(h));
        d.advPV = f == "accom" && d.advancedPriceView !== null && c.util.exists(c.gadget.region.price.advanced) ? c.gadget.region.price.advanced(b, d) : {};
        var k = b.find("select.sortByWhich").val(),
            n = b.find("select.sortByOrder").val(),
            h = d.advPV.on ? a.splitData(b, d, h, f, k, n) : a.sortData(b, d, h, f, k, n),
            m = c.gadget.search.userState(),
            o = function() {
                f == m.product && e(function() {
                    a.showType(b, f)
                }, 125)
            },
            u = c.util.exists;
        d.listAllMode && (j = "list");
        !d.interactiveMapMode && !d.listAllMode && (k = 20, j != "price" && (k = 1500), e(function() {
            c.gadget.region.price.build(b, d, f, h);
            a.changeView(b, d, j);
            o();
            a.makeSpecialsHover(d)
        }, k));
        d.showList && !d.interactiveMapMode && u(c.gadget.region.list) && (k = 20, j != "list" && (k = 2E3), e(function() {
            c.gadget.region.list.build(b,
                d, f, h);
            a.changeView(b, d, j);
            o();
            a.makeSpecialsHover(d)
        }, k));
        if (d.showMap || d.interactiveMapMode) {
            var q = f == m.product ? !0 : !1,
                k = 20;
            j != "map" && (k = 2500);
            e(function() {
                u(c.gadget.region.map) && (c.gadget.region.map.buildMarkers(b, d, f, h, q), o(), a.makeSpecialsHover(d))
            }, k)
        }
        j == "map" && setTimeout(function() {
            var c;
            try {
                c = g.google.maps.version
            } catch (f) {}
            typeof c != "undefined" ? (a.changeView(b, d, "map"), a.makeSpecialsHover(d)) : setTimeout(arguments.callee, 50)
        }, 50)
    };
    a.applyGadgetDataOverrides = function(b) {
        for (var c = [], d = 0, f =
                b.length; d < f; d++) {
            var e = b[d],
                j = e.OperatorId;
            if (a.doesAnOverrideExistForOperator(j) && typeof BE_gadgetURLOverrides[j] != "string") {
                var j = BE_gadgetURLOverrides[j],
                    g;
                for (g in j) j.hasOwnProperty(g) && (e[g] = j[g])
            }
            c.push(e)
        }
        return c
    };
    a.showType = function(a, b) {
        a.find("div.type-group").css({
            display: "none"
        });
        a.find("div." + b).css({
            display: "block"
        });
        e(function() {
            e(g).trigger("scroll")
        }, 25)
    };
    a.changeView = function(b, d, f) {
        var h = b.find("div.prices-grid"),
            k = b.find("div.map-container"),
            n = b.find("div.list-view");
        f == "price" &&
            (h.css({
                display: "block"
            }), k.css({
                display: "none"
            }), n.css({
                display: "none"
            }));
        f == "list" && (h.css({
            display: "none"
        }), k.css({
            display: "none"
        }), n.css({
            display: "block"
        }));
        (f == "price" || f == "list") && e(function() {
            e(g).trigger("scroll")
        }, 50);
        f == "map" && (d.interactiveMapMode || c.gadget.region.map.showMarkers(c.gadget.search.userState().product, !1, d), setTimeout(function() {
            h.css({
                display: "none"
            });
            k.css({
                display: "block"
            });
            n.css({
                display: "none"
            });
            c.gadget.region.map.redraw(d);
            a.makeSpecialsHover(d)
        }, 50));
        j = f
    };
    a.saveViewChoice =
        function(a) {
            var b = c.util.cookieName("region.gadget_viewChoice");
            e.cookie(b, a)
        };
    a.readViewChoice = function() {
        return e.cookie(c.util.cookieName("region.gadget_viewChoice"))
    };
    a.setupSubscriptions = function(b, d) {
        c.gadget.search.subscribeToChanges(function() {
            clearTimeout(h);
            h = setTimeout(function() {
                d.vcID && a._init(b, d, !0)
            }, 125)
        });
        e.event.subscribe("search.product.change", function(f) {
            a.showType(b, f, !1);
            j == "map" && e(function() {
                c.gadget.region.map.showMarkers(f, !1, d)
            }, 50)
        });
        e.event.subscribe("region.view.change",
            function(c) {
                a.changeView(b, d, c);
                a.saveViewChoice(c)
            })
    };
    a.getRefineCookiePreffs = function() {
        var a = e.cookie(c.util.cookieName("r3FinE70oLs")),
            a = e.json.parse(a);
        a === null && (a = {
            type: ""
        });
        return a
    };
    a.buildRefineTools = function(b, d, f, j) {
        typeof f == "undefined" && (f = !0);
        var h = arguments.callee,
            k = typeof d.showLocationFilter != "undefined" ? d.showLocationFilter : !0;
        if (typeof o.locations == "undefined" && k || typeof o.types === "undefined" && d.showAccomTypeFilter || typeof o.facilities == "undefined" || typeof o.tourTypes == "undefined") e(function() {
            h.call(h,
                b, d, f, j)
        }, 125);
        else {
            var n = "",
                m = "",
                u = /(^\s|\s$)/g,
                q = null,
                p = null,
                s, x, J = c.util.cookieName("s0r78yPr3fEr3nce"),
                L = e.json.parse(e.cookie(J)),
                I = c.gadget.region.text,
                M = a.getRefineCookiePreffs();
            stripTags = c.util.stripTags;
            L === null && (L = ["", ""]);
            M === null && (M = {
                location: "",
                type: ""
            });
            var P = e({
                    "div.nameFilter": [{
                        "span.label": c.gadget.region.text.refineByName
                    }, {
                        "span.input": {
                            input: {
                                _events: {
                                    keyup: function(f) {
                                        var j = c.gadget.search.userState().product;
                                        e(this);
                                        f = f.target.value.replace(u, "");
                                        f !== n && (clearTimeout(q),
                                            n = f, q = setTimeout(function() {
                                                var c = a.filterData(b, d, l[j], j);
                                                a.buildView(b, d, j, c)
                                            }, 500))
                                    }
                                }
                            }
                        }
                    }]
                }),
                Q = e({
                    "div.sortBy": {
                        "div.byWhich": {
                            "span.label": I.refineSortBy,
                            "span.input": {
                                "select.sortByWhich": function() {
                                    var a = ["Rating", "Price", "Name", "Location", "Instant Confirmation", "Hot Deals", "Last Minute"],
                                        b = [],
                                        c = a.length,
                                        f = L[0],
                                        e;
                                    if (d.defaultSort != null) {
                                        switch (d.defaultSort) {
                                            case "rating":
                                                e = a.splice(0, 1);
                                                break;
                                            case "price":
                                                e = a.splice(1, 1);
                                                break;
                                            case "name":
                                                e = a.splice(2, 1);
                                                break;
                                            case "location":
                                                e = a.splice(3, 1);
                                                break;
                                            case "instant":
                                                e = a.splice(4, 1);
                                                break;
                                            case "deal":
                                                e = a.splice(5, 1);
                                                break;
                                            case "lastminute":
                                                e = a.splice(6, 1)
                                        }
                                        a.splice(0, 0, e[0])
                                    }
                                    for (; c--;) e = a[c].toLowerCase().replace(/\s/g, "-"), b[c] = {
                                        option: {
                                            "": a[c],
                                            _attr: {
                                                value: e
                                            }
                                        }
                                    }, f == e && (b[c].option._attr.selected = "selected");
                                    return b
                                }()
                            }
                        },
                        "div.byOrder": {
                            "span.label": I.sortOrder,
                            "span.input": {
                                "select.sortByOrder": function() {
                                    for (var a = [c.gadget.region.text.sortNormal, c.gadget.region.text.sortReverse], b = ["desc", "asc"], d = [], f = a.length, e = L[1], j; f--;) j = b[f], d[f] = {
                                        option: {
                                            "": a[f],
                                            _attr: {
                                                value: j
                                            }
                                        }
                                    }, e == j && (d[f].option._attr.selected = "selected");
                                    return d
                                }()
                            }
                        }
                    }
                }),
                R = e({
                    "div.maxPrice": {
                        "span.label": I.maxPrice,
                        "span.input": {
                            input: {
                                _attr: {
                                    type: "text"
                                },
                                _events: {
                                    keyup: function(f) {
                                        var j = c.gadget.search.userState().product;
                                        e(this);
                                        f = f.target.value.replace(u, "");
                                        f !== m && (clearTimeout(p), m = f, p = setTimeout(function() {
                                            var c = a.filterData(b, d, l[j], j);
                                            a.buildView(b, d, j, c)
                                        }, 500))
                                    }
                                }
                            }
                        }
                    }
                }),
                S = e({
                    "div.locationFilter": {
                        "span.label": I.locationFilter,
                        "span.input": {
                            select: function() {
                                var a =
                                    o.locations,
                                    b = [{
                                        option: {
                                            "": I.locationsAll,
                                            _attr: {
                                                value: ""
                                            }
                                        }
                                    }],
                                    f = M.location,
                                    e;
                                if (typeof a == "undefined") return b;
                                for (var j = 0, g = a.length; j < g; j++) {
                                    e = {
                                        option: {
                                            "": stripTags(a[j].Description),
                                            _attr: {
                                                value: a[j].Description
                                            }
                                        }
                                    };
                                    if (!c.util.exists(f) && c.util.exists(d.defaultRegionLoc) && d.defaultRegionLoc == a[j].Description) e.option._attr.selected = "selected";
                                    if (f == a[j].Description) e.option._attr.selected = "selected";
                                    b.push(e)
                                }
                                return b
                            }()
                        }
                    }
                });
            k || S.addClass("hide");
            var k = e({
                    "div.accommTypes": {
                        "span.label": I.accommTypes,
                        "span.input": {
                            select: function() {
                                for (var a = o.types || [], b = [{
                                        option: {
                                            "": I.locationsAll,
                                            _attr: {
                                                value: ""
                                            }
                                        }
                                    }], c = M.type, f, e = 0, j = a.length; e < j; e++) {
                                    f = {
                                        option: {
                                            _attr: {
                                                value: a[e]
                                            },
                                            "": stripTags(a[e])
                                        }
                                    };
                                    if (d.forceAccomType == null && c == a[e] || d.forceAccomType != null && a[e] == d.forceAccomType) f.option._attr.selected = "selected";
                                    b.push(f)
                                }
                                return b
                            }()
                        }
                    }
                }),
                T = e({
                    "div.tourTypes": {
                        "span.label": I.tourTypes,
                        "span.input": {
                            select: function() {
                                for (var a = o.tourTypes, b = [{
                                            option: {
                                                "": I.tourTypesAll,
                                                _attr: {
                                                    value: ""
                                                }
                                            }
                                        }], c = M.tourType, f, e =
                                        0, j = a.length; e < j; e++) {
                                    f = {
                                        option: {
                                            _attr: {
                                                value: a[e]
                                            },
                                            "": stripTags(a[e])
                                        }
                                    };
                                    if (d.forceTourType == null && c == a[e] || d.forceTourType != null && a[e] == d.forceTourType) f.option._attr.selected = "selected";
                                    b.push(f)
                                }
                                return b
                            }()
                        }
                    }
                }),
                U = e({
                    "div.facilities": {
                        "span.label": I.facilities,
                        "span.input": {
                            select: function() {
                                for (var a = o.facilities, b = [{
                                        option: {
                                            "": I.locationsAll,
                                            _attr: {
                                                value: ""
                                            }
                                        }
                                    }], c = M.facilities, d, f = 0, e = a.length; f < e; f++) {
                                    d = {
                                        option: {
                                            "": stripTags(a[f].FacilityDesc),
                                            _attr: {
                                                value: a[f].FacilityId
                                            }
                                        }
                                    };
                                    if (c == a[f].FacilityId) d.option._attr.selected =
                                        "selected";
                                    b.push(d)
                                }
                                return b
                            }()
                        }
                    }
                }),
                V = Q.find("select.sortByWhich"),
                Y = Q.find("select.sortByOrder"),
                K = S.find("select"),
                X = k.find("select"),
                W = U.find("select"),
                Z = T.find("select"),
                O = function() {
                    if (f === !0) {
                        var j = c.gadget.search.userState().product,
                            g = a.filterData(b, d, l[j], j);
                        a.buildView(b, d, j, g)
                    }
                    e.cookie(J, e.json.stringify([V.val(), Y.val()]))
                };
            V.bind("change", O);
            Y.bind("change", O);
            s = P.find("input");
            x = R.find("input");
            O = function(e) {
                if (f === !0) {
                    var j = c.gadget.search.userState().product;
                    e.target.value.replace(u,
                        "");
                    e = a.filterData(b, d, l[j], j);
                    a.buildView(b, d, j, e)
                }
                a.buildRefineTools.saveRefineCookie(b)
            };
            K.bind("change", O);
            X.bind("change", O);
            W.bind("change", O);
            Z.bind("change", O);
            K = e({
                "div.refineTools": ""
            });
            K.append(S);
            d.showAccomTypeFilter && K.append(k);
            K.append(T);
            K.append(U);
            f === !0 && (K.append(R), K.append(P));
            K.append(Q);
            typeof c.gadget.search.locations != "undefined" && d.enableRegionSearch && (P = K.find("div.locationFilter"), c.gadget.search.locations.buildRegionSearchAfter(b, d, P, !0));
            if (d.collapseRefineTools || g.BE._isMobile) {
                K.css({
                    display: "none"
                });
                var N = {
                    "div.showHideRefineTools": {
                        a: {
                            _data: {
                                shown: !1
                            },
                            _events: {
                                click: function(a) {
                                    a = a.target;
                                    if (a.tagName.toLowerCase() != "a") a = a.parentNode;
                                    var c = a._data.shown;
                                    c ? b.find("div.refineTools").slideUp() : b.find("div.refineTools").slideDown();
                                    a._data.shown = !c
                                }
                            },
                            span: I.showHideRefine
                        }
                    }
                };
                f === !0 ? b.find("div.search-gadget").append(N) : e(function() {
                    var a = e(N);
                    a.find("a span").text(I.advSearch);
                    a.insertBefore(b.find("div.refineTools"))
                }, 0)
            }
            c.gadget.search.userState().product != "accom" && (k.css({
                display: "none"
            }), U.css({
                display: "none"
            }));
            c.gadget.search.userState().product != "tours" && c.gadget.search.userState().product != "events" && T.css({
                display: "none"
            });
            e.event.subscribe("search.product.change", function(c) {
                s.val("");
                x.val("");
                b.find("div.accommTypes select").val("");
                b.find("div.locationFilter select").val("");
                b.find("div.facilities select").val("");
                c == "tours" || c == "events" ? (b.find("div.accommTypes").css({
                    display: "none"
                }), b.find("div.facilities").css({
                    display: "none"
                }), b.find("div.tourTypes").css({
                    display: ""
                })) : (c == "accom" ? (b.find("div.accommTypes").css({
                        display: ""
                    }),
                    b.find("div.facilities").css({
                        display: ""
                    })) : (b.find("div.accommTypes").css({
                    display: "none"
                }), b.find("div.facilities").css({
                    display: "none"
                })), b.find("div.tourTypes").css({
                    display: "none"
                }));
                f === !0 && a.buildView(b, d, c, l[c])
            });
            e(function() {
                e.event.publish("region.refinetools.built", b)
            }, 1);
            d.refineToolsLocation != null ? K.appendTo(e(d.refineToolsLocation)) : (d.embedSearch === !0 ? K.insertBefore(b.find("div.search-gadget div.button")) : K.appendTo(b), typeof j != "undefined" && j())
        }
    };
    a.buildRefineTools.saveRefineCookie =
        function(b) {
            a.buildRefineTools.saveRefineCookieBase(b, !1)
        };
    a.buildRefineTools.clearRefineCookie = function() {
        e.cookie(c.util.cookieName("r3FinE70oLs"), e.json.stringify({}))
    };
    a.clearRefineRegionCookieValues = function(b) {
        a.buildRefineTools.saveRefineCookieBase(b, !0)
    };
    a.buildRefineTools.saveRefineCookieBase = function(a, b) {
        var d = a.find("div.locationFilter select"),
            d = d.length > 0 ? d.val() : "",
            f = a.find("div.accommTypes select").val(),
            j = a.find("div.facilities select").val(),
            g = a.find("div.tourTypes select").val(),
            h = a.find("div.locationsFilter select"),
            k = a.find("div.stateFilter select"),
            n = a.find("div.regionFilter select");
        searchLocVal = h.length > 0 ? h.val() : "";
        searchStateVal = k.length > 0 ? k.val() : "";
        searchRegionVal = n.length > 0 ? n.val() : "";
        e.cookie(c.util.cookieName("r3FinE70oLs"), e.json.stringify({
            location: d,
            type: f,
            facilities: j,
            tourType: g,
            searchLoc: b ? "" : searchLocVal,
            searchState: b ? "" : searchStateVal,
            searchRegion: b ? "" : searchRegionVal
        }))
    };
    a.splitData = function(b, d, f, e, j, g) {
        var h = {},
            k = c.util.exists,
            n = f.length,
            m;
        if (typeof j ==
            "undefined" && typeof d.defaultSort != "undefined" || typeof j != "undefined" && j == "") j = d.defaultSort;
        if (!k(c.gadget.region.price.advanced) || !d.advPV.on) return a.sortData(b, d, f, e, j, g);
        for (; n--;) m = f[n].TypeGrouping[0], k(m) && (k(h[m]) || (h[m] = []), h[m].push(f[n]));
        for (var l in h) h.hasOwnProperty(l) && (h[l] = a.sortData(b, d, h[l], e, j, g));
        b = {};
        d = d.advPV.order;
        f = 0;
        for (e = d.length; f < e; f++) b[d[f]] = f;
        for (l in h) h.hasOwnProperty(l) && !k(b[l]) && (b[l] = f, f++);
        d = [];
        for (l in b)
            if (b.hasOwnProperty(l) && k(h[l])) {
                f = 0;
                for (e = h[l].length; f <
                    e; f++) j = h[l][f], j._advViewHeader = f === 0 ? l : void 0, d.push(j)
            }
        return d
    };
    a.sortData = function(b, c, d, f, e, j) {
        b = [];
        f = d.length;
        j = j == "asc" ? !1 : !0;
        for (c.lastMinuteMode && (e = "last-minute"); f--;) b[f] = d[f];
        switch (e) {
            case "rating":
                b = a.sortByRating(b, j, c);
                break;
            case "price":
                b = a.sortByPrice(b, j, c);
                break;
            case "name":
                b = a.sortByName(b, j, c);
                break;
            case "location":
                b = a.sortByLocation(b, j, c);
                break;
            case "instant-confirmation":
                b = a.sortByInstantConf(b, j, c);
                break;
            case "hot-deals":
                b = a.sortByHotDeals(b, j, c);
                break;
            case "last-minute":
                b =
                    a.sortByLastMinute(b, j, c);
                break;
            case "campaign":
                b = a.sortByCampaign(b)
        }
        return b
    };
    a.sortByRating = function(a, b) {
        return a.sort(function(a, c) {
            var d = a.StarRating,
                f = c.StarRating,
                e = 0;
            d > f && (e = -1);
            d < f && (e = 1);
            e === 0 && (a.IsAAARated && !c.IsAAARated && (e = -1), c.IsAAARated && !a.IsAAARated && (e = 1));
            e === 0 && (e = Math.random() < 0.5 ? -1 : 1);
            !b && e !== 0 && (e *= -1);
            return e
        })
    };
    a.sortByPrice = function(a, b) {
        return a.sort(function(a, c) {
            var d = a.Items,
                f = c.Items,
                e = 100000001,
                j = 100000001,
                g = d.length,
                h = f.length,
                k = 0;
            if (g === 0) return 1;
            if (h === 0) return -1;
            for (; g--;)
                if (d[g].Availability.Cost < e && d[g].Availability.Cost !== 0) e = d[g].Availability.Cost;
            for (; h--;)
                if (f[h].Availability.Cost < j && f[h].Availability.Cost !== 0) j = f[h].Availability.Cost;
            e < j && (k = -1);
            e > j && (k = 1);
            k === 0 && (k = Math.random() < 0.5 ? -1 : 1);
            !b && k !== 0 && (k *= -1);
            return k
        })
    };
    a.sortByName = function(a, b) {
        return a.sort(function(a, c) {
            var d = a.OperatorName,
                f = 0,
                f = [d, c.OperatorName].sort()[0] == d ? -1 : 1;
            !b && f !== 0 && (f *= -1);
            return f
        })
    };
    a.sortByLocation = function(a, b) {
        return a.sort(function(a, c) {
            var d = a.Location,
                f = c.Location,
                e = [d, f].sort(),
                j = 0;
            e[0] == d && d != f && (j = -1);
            e[0] == f && d != f && (j = 1);
            j === 0 && (j = Math.random() < 0.5 ? -1 : 1);
            !b && j !== 0 && (j *= -1);
            return j
        })
    };
    a.hasAvailableRooms = function(a) {
        if (typeof a.PackageID != "undefined" && typeof a.IsAvailable == "boolean") return a.IsAvailable;
        if (typeof a.Items == "undefined") return 0;
        if (a.Items.length === 0) return 0;
        for (var b = 0, c = 0; c < a.Items.length; c++) a.Items[c].Availability.IsAvailable && (b += 1);
        return b > 0 ? 1 : 0
    };
    a.sortByInstantConf = function(b, c) {
        return b.sort(function(b, d) {
            var f = a.hasAvailableRooms(b),
                e = a.hasAvailableRooms(d),
                j = b.IsGoldMedal,
                g = d.IsGoldMedal,
                f = e - f;
            if (f !== 0) return f;
            j && !g && (f = -1);
            !j && g && (f = 1);
            if (!j && !g || j && g) f = Math.random() < 0.5 ? -1 : 1;
            !c && f !== 0 && (f *= -1);
            return f
        })
    };
    a.sortByHotDeals = function(a, b) {
        return a.sort(function(a, c) {
            for (var d = !1, f = !1, e, j = 0, g = a.Items.length; j < g; j++)
                if (a.Items[j].Availability.Specials.length > 0) {
                    d = !0;
                    break
                }
            j = 0;
            for (g = c.Items.length; j < g; j++)
                if (c.Items[j].Availability.Specials.length > 0) {
                    f = !0;
                    break
                }
            d && !f && (e = -1);
            !d && f && (e = 1);
            if (!d && !f || d && f) e = Math.random() < 0.5 ? -1 :
                1;
            !b && e !== 0 && (e *= -1);
            return e
        })
    };
    a.sortByLastMinute = function(a, b) {
        return a.sort(function(a, d) {
            for (var f = !1, e = !1, j, g = 0, h = a.Items.length; g < h; g++) c.util.each(a.Items[g].Availability.Specials, function(b) {
                if (a.Items[g].Availability.Specials[b].IsLastMinute) return f = !0, !1
            });
            for (var k = 0, h = d.Items.length; k < h; k++) c.util.each(d.Items[k].Availability.Specials, function(a) {
                if (d.Items[k].Availability.Specials[a].IsLastMinute) return e = !0, !1
            });
            f && !e && (j = -1);
            !f && e && (j = 1);
            if (!f && !e || f && e) j = Math.random() < 0.5 ? -1 : 1;
            !b &&
                j !== 0 && (j *= -1);
            return j
        })
    };
    a.sortByCampaign = function(a) {
        return a.sort(function(a, b) {
            var c = parseInt(a.CampaignSortOrder, 10),
                d = parseInt(b.CampaignSortOrder, 10),
                f = -1;
            isNaN(c) && !isNaN(d) && (f = 1);
            !isNaN(c) && isNaN(d) && (f = -1);
            c < d && (f = -1);
            c > d && (f = 1);
            c == d && (f = Math.random() < 0.5 ? -1 : 1);
            return f
        })
    };
    a.sortByPropertyType = function(a) {
        return a.sort(function() {})
    };
    a.filterData = function(b, c, d, f) {
        return f == "packages" ? a.filterDataPackages(b, c, d, f) : a.filterDataStandard(b, c, d, f)
    };
    a.filterDataPackages = function(a, b, c) {
        return c
    };
    a.filterDataStandard = function(b, c, d, f) {
        var e, j = [],
            g = b.find("div.refineTools"),
            b = g.find("div.nameFilter input").val(),
            h = g.find("div.maxPrice input").val().replace(/[^0-9]/g, ""),
            k = g.find("div.locationFilter select").val(),
            n = g.find("div.accommTypes select").val(),
            m = g.find("div.tourTypes select").val(),
            l = g.find("div.facilities select").val();
        g.find("div.locationsFilter select").val();
        var o, u, q, p, s, g = !1;
        c.lastMinuteMode !== null && (g = !0);
        f != "accom" && (n = l = "", g = !1);
        f != "tours" && f != "events" && (m = "");
        var x = function(a,
                b) {
                var c = parseInt(b, 10),
                    d = 100000000001;
                if (!isNaN(c)) {
                    for (var f = 0, e = a.Items.length; f < e; f++)
                        if (a.Items[f].Availability.Cost < d && a.Items[f].Availability.Cost !== 0) d = a.Items[f].Availability.Cost;
                    if (d <= c) return !0;
                    return !1
                }
                return !0
            },
            Q = function(a, b) {
                if (typeof a.Locations == "undefined") return !1;
                for (var c = 0, d = a.Locations.length; c < d; c++)
                    if (a.Locations[c].Description == b) return !0;
                return !1
            },
            R = function(a, b) {
                for (var c = 0, d = a.TypeGrouping.length; c < d; c++)
                    if (a.TypeGrouping[c] == b) return !0;
                return !1
            },
            S = function(a, b) {
                for (var c =
                        0, d = a.Items.length; c < d; c++)
                    for (var f = a.Items[c], e = 0, j = f.TourTypes.length; e < j; e++)
                        if (f.TourTypes[e].toLowerCase() == b.toLowerCase()) return !0;
                return !1
            },
            T = function(a, b) {
                var c = a.Facilities,
                    d;
                if (typeof c == "undefined") return !1;
                for (var f = 0, e = c.length; f < e; f++)
                    if (d = c[f].FacilityId, d === b) return !0;
                return !1
            },
            U = function(a) {
                var a = a.Items,
                    b, c = a.length,
                    d = !1;
                for (b = 0; b < c; b++)
                    if (a[b].Availability.HasLastMinute)
                        for (var f = a[b].Availability.Days, e = f.length; e--;)
                            if (f[e].IsAvailable) {
                                d = !0;
                                break
                            }
                return d
            };
        e = function(a) {
            for (var b =
                    0, c = a.Items.length; c--;) b = Math.max(b, a.Items[c].Availability.Cost);
            if (b === 0) return !1;
            return !0
        };
        c.limitLocations !== null && c.limitLocations.length > 0 && (d = a.limitLocations(c, d));
        if (f == "accom" && !c.showAllAccom || !c.showAllTours) {
            c = [];
            f = 0;
            for (o = d.length; f < o; f++) e(d[f]) && c.push(d[f]);
            d = c
        }
        e = 0;
        for (c = d.length; e < c; e++) f = o = u = q = p = s = void 0, tourTypesPass = !1, f = b !== "" ? d[e].OperatorName.toLowerCase().indexOf(b.toLowerCase()) != -1 ? !0 : !1 : !0, o = h !== "" ? x(d[e], h) : !0, u = k !== "" ? Q(d[e], k) : !0, q = n !== "" ? R(d[e], n) : !0, p = l !== "" ? T(d[e],
            parseInt(l, 10)) : !0, s = g !== !1 ? U(d[e]) : !0, tourTypesPass = m != "" ? S(d[e], m) : !0, f && o && u && q && p && s && tourTypesPass && j.push(d[e]);
        return j
    };
    a.limitLocations = function(a, b) {
        for (var d = [], f = c.util.exists, e = a.limitLocations.join(" ").toLowerCase(), j = 0, g = b.length; j < g; j++) {
            var h = b[j];
            if (f(h.Locations))
                for (var k = 0, n = b.length; k < n; k++) {
                    var m = h.Locations[k];
                    if (f(m) && f(m.Description) && e.indexOf(m.Description.toLowerCase()) !== -1) {
                        d.push(b[j]);
                        break
                    }
                }
        }
        return d
    };
    a.fetchVCTypes = function(a) {
        var b = c.urls.endpoints.getVcCategories() +
            "?q=" + a.vcID,
            d = /(\s{2,})/g,
            f = /(^\s+|\s+$)/g,
            j = c.util.exists(a.treatPrimaryTypeAsCategory) && a.treatPrimaryTypeAsCategory;
        e.getJSON(b, function(b) {
            if (typeof b.Categories != "undefined") {
                m = {};
                for (var c = 0, e = b.Categories.length; c < e; c++) {
                    var g = b.Categories[c].CategoryName.replace(d, "").replace(f, "");
                    if (g != "Accommodation" && g != "Tours" && g != "Events" && g != "Car Hire" && g != "Packages" || j) m[b.Categories[c].CategoryId] = g
                }
                a.categories = m
            }
        })
    };
    a.fetchVCBusinessGroupings = function(b) {
        var d = c.urls.endpoints.getVcBusinessTypes() +
            "?q=" + b.vcID;
        e.getJSON(d, function(c) {
            b.businessGroupings = {
                Groupings: a.convertSjpGroupingsToGroupings(c, b)
            }
        })
    };
    a.convertSjpGroupingsToGroupings = function(a) {
        var b = /(\s{2,})/g,
            c = /(^\s+|\s+$)/g;
        if (typeof a.BusinessTypes != "undefined") {
            vcBusinessTypes = {};
            for (var d = 0, f = a.BusinessTypes.length; d < f; d++) {
                var e = a.BusinessTypes[d],
                    j = e.Description.replace(b, "").replace(c, "");
                vcBusinessTypes[e.BId] = j
            }
            return vcBusinessTypes
        }
        return {}
    };
    a.fetchVCLocations = function(a) {
        var b = c.urls.endpoints.getVcLocations() + "?q=" + a.vcID;
        e.getJSON(b, function(b) {
            var c = b.Locations;
            if (a.limitLocations !== null && a.limitLocations.length > 0)
                for (var d = a.limitLocations.join(" ").toLowerCase(), c = [], f = 0, e = b.Locations.length; f < e; f++) d.indexOf(b.Locations[f].Description.toLowerCase()) != -1 && c.push(b.Locations[f]);
            o.locations = c || []
        })
    };
    a.fetchAcommTypes = function(a) {
        a = c.urls.endpoints.beTypes() + "?q=" + a.vcID;
        e.getJSON(a, function(a) {
            o.types = a.Types || []
        })
    };
    a.fetchTourTypes = function(a) {
        a = c.urls.endpoints.getToursAttributes() + "?q=" + a.vcID;
        e.getJSON(a, function(a) {
            o.tourTypes =
                a.types || []
        })
    };
    a.fetchFacilities = function(a) {
        a = c.urls.endpoints.getVcFacilities() + "?q=" + a.vcID + "&FacilityTypeId=2";
        e.getJSON(a, function(a) {
            o.facilities = a.Facilities || []
        })
    };
    c.gadget.region.getStashedData = function(a) {
        return l[a]
    };
    c.gadget.region.filterData = function(b, c, d, f) {
        return a.filterData(b, c, d, f)
    };
    c.gadget.region.buildView = function(b, c, d, f) {
        a.buildView(b, c, d, f)
    };
    c.gadget.region.getSpecialValues = function(a) {
        var b = 0,
            d = 0,
            f = parseInt(c.gadget.search.userState().period),
            e = Number.MAX_VALUE;
        c.util.each(a.Items,
            function(a, j) {
                c.util.each(j.Availability.AvailableSpecials, function(a, b) {
                    b.Variables[0] > f && b.Variables[0] < e && (e = b.Variables[0])
                });
                c.util.each(j.Availability.AvailableSpecials, function(a, c) {
                    b = b == 1 ? 1 : -1;
                    if (c.IsLastMinute) return d = d == 1 ? 1 : -1, !1
                });
                c.util.each(j.Availability.Specials, function(a, c) {
                    b = 1;
                    if (c.IsLastMinute) return d = 1, !1
                });
                if (b == 1 && d == 1) return !1
            });
        return {
            hasSpecial: b,
            hasLastMinute: d,
            minimumNights: f,
            maximumNights: e
        }
    };
    c.gadget.region.getSpecialsElement = function(a) {
        return {
            "div.specials": function() {
                var b = [],
                    d = [],
                    f = c.gadget.region.getSpecialValues(a),
                    j = f.hasSpecial,
                    h = f.hasLastMinute,
                    k = f.maximumNights;
                j != 0 && (b[b.length] = j == -1 ? "inactive" : "active");
                h && (b[b.length] = h == -1 ? "LM inactive" : "LM active");
                for (f = 0; f < b.length; f++) d[d.length] = {
                    div: [{
                        _attr: {
                            "class": "special " + b[f],
                            title: "<div>" + g.BE.gadget.region.text.specials[b[f]] + "</div>"
                        },
                        _events: {
                            click: function() {
                                var a = function() {
                                        k != Number.MAX_VALUE && parseInt(e("div.period select").val()) != k && e("div.period select").val(k).trigger("change")
                                    },
                                    b = function(a, b) {
                                        for (var c =
                                                /[\n\t\r]/g, d = " " + b + " ", f = 0, e = a.length; f < e; f++)
                                            if ((" " + a[f].className + " ").replace(c, " ").indexOf(d) > -1) return !0;
                                        return !1
                                    },
                                    c = [],
                                    d = e(this).closest("div.region-gadget").find("div.view-choice > a.current");
                                b(d, "price") ? (a(), c = e(this).closest("tr").find("td.total a")) : b(d, "list") ? (a(), c = e(this).closest("div.list-item").find("div.fromPrice a")) : b(d, "map") && (c = e(this).closest("div.map-sidebar-item").find("div.name span"));
                                c.length > 0 && c[0].click()
                            }
                        }
                    }]
                };
                return d
            }()
        }
    }
})(window);
(function(g) {
    g.BE.gadget.region.defaults = {
        vcID: null,
        webID: null,
        locationID: null,
        showList: !0,
        showMap: !0,
        embedSearch: !0,
        mapsKey: "",
        showRefineTools: !0,
        collapseRefineTools: !0,
        refineToolsLocation: null,
        itemDetailPageURL: "/product/detail.html",
        customMapIcons: null,
        interactiveMapMode: !1,
        applyBoundsAlgorithm: !0,
        interactiveMapUser: !1,
        specificTypes: null,
        hideCategories: null,
        lastMinuteMode: null,
        vcLocations: null,
        thumbsInGrid: !0,
        defaultSort: null,
        showLocationFilter: !0,
        showAccomTypeFilter: !0,
        showFacilitiesFilter: !0,
        showTourTypesFilter: !0,
        campaignID: null,
        limitLocations: null,
        advancedPriceView: null,
        showLegend: !1,
        showAllAccom: !1,
        listAllMode: !1,
        showRoomDetails: !1,
        forceAccomType: null,
        forceTourType: null,
        bookingStatus: null,
        showQuantity: null,
        showPeriod: null,
        showAllTours: !1,
        showAllEvents: !1,
        descriptionHover: !0,
        defaultProductType: null,
        googleMapsKey: null,
        googleMapsKeyGlobal: !1
    }
})(window);
(function(g) {
    g = g.BE.gadget.region.text = {};
    g.propertyName = "Best Rates";
    g.headerTitle = "Description";
    g.total = "Total";
    g.viewLabel = "View: ";
    g.viewPrices = "Prices";
    g.viewList = "Details";
    g.viewMap = "Map";
    g.quantity = "Quantity";
    g.bookNow = "Book Now";
    g.requestNow = "Request Now";
    g.select = "Select";
    g.listDescShowMore = "show more";
    g.refineByName = "Find by name ";
    g.refineSortBy = "Sort by ";
    g.sortOrder = "Order ";
    g.sortNormal = "Normal";
    g.sortReverse = "Reverse";
    g.maxPrice = "Max Price";
    g.locationFilter = "Locations";
    g.locationsAll =
        "--- All ---";
    g.StatesAll = "--- All ---";
    g.accommTypes = "Accommodation Types";
    g.showHideRefine = "Refine Results >>";
    g.advSearch = "Advanced Search";
    g.facilities = "Facilities";
    g.changeDates = "Change Dates";
    g.viewDetails = "View Details";
    g.hideDetails = "Hide Details";
    g.tourTypes = "Tour Types";
    g.tourTypesAll = "--- All ---";
    g.legendInstant = "Instantly Confirmed";
    g.legendRequest = "On Request";
    g.eventStart = "Start Date";
    g.eventEnd = "Finish Date";
    g.types = {
        accom: "Accommodation",
        tours: "Tours",
        events: "Events",
        carhire: "Car Hire"
    };
    g.specials = {
        active: "Specials Available",
        "LM active": "Last Minute Rates Available",
        inactive: "Specials Available for dates near your stay",
        "LM inactive": "Last Minute Rates Available for dates near your stay"
    }
})(window);
(function(g) {
    g.BE.gadget.region.elements = {};
    var e = g.wisDOM,
        c = e.event.publish,
        a = g.BE.gadget.region.elements,
        h = g.BE.gadget.region.text,
        f = function() {
            var a = e(this),
                d = a.attr("rel"),
                f = a.parent();
            c("region.view.change", this, d);
            f.find("a.price").removeClass("current");
            f.find("a.list").removeClass("current");
            f.find("a.map").removeClass("current");
            a.addClass("current")
        };
    a.viewChoice = function(a) {
        var c = {
            "div.view-choice": {
                "span.label": {
                    span: h.viewLabel
                },
                "a.price": {
                    span: h.viewPrices,
                    _attr: {
                        rel: "price"
                    },
                    _events: {
                        click: f
                    }
                }
            }
        };
        a.showList && (c["div.view-choice"]["a.list"] = {
            span: h.viewList,
            _attr: {
                rel: "list"
            },
            _events: {
                click: f
            }
        });
        a.showMap && (c["div.view-choice"]["a.map"] = {
            span: h.viewMap,
            _attr: {
                rel: "map"
            },
            _events: {
                click: f
            }
        });
        return c
    };
    a.legend = function(a) {
        a = a.showLegend;
        return {
            "div.legend": {
                "div.instant": {
                    "span.blob": "",
                    "": " ",
                    "span.text": typeof a.instant != "undefined" ? a.instant : h.legendInstant
                },
                "div.request": {
                    "span.blob": "",
                    "": " ",
                    "span.text": typeof a.request != "undefined" ? a.request : h.legendRequest
                }
            }
        }
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h;
    h = c.gadget.region.price = {};
    h.build = function(c, b, d, e) {
        return a.buildPriceGrid(c, b, d, e)
    };
    h.clearAll = function(a) {
        a = a.find("div.prices-grid");
        a.length > 0 && a.find("div").remove()
    };
    a.buildPriceGrid = function(c, b, d, e) {
        return d == "packages" ? a.buildPriceGridPackage(c, b, d, e) : a.buildPriceGridStandard(c, b, d, e)
    };
    a.buildPriceGridPackage = function() {};
    a.buildPriceGridStandard = function(f, b, d, e) {
        var h = g.wisDOM,
            k = c.gadget.region.text,
            l;
        if (e.length) {
            if (!c.util.exists(c.gadget.region.list)) b.thumbsInGrid = !1;
            f.find("div.prices-grid").length === 0 && h({
                "div.prices-grid": {}
            }).addClass("im-grid").appendTo(f);
            f.find("div.prices-grid").find("div." + d).remove();
            l = {};
            l["div." + d + " type-group"] = {
                table: {
                    thead: {
                        tr: [{
                            "td.label": k.propertyName
                        }, {
                            "td.total": k.total
                        }]
                    },
                    tbody: []
                }
            };
            for (var m, o = 0, q = e.length; o < q; o++)
                if (e[o].Items.length > 0) {
                    m = e[o].Items[0].Availability.Days;
                    break
                }
            for (var o = l["div." + d + " type-group"].table.thead.tr, q = m.length, s = c.util.date.names.getDay, p = c.util.date.names.getMonth, x = c.gadget.search.userState().period,
                    u = 0; u < q; u++) {
                var r = m[u].Date,
                    t = s(r.getDay() + 1, !0),
                    z = r.getDate(),
                    r = p(r.getMonth() + 1, !0),
                    t = {
                        "td.date": [{
                            "a.day": t
                        }, {
                            "": " "
                        }, {
                            "a.date": z
                        }, {
                            "": " "
                        }, {
                            "a.month": r
                        }]
                    };
                if (d == "events" || d == "tours") t["td.date"]._attr = {
                    "class": "date " + d
                };
                o.push(t)
            }
            m = l["div." + d + " type-group"].table.tbody;
            var q = e.length,
                A, y, s = c.urls.img.listViewFallback(d),
                p = c.urls.img.unloadedImg(),
                t = c.util.exists;
            if (b.advPV.on || b.showRoomDetails && c.util.exists(c.gadget.region.price.advanced)) m._attr = {
                "class": "advanced-price-view"
            };
            for (u = 0; u <
                q; u++)
                if (y = e[u], t(y._advViewHeader) && m.push({
                        "tr.grouping-header": {
                            "td.header": {
                                "": y._advViewHeader,
                                _attr: {
                                    colSpan: 2
                                }
                            },
                            "td.legend": {
                                div: c.gadget.region.elements.legend(b),
                                _attr: {
                                    colSpan: Math.max(x, y.Items[0].Availability.Days.length)
                                }
                            }
                        }
                    }), A = y.Items.length, A !== 0) {
                    u % 20 === 0 && u !== 0 && !b.advPV.on && m.push({
                        "tr.inline-header": o
                    });
                    for (var v = 0, w = 1E16, E, B, C, z = !1, H = function() {
                            for (var a = 0, b = 0; b < A; b++) y.Items[b].Availability.IsAvailable && a++;
                            return a
                        }() == 0, F = 0; F < A; F++)
                        if (C = !1, r = y.Items[F].Availability.Cost, !(d !=
                                "tours" && d != "events" && r === 0)) {
                            var z = y.Items[F].Availability.Days,
                                G = 0,
                                J = z.length;
                            b.lastMinuteMode && (J = x);
                            for (G = 0; G < J; G++) z[G].IsAvailable || (C = !0);
                            H ? (z = !1, r < w && r > 0 && (w = r, v = F)) : (z = !0, r < w && C === !1 && (w = r, v = F))
                        }
                    B = y.Items[v];
                    E = B.Availability;
                    A = E.Days.length;
                    if (b.lastMinuteMode !== null && d == "accom")
                        for (r = E.Cost = 0; r < x; r++) E.Cost += E.Days[r].Cost;
                    var L = c.gadget.region.setupBookClick(b, {
                            id: y.OperatorId,
                            name: y.OperatorName,
                            type: d
                        }),
                        v = typeof y.PrimaryImage != "undefined" ? y.PrimaryImage.ThumbnailImage : "";
                    if (v === "" &&
                        typeof y.OtherImages != "undefined" && y.OtherImages.length > 0) v = y.OtherImages[0].ThumbnailImage;
                    v === "" && (v = s);
                    w = k.requestNow;
                    if (typeof y.IsGoldMedal != "undefined" && y.IsGoldMedal === !0) w = k.bookNow;
                    var I = c.util.exists(b.showDetailsInline) && b.showDetailsInline;
                    C = Math.ceil(E.Cost).toString();
                    C = C !== "0" ? c.util.currencies.formatShort(C, c.gadget.currencyId) : "Free";
                    r = {
                        "td.property": [c.gadget.region.getSpecialsElement(y), {
                            "a.name": {
                                "": y.OperatorName,
                                _attr: {
                                    href: L
                                }
                            }
                        }, {
                            "span.address": function() {
                                var a = y.Location;
                                if (!c.util.exists(b.showAllLocationsForOperator)) return a;
                                if (c.util.exists(y.Locations) && y.Locations.length > 0 && b.showAllLocationsForOperator) {
                                    for (var d = "", f = 0, e = y.Locations.length; f < e; f++) {
                                        var j = y.Locations[f];
                                        c.util.exists(j.Description) && (d = d + (d == "" ? "" : " / ") + j.Description)
                                    }
                                    d != "" && (a = d)
                                }
                                return a
                            }()
                        }]
                    };
                    w = {
                        "span.book im-pricebutton-label": I ? g.BE.gadget.region.text.viewDetails : w,
                        "": " ",
                        "span.number im-pricebutton-amount": C
                    };
                    C = I ? {
                        rel: "Operator" + y.OperatorId + ":" + y.OperatorId
                    } : {
                        href: L
                    };
                    r = {
                        tr: [r, {
                            "td.total": {
                                a: {
                                    "span.price im-pricebutton": w,
                                    _attr: C,
                                    _events: function() {
                                        if (I) return {
                                            click: function() {
                                                a.showDetailsGadgetInline(this,
                                                    y, d, b, e)
                                            }
                                        };
                                        return {}
                                    }()
                                }
                            }
                        }]
                    };
                    w = r.tr[1]["td.total"].a;
                    b.lastMinuteMode && (w["span.price im-pricebutton"] = {
                        "span.im-pricebutton-label": "Next \u00bb"
                    }, w._attr["class"] = "last-minute");
                    if (!z) w["span.price im-pricebutton"] = {
                        "span.im-pricebutton-label": g.BE.gadget.region.text.changeDates
                    }, w._attr["class"] = "sold-out", w._attr.href = "javascript://", w._attr.onclick = "javascript:BE.gadget.search.primaryDatePicker.show()";
                    if (b.advPV.on || b.showRoomDetails && c.util.exists(c.gadget.region.price.advanced)) r.tr[0]["td.property"].push(function() {
                        var a = [],
                            b = c.gadget.region.getSpecialValues(y),
                            d = b.hasSpecial,
                            b = b.hasLastMinute;
                        d != 0 && (a[a.length] = d == -1 ? "inactive" : "active");
                        b && (a[a.length] = b == -1 ? "LM inactive" : "LM active");
                        if (a.length > 0) {
                            d = [];
                            for (b = 0; b < a.length; b++) d[d.length] = {
                                div: [g.BE.gadget.region.text.specials[a[b]], {
                                    _attr: {
                                        "class": "special " + a[b]
                                    }
                                }]
                            };
                            return {
                                "div.specials-inline": d
                            }
                        }
                        return {
                            "div.room-name": {
                                "span.name": B.Name,
                                "span.split": " - ",
                                "span.guests": "Max guests: " + B.MaxNumberOfGuests
                            }
                        }
                    }()), r.tr[0]["td.property"].push({
                        "div.description": function() {
                            return typeof b.showRoomDetailsInline !=
                                "undefined" && b.showRoomDetailsInline == !0 ? {
                                    "a.more OperatorInfoMore": {
                                        "": "",
                                        _events: {
                                            click: function() {
                                                var a = h(this),
                                                    b = a.parent().find(".OperatorInfo"),
                                                    d = c.util.hasClass(b, "OperatorInfoHidden"),
                                                    f = h(".OperatorInfoVisible");
                                                f.length > 0 && (f.removeClass("OperatorInfoVisible").addClass("OperatorInfoHidden"), f = f.parent().find(".more"), f.removeClass("OperatorInfoLess"), f.addClass("OperatorInfoMore"));
                                                d ? (b.removeClass("OperatorInfoHidden"), b.addClass("OperatorInfoVisible"), a.addClass("OperatorInfoLess"), a.removeClass("OperatorInfoMore")) :
                                                    (b.addClass("OperatorInfoHidden"), b.removeClass("OperatorInfoVisible"), a.removeClass("OperatorInfoLess"), a.addClass("OperatorInfoMore"))
                                            }
                                        }
                                    },
                                    "div.OperatorInfo OperatorInfoHidden": {
                                        "div.specials-info": function() {
                                            var a = null;
                                            c.util.each(y.Items, function(b, d) {
                                                if (a != null) return !1;
                                                c.util.each(d.Availability.Specials, function(b, c) {
                                                    a = {
                                                        "div.special": {
                                                            "div.name": c.Name,
                                                            "div.description": c.Description
                                                        }
                                                    };
                                                    return !1
                                                });
                                                a == null && c.util.each(d.Availability.AvailableSpecials, function(b, c) {
                                                    a = {
                                                        "div.special": {
                                                            "div.name": c.Name,
                                                            "div.description": c.Description
                                                        }
                                                    };
                                                    return !1
                                                })
                                            });
                                            a == null && (a = {});
                                            return a
                                        }(),
                                        "div.OperatorAddress OperatorItem": {
                                            "span.OperatorItemHeading": "Address",
                                            "div.OperatorItemContent": c.util.stripTags(y.Address)
                                        },
                                        "div.OperatorDescription OperatorItem": {
                                            "span.OperatorItemHeading": "Description",
                                            "div.OperatorItemContent": c.util.stripTags(y.Description)
                                        }
                                    }
                                } : {
                                    span: c.util.stripTags(y.Description).substr(0, 100) + "...",
                                    "": " ",
                                    "a.more": {
                                        "": "More",
                                        _attr: {
                                            href: L
                                        }
                                    }
                                }
                        }()
                    });
                    b.thumbsInGrid === !0 && r.tr[0]["td.property"].splice(0,
                        0, {
                            "div.thumb": {
                                "img.unloaded": {
                                    _attr: {
                                        src: p,
                                        rel: v.replace(/^http:/, "")
                                    }
                                }
                            }
                        });
                    var M = "even";
                    u % 2 === 0 && (M = "odd");
                    typeof y.IsGoldMedal != "undefined" && y.IsGoldMedal === !0 && (M += " instant-confirmation");
                    c.util.each(y.Items, function(a, b) {
                        var d = !1;
                        c.util.exists(b.Availability.Specials) && b.Availability.Specials.length > 0 && (M += " has-specials", d = !0);
                        return !d
                    });
                    c.util.each(y.Items, function(a, b) {
                        var d = !1;
                        c.util.each(b.Availability.Specials, function(a, b) {
                            b.IsLastMinute && (M += " has-last-minute", d = !0);
                            return !d
                        });
                        return !d
                    });
                    b.campaignID !== null && typeof y.CampaignLevel != "undefined" && (M += " " + y.CampaignLevel.toLowerCase().replace(/[^a-z0-9\s]/g, "").replace(/\s/g, "-").replace(/^[0-9]/, ""));
                    r.tr._attr = {
                        "class": M,
                        id: "Operator" + y.OperatorId
                    };
                    r.tr._events = {
                        mouseover: function() {
                            this.className += " hover"
                        },
                        mouseout: function() {
                            this.className = this.className.replace(/\shover/, "")
                        }
                    };
                    if (y.StarRating) v = y.IsAAARated ? "aaa" : "self", w = r.tr[1]["td.total"].a, w[""] = " ", w["span.type_" + v + " rating_" + y.StarRating.toString().replace(/\./, "_")] = {
                        "span.text": y.StarRating
                    };
                    v = 0;
                    if (d == "tours" || d == "events") {
                        C = y.Items;
                        w = null;
                        v = 2;
                        H = 0;
                        for (G = C.length; H < G; H++)
                            if (J = C[H], typeof J.Availability != "undefined" && typeof J.Availability.NextAvailable != "undefined")
                                if (w == null) w = J.Availability.NextAvailable;
                                else if (J.Availability.NextAvailable < w) w = J.Availability.NextAvailable;
                        C = {
                            td: {}
                        };
                        w != null ? (w = [{
                            label: "Next Available"
                        }, {
                            "": " "
                        }, {
                            "span.day": c.util.date.names.getDay(w.getDay() + 1)
                        }, {
                            "": ", "
                        }, {
                            "span.date": w.getDate()
                        }, {
                            "": " "
                        }, {
                            "span.month": c.util.date.names.getMonth(w.getMonth() + 1)
                        }, {
                            "": " "
                        }, {
                            "span.year": w.getFullYear()
                        }], z && (w = [{
                            label: "Available"
                        }]), C = {
                            td: {
                                span: w,
                                _attr: {
                                    "class": "price tour-date"
                                }
                            }
                        }) : C = {
                            td: {
                                span: "N/A",
                                _attr: {
                                    "class": "price sold"
                                }
                            }
                        };
                        r.tr.push(C)
                    } else
                        for (F = 0; F < A; F++) {
                            v += 1;
                            z = function() {
                                var a = E.Days[F];
                                return a ? a.IsAvailable ? a.Cost == 0 ? {
                                    td: {
                                        span: "FREE",
                                        _attr: {
                                            "class": "price free"
                                        }
                                    }
                                } : {
                                    td: {
                                        span: c.util.currencies.formatShort(Math.ceil(a.Cost), c.gadget.currencyId),
                                        _attr: {
                                            "class": "price"
                                        }
                                    }
                                } : {
                                    td: {
                                        span: "SOLD",
                                        _attr: {
                                            "class": "price sold"
                                        }
                                    }
                                } : {
                                    td: {
                                        span: "N/A",
                                        _attr: {
                                            "class": "price"
                                        }
                                    }
                                }
                            }();
                            b.lastMinuteMode && F < x && (z.td._attr["class"] += " highlight");
                            if (!E.Days[F].IsAvailable) z.td._attr["class"] += " sold", z.td.span = b.bookingStatus === null ? "SOLD" : b.bookingStatus;
                            r.tr.push(z)
                        }
                    m.push(r);
                    if (I) z = {
                        "tr.operatorDetails donotshow": [{
                            "td.odContainer": {
                                _attr: {
                                    colspan: 3 + v
                                }
                            }
                        }]
                    }, z["tr.operatorDetails donotshow"]._attr = {
                        id: "Operator" + y.OperatorId + "Details",
                        rel: y.OperatorId
                    }, m.push(z)
                }
            f.find("div.prices-grid").append(l);
            if (b.thumbsInGrid === !0) {
                var P = c.gadget.region.list;
                P.bindScroll(f.find("div.prices-grid div." +
                    d), "price-" + d);
                h(function() {
                    P.checkImages("price-" + d)
                }, 125)
            }
            return !0
        }
    };
    a.type = "start";
    a.showDetailsGadgetInline = function(f, b, d, j, h) {
        var b = e(f).attr("rel").split(":"),
            f = "." + d + " #" + b[0] + "Details td",
            k = b[1],
            b = {
                productIDs: [k, d],
                vcID: j.vcID,
                ignoreSubscriptions: !0,
                descriptionHover: !0,
                showQuantity: j.showQuantity
            };
        if (c.util.exists(j.showAllTours)) b.showAllTours = j.showAllTours;
        if (c.util.exists(j.showAllAccom)) b.showAllAccom = j.showAllAccom;
        if (c.util.exists(j.showAllEvents)) b.showAllEvents = j.showAllEvents;
        if (c.util.exists(j.showHoverInline)) b.showHoverInline =
            j.showHoverInline;
        if (c.util.exists(j.bookingStatus)) b.bookingStatus = j.bookingStatus;
        if (c.util.exists(j.stageId) && j.stageId > 0) b.stageId = j.stageId;
        if (c.util.exists(j.campaignID) && j.campaignID > 0) b.campaignID = j.campaignID;
        if (c.util.exists(j.collapseToursMode) && j.collapseToursMode > 0) b.collapseToursMode = j.collapseToursMode;
        if (c.util.exists(j.restrictedButtonText)) b.restrictedButtonText = j.restrictedButtonText;
        var j = e("div.priceGrid"),
            l = j.parent().parent(),
            m = l.attr("rel"),
            o = e("#Operator" + m);
        o.find("span.price span.book").html(g.BE.gadget.region.text.viewDetails);
        o.removeClass("highlight");
        l.addClass("donotshow");
        j.remove();
        if (!(a.type !== "start" && a.type === d && k === m)) {
            a.type = d;
            for (l = 0; l < h.length; l++)
                if (j = h[l], j.OperatorId == k) {
                    h = e("#Operator" + k);
                    h.find("span.price span.book").html(g.BE.gadget.region.text.hideDetails);
                    h.addClass("highlight");
                    e(f).parent().removeClass("donotshow");
                    c.gadget.details.resetDataStore();
                    c.gadget.details.getDetailData(e(f), b);
                    c.gadget.details.buildGridStandard(e(f), b, d, j);
                    break
                }
        }
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = function(c, b, d) {
            c = e(c);
            if (c.length === 0) return !1;
            a.optionStore = b;
            a._init(c, b);
            d instanceof Function && d();
            return c
        };
    c.gadget.search = function(a, b) {
        var d = e(a);
        if (d.length === 0) return !1;
        b = c.util.mergeObjects(b, c.gadget.search.defaults);
        if (!b.vcID && !b.webID) return !1;
        c.gadget.init(b, function() {
            h(a, b)
        });
        return d
    };
    c.gadget.search.embed = function(a) {
        if (!a) return !1;
        var b = e({
                "div.embedded-search": ""
            }),
            d = {
                vcID: a.vcID,
                searchGoesTo: {
                    newPage: !1
                },
                embedded: !0,
                disabledTypes: a.disabledTypes
            },
            j;
        for (j in a) a.hasOwnProperty(j) && j != "showRefineTools" && (d[j] = a[j]);
        d = c.util.mergeObjects(d, c.gadget.search.defaults);
        if (!a.vcID && !a.webID) return !1;
        return b = h(b, d)
    };
    c.gadget.search.userState = function(c, b) {
        return a.readCurrentUserState(c, b)
    };
    c.gadget.search.userCookie = function() {
        return a.readUserCookie()
    };
    c.gadget.search.deleteCookie = function() {
        e.cookie.remove(c.util.cookieName())
    };
    c.gadget.search.subscribeToChanges = function(a) {
        if (typeof a != "function") return !1;
        for (var b = e.event.subscribe, c = ["datepicker",
                "period", "adults", "children", "infants", "types", "concessions", "students", "observers", "family", "currencyId"
            ], j = c.length; j--;) b("search." + c[j] + ".change", a)
    };
    c.gadget.search.lastMinuteMode = function() {
        var f = e("div.search-gadget.BE"),
            b = e("");
        b.push(f.find("input"));
        b.push(f.find("select"));
        f.find("div.product").css({
            display: "none"
        });
        var b = {},
            d = new Date,
            j = "";
        j += c.util.date.names.getDay(d.getDay() + 1, !0) + " ";
        j += d.getDate().toString().length == 1 ? "0" + d.getDate() + "/" : d.getDate() + "/";
        j += (d.getMonth() + 1).toString().length ==
            1 ? "0" + (d.getMonth() + 1) + "/" : d.getMonth() + 1 + "/";
        j += d.getFullYear();
        b.date = j;
        b.product = "accom";
        a.setCurrentUserState(f, b)
    };
    c.gadget.search.setUserState = function(c, b) {
        var d = e("div.search-gadget.BE");
        a.setCurrentUserState(d, c, typeof b == "undefined" ? !0 : b)
    };
    a._init = function(f, b) {
        c.gadget.search.options = b;
        a.translateCookieToQueryString(c.gadget.search.userCookie());
        f.empty();
        var d = c.gadget.search.elements,
            j = e({
                "div.search-gadget BE": ""
            }),
            g;
        g = [d.products(b.disabledTypes), d.datepicker];
        var h = [d.period(b.noPeriod),
                d.adults(b.noAdults), d.children(b.noChildren), d.infants(b.noInfants)
            ],
            l = [d.period(b.noPeriod)],
            m = [d.concessions(b.noConcessions), d.students(b.noStudents), d.observers(b.noObservers)],
            o = [d.concessions(b.noConcessions), d.students(b.noStudents), d.observers(b.noObservers)],
            q = [d.concessions(b.noConcessions), d.students(b.noStudents), d.observers(b.noObservers)],
            s = [],
            s = b.showCurrencySelector === !0 ? [d.currency(), d.button, d.loading] : [d.button, d.loading];
        if (b.productIDs) {
            d = b.productIDs[1].toLowerCase();
            isNaN(parseInt(d,
                10)) || (d = c.text.typeIDToString[d]);
            switch (d) {
                case "carhire":
                    g = g.concat(l);
                    break;
                case "tours":
                    g = g.concat(h, o);
                    break;
                case "events":
                    g = g.concat(h, m);
                    break;
                case "packages":
                    g = g.concat(h, q);
                    break;
                default:
                    g = g.concat(h)
            }
            g.push(s)
        } else g = g.concat(h, s);
        if (b.type == "packages")
            for (s = 0; s < g.length; s++)
                if (g[s]["div.period"] != null) {
                    g[s] = {};
                    break
                }
        if (typeof b.operatorConfig != "undefined" && typeof b.operatorConfig.PaxOptions != "undefined")
            for (s = 0; s < g.length; s++) {
                var h = g[s],
                    p;
                for (p in b.operatorConfig.PaxOptions) b.operatorConfig.PaxOptions.hasOwnProperty(p) &&
                    (l = p.toLowerCase(), m = b.operatorConfig.PaxOptions[p], typeof h["div." + l] != "undefined" && !m && (g[s]["div." + l] = {}))
            }
        j.append(g);
        f.append(j);
        (!c.util.exists(b.ignoreSubscriptions) || !b.ignoreSubscriptions) && a.setSubscriptions(b, j);
        b.showRefineTools && (c.gadget.region.buildRefineTools(f, {
            vcID: b.vcID,
            collapseRefineTools: b.collapseRefineTools || !1,
            limitLocations: b.limitLocations || null,
            enableRegionSearch: b.enableRegionSearch,
            forceRegionLoc: b.forceRegionLoc,
            forceRegionRegion: b.forceRegionRegion,
            forceRegionState: b.forceRegionState,
            defaultRegionLoc: b.defaultRegionLoc,
            defaultRegionRegion: b.defaultRegionRegion,
            defaultRegionState: b.defaultRegionState,
            externalSearch: b.externalSearch
        }, !1), f.addClass("refine-tools-search-gadget"));
        p = a.readUserCookie();
        s = typeof b.ignoreSearchCookie != "undefined" ? b.ignoreSearchCookie : !1;
        if (p && !s) {
            if (s = typeof b.crossDomainSearch != "undefined" && b.crossDomainSearch) g = a.GetCrossDomainQueryValues(), p = a.SetCookieValuesFromQueryStringObject(p, g);
            if (e(".details-gadget.BE").length > 0 && b.productIDs) p.product = b.productIDs[1];
            a.setCurrentUserState(j, p, void 0, b);
            s && a.saveUserState(j);
            p.product == "carhire" && j.find("div.period span.label").text(c.gadget.search.text.period.label_CarHire);
            (p.product == "tours" || p.product == "events") && j.find("div.period").css({
                display: "none"
            });
            (p.product == "tours" || p.product == "events") && a.AlterAdultSelectForTours(j, p.product)
        } else j.find("div.period select").val(b.period), j.find("div.adults select").val(b.adults), j.find("div.children select").val(b.children), j.find("div.infants select").val(b.infants),
            j.find("div.currencyId select").val(c.gadget.currencyId), b.productIDs && (d = b.productIDs[1].toLowerCase(), isNaN(parseInt(d, 10)) || (d = c.text.typeIDToString[d], (d == "tours" || d == "events") && a.AlterAdultSelectForTours(j, d))), b.productIDs && (p = b.productIDs[1].toLowerCase(), (p == "tours" || p == "events") && j.find("div.period").css({
                display: "none"
            }));
        b.productIDs && (p = b.productIDs[1].toLowerCase(), a.setCurrentUserState(j, {
            product: p
        }));
        b.showPeriod == !1 && j.find("div.period").css({
            display: "none"
        });
        b.accomOnlyMode === !0 &&
            (j.find("div.product").css({
                display: "none"
            }), j.find("div.period").css({
                display: ""
            }), a.setCurrentUserState(j, {
                product: "accom"
            }));
        b.toursOnlyMode === !0 && (j.find("div.product").css({
            display: "none"
        }), j.find("div.period").css({
            display: "none"
        }), a.setCurrentUserState(j, {
            product: "tours"
        }));
        b.hybridMode && (j.find("div.product").css({
            display: "none"
        }), j.addClass("hasTabs"), a.buildHybridTabs(j, b));
        p = c.gadget.search.getMinDate(b.minDaysFromToday);
        s = c.gadget.search.getEndDate(p);
        g = c.util.date.addDays(new Date, b.defaultDaysFromToday);
        h = j.find("div.date span.pseudo");
        if (b.defaultDate) g = b.defaultDate, typeof b.defaultDate == "string" && (g = c.util.date.parseStr(b.defaultDate)), g.getTime() < p.getTime() && (g = p);
        var x = {
            minDate: p,
            defaultDate: g,
            maxDate: s,
            quickJumpNum: 24,
            onUpdate: function(a) {
                e.event.publish("search.datepicker.change", this, a);
                e("body").removeClass("BE-calendar-open")
            }
        };
        if (a.forceDate()) x.theDefaultDate = e.datePicker.encode(c.util.date.parseStr(c.gadget.search.options.forceDate), "DAY DD/MM/YYYY");
        (!c.util.exists(b.disableDatePicker) ||
            !b.disableDatePicker) && h.datePicker(x);
        h.bind("click", function() {
            e("body").addClass("BE-calendar-open")
        });
        c.gadget.search.primaryDatePicker = {};
        c.gadget.search.primaryDatePicker.show = function() {
            var a = e(".pseudo");
            if (a.length > 0) a.val = a.text, e.datePicker.show(a, x), e(".BE")[0].scrollIntoView()
        };
        j.parent().find("div.product select").trigger("change");
        j = j.parent().find("div.currencyId select");
        for (p = 0; p < j.length; p++) c.util.autoSizeSelect(j[p])
    };
    c.gadget.search.getMinDate = function(a) {
        return c.util.date.addDays(new Date,
            a < 0 ? 0 : a)
    };
    c.gadget.search.getEndDate = function(a) {
        return c.util.date.addDays(a, 740)
    };
    a.forcePeriod = function() {
        return c.util.exists(c.gadget.search.options) && c.util.exists(c.gadget.search.options.forcePeriod)
    };
    a.forceDate = function() {
        return c.util.exists(c.gadget.search.options) && c.util.exists(c.gadget.search.options.forceDate)
    };
    a.GetCrossDomainQueryValues = function() {
        var a = {};
        (function() {
            for (var b, c = /\+/g, e = /([^&=]+)=?([^&]*)/g, h = g.location.search.substring(1); b = e.exec(h);) a[decodeURIComponent(b[1].replace(c,
                " "))] = decodeURIComponent(b[2].replace(c, " "))
        })();
        return a
    };
    a.SetCookieValuesFromQueryStringObject = function(c, b) {
        for (var d in b)
            if (b.hasOwnProperty(d)) {
                var e = !1,
                    g;
                for (g in c) c.hasOwnProperty(g) && d == g && (c[g] = b[d], e = !0);
                !e && a.isValidSearchType(d) && (c[d] = b[d])
            }
        return c
    };
    a.isValidSearchType = function() {
        return !0
    };
    a.translateCookieToQueryString = function(a) {
        var b = "",
            c;
        for (c in a) a.hasOwnProperty(c) && (b += "&" + c + "=" + a[c]);
        return b.slice(1)
    };
    a.AppendZeroItemToAdults = function(a) {
        e(a.find("div.adults select option")[0])[0].value ==
            "1" && a.find("div.adults select").prepend({
                option: {
                    _attr: {
                        value: "0"
                    },
                    "": "0"
                }
            })
    };
    a.RemoveZeroItemToAdults = function(a) {
        a = e(a.find("div.adults select option")[0]);
        a[0].value == "0" && a.remove()
    };
    a.AlterAdultSelectForTours = function(c, b) {
        b == "tours" || b == "events" ? a.AppendZeroItemToAdults(c) : a.RemoveZeroItemToAdults(c)
    };
    a.setSubscriptions = function(f, b) {
        for (var d = e.event.subscribe, j = e.event.destroy, h = a.saveUserState, k = ["datepicker", "period", "adults", "children", "infants", "concessions", "students", "observers", "types",
                "family", "currencyId"
            ], l = k.length; l--;) j("search." + k[l] + ".change"), d("search." + k[l] + ".change", function() {
            h(b)
        });
        d("search.adults.change", function(a) {
            e(this).parents("div.search-gadget").find(".students").length === 0 && parseInt(a, 10) === 0 && parseInt(b.find("div.children select").val(), 10) === 0 && b.find("div.children select").val("1")
        });
        d("search.children.change", function(a) {
            e(this).parents("div.search-gadget").find(".students").length === 0 && parseInt(a, 10) === 0 && parseInt(b.find("div.adults select").val(), 10) ===
                0 && b.find("div.adults select").val("1")
        });
        j("search.button.click");
        e.event.subscribe("search.button.click", function() {
            if (f.searchNewPage) {
                var b = "";
                typeof f.crossDomainSearch != "undefined" && f.crossDomainSearch && (b = a.translateCookieToQueryString(a.readUserCookie()));
                b = f.searchLocation + encodeURI(b != "" ? "?" + b : "");
                g.location.href = b
            }
        });
        e(g).unbind("focus.searchGadget");
        e(g).bind("focus.searchGadget", function() {
            if (!c.util.exists(a.optionStore) || !c.util.exists(a.optionStore.ignoreSearchCookie) || !a.optionStore.ignoreSearchCookie) {
                var d =
                    a.readUserCookie();
                d && a.setCurrentUserState(b, d)
            }
        });
        j("region.loading.start");
        j("region.loading.end");
        j("search.product.change");
        d("region.loading.start", function() {
            b.addClass("loading")
        });
        d("region.loading.end", function() {
            b.removeClass("loading")
        });
        d("search.product.change", function(d) {
            d == "carhire" ? b.find("div.period span.label").text(c.gadget.search.text.period.label_CarHire) : b.find("div.period span.label").text(c.gadget.search.text.period.label);
            f.showPeriod === !0 ? b.find("div.period").css({
                    display: ""
                }) :
                d == "events" || d == "tours" || d == "packages" ? b.find("div.period").css({
                    display: "none"
                }) : f.showPeriod != !1 && b.find("div.period").css({
                    display: ""
                });
            (d == "tours" || d == "events") && a.AlterAdultSelectForTours(b, d);
            var j = e("div.region-gadget");
            if (j.length > 0) d == "packages" ? (a.previousViewChoice = j.find("div.view-choice a.current"), j.find("div.view-choice a.price").css({
                display: "none"
            }), j.find("div.view-choice a.map").css({
                display: "none"
            }), j.find("div.view-choice a.list").trigger("click")) : (j.find("div.view-choice a.price").css({
                    display: ""
                }),
                j.find("div.view-choice a.map").css({
                    display: ""
                }), a.previousViewChoice != null && a.previousViewChoice.trigger("click"));
            h(b)
        })
    };
    a.typesSelect = function(a, b, d) {
        if (a.error === !0) return !1;
        var b = b.find("div.types select"),
            a = a.Types,
            e = a.length,
            g = [{
                option: {
                    "": c.gadget.search.text.types.all,
                    _attr: {
                        value: "ALL"
                    }
                }
            }];
        b.empty();
        for (var h = 0; h < e; h++) g.push({
            option: {
                "": a[h],
                _attr: {
                    value: a[h]
                }
            }
        });
        b.append(g);
        d && b.val(d.types)
    };
    a.saveUserState = function(f) {
        var f = a.readCurrentUserState(f),
            b = e.json.stringify(f);
        e.cookie(c.util.cookieName(),
            b);
        if (typeof f.currencyId != "undefined") c.gadget.currencyId = f.currencyId;
        g.name = b
    };
    a.readCurrentUserState = function(f, b) {
        var d = typeof f != "undefined" ? f : e("div.search-gadget.BE"),
            j = e("");
        j.push(d.find("input"));
        j.push(d.find("select"));
        j.push(d.find("span.pseudo"));
        if (j.length === 0) {
            var g = c.gadget.search.defaults,
                j = {
                    date: function() {
                        var a = c.util.date.addDays(new Date, g.minDaysFromToday);
                        return c.util.date.names.getDay(a.getDay() + 1, !0) + " " + a.getDate() + "/" + (a.getMonth() + 1) + "/" + a.getFullYear()
                    }(),
                    period: g.period,
                    adults: g.adults,
                    children: g.children,
                    infants: g.infants,
                    product: "accom",
                    currency: g.currency
                };
            typeof b != "undefined" && typeof b.interactiveMapMode != "undefined" && b.interactiveMapMode && typeof b.interactiveMapUser != "undefined" && b.interactiveMapUser && (j = a.updateSearchValuesFromCookie(j));
            return j
        }
        for (var d = {}, h = j.length, l, m = 0; m < h; m++) l = j[m].getAttribute("rel"), l !== null && (d[l] = e(j[m]).val() || e(j[m]).text());
        return d
    };
    a.updateSearchValuesFromCookie = function(c) {
        var b = a.readUserCookie();
        if (b)
            for (var d in b)
                if (b.hasOwnProperty(d))
                    for (var e in c)
                        if (d ==
                            e) {
                            c[e] = b[d];
                            break
                        }
        return c
    };
    a.setCurrentUserState = function(f, b, d) {
        var j = e.json.stringify(a.readCurrentUserState(f));
        if (a.forcePeriod()) b.period = c.gadget.search.options.forcePeriod;
        for (var g in b)
            if (b.hasOwnProperty(g))
                if (g == "date") {
                    if (a.forceDate()) b.date = e.datePicker.encode(c.util.date.parseStr(c.gadget.search.options.forceDate), "DAY DD/MM/YYYY");
                    f.find("div.date span.pseudo").text(b.date)
                } else if (g == "product" && (a.productUserStateExistsInSelect(f, b[g]) || a.setProductToFirstInList(f, g, b)), f.find("div." +
                g + " select").val(b[g]), g == "currencyId") c.gadget.currencyId = b[g];
        typeof b.currencyId == "undefined" && f.find("div.currencyId select").val(c.gadget.currencyId);
        b = e.json.stringify(a.readCurrentUserState(f));
        j != b && d !== !1 && e.event.publish("search.datepicker.change", f.find("div.date input"), f.find("div.date input").val())
    };
    a.productUserStateExistsInSelect = function(a, b) {
        var c = a.find("div.product select option"),
            j = !1;
        if (typeof c != "undefined")
            for (var g = 0, h = c.length; g < h; g++)
                if (e(c[g]).attr("value") == b) {
                    j = !0;
                    break
                }
        return j
    };
    a.setProductToFirstInList = function(a, b, c) {
        a = a.find("div.product select option");
        typeof a != "undefined" && (a = e(a[0]).attr("value"), typeof a != "undefined" && (c[b] = a))
    };
    a.readUserCookie = function() {
        var a = e.cookie(c.util.cookieName());
        if (a === "") a = g.name;
        return a !== "" ? e.json.parse(a) : !1
    };
    a.buildHybridTabs = function(c, b) {
        var d = b.hybridOptions,
            j = {
                "div.hybridTabs": []
            },
            g = j["div.hybridTabs"],
            h = function(c) {
                return function(d) {
                    a.hybridTabClick.call(this, d, b, c)
                }
            },
            l;
        for (l in d) d.hasOwnProperty(l) && g.push({
            a: {
                span: d[l].tabName,
                _attr: {
                    "class": "tab " + l
                },
                _events: {
                    click: h(l)
                }
            }
        });
        c.prepend(j);
        e(c.find("a.tab")[0]).trigger("click")
    };
    a.hybridTabClick = function(a, b, d) {
        var a = e(this),
            j = a.parent(),
            g = j.find("a.tab"),
            h = b.hybridOptions[d],
            d = {
                product: d
            };
        g.removeClass("current");
        a.addClass("current");
        for (var l in h) h.hasOwnProperty(l) && l !== "tabName" && l !== "searchLocation" && (d[l] = h[l]);
        if (h.searchLocation) b.searchLocation = h.searchLocation;
        c.gadget.search.setUserState(d);
        j.parent().find("div.product select").trigger("change")
    }
})(window);
(function(g) {
    g = g.BE.gadget.search.text = {};
    g.date = {};
    g.period = {};
    g.adults = {};
    g.children = {};
    g.infants = {};
    g.concessions = {};
    g.students = {};
    g.observers = {};
    g.family = {};
    g.types = {};
    g.products = {};
    g.button = {};
    g.stateFilter = {};
    g.loading = "Downloading data, please wait...";
    g.date.title = "Please choose your desired arrival date";
    g.date.label = "Date";
    g.period.title = "Choose a number of nights";
    g.period.label = "Nights";
    g.period.label_CarHire = "Days";
    g.adults.title = "";
    g.adults.label = "Adults";
    g.children.title = "";
    g.children.label =
        "Children";
    g.infants.title = "";
    g.infants.label = "Infants";
    g.concessions.title = "Valid government concessions";
    g.concessions.label = "Conces.";
    g.students.title = "Students currently in full or part-time study";
    g.students.label = "Students";
    g.observers.title = "Non-participant observers";
    g.observers.label = "Observers";
    g.family.title = "Consists of 2 adults and 2 children";
    g.family.label = "Family";
    g.types.title = "What sort of thing are you searching for?";
    g.types.label = "Type";
    g.types.loading = "Loading types...";
    g.types.all =
        "-- Show all --";
    g.button.title = "Search for hotels, tours and events";
    g.button.input = "Search";
    g.products.label = "Searching for";
    g.products.title = "What sort of thing are you search for?"
})(window);
(function(g) {
    g.BE.gadget.search.defaults = {
        vcID: null,
        webID: null,
        currencyId: null,
        period: 3,
        adults: 2,
        children: 0,
        infants: 0,
        minDaysFromToday: 0,
        defaultDaysFromToday: 0,
        searchLocation: "/search/",
        searchNewPage: !0,
        accomOnlyMode: !1,
        toursOnlyMode: !1,
        disabledTypes: null,
        showRefineTools: !1,
        hybridMode: !1,
        hybridOptions: {},
        defaultDate: null,
        enableRegionSearch: !1,
        forceRegionLoc: null,
        forceRegionRegion: null,
        forceRegionState: null,
        showPeriod: null,
        showQuantity: null
    }
})(window);
(function(g) {
    g.BE.gadget.search.elements = {};
    var e = g.wisDOM.event.publish,
        c = g.BE.gadget.search.elements,
        a = g.BE.gadget.search.text,
        h = function(a, b, c, j) {
            for (var g = {
                    select: []
                }, h = g.select; a <= b; a++) h.push({
                option: {
                    _attr: {
                        value: a
                    },
                    "": a
                }
            });
            h._events = {
                change: function() {
                    e(c, this, this.value)
                }
            };
            h._attr = {
                rel: j
            };
            return g
        };
    c.datepicker = {
        "div.date": {
            _attr: {
                title: a.date.title
            },
            "span.label": {
                span: a.date.label
            },
            "span.input": {
                "span.pseudo": {
                    _attr: {
                        rel: "date"
                    }
                }
            }
        }
    };
    c.period = function(c) {
        typeof c == "undefined" && (c = 30);
        return {
            "div.period": {
                _attr: {
                    title: a.period.title
                },
                "span.label": {
                    span: a.period.label
                },
                "span.input": h(1, c, "search.period.change", "period")
            }
        }
    };
    c.adults = function(c) {
        typeof c == "undefined" && (c = 45);
        return {
            "div.adults": {
                _attr: {
                    title: a.adults.title
                },
                "span.label": {
                    span: a.adults.label
                },
                "span.input": h(0, c, "search.adults.change", "adults")
            }
        }
    };
    c.children = function(c) {
        typeof c == "undefined" && (c = 45);
        return {
            "div.children": {
                _attr: {
                    title: a.children.title
                },
                "span.label": {
                    span: a.children.label
                },
                "span.input": h(0, c, "search.children.change", "children")
            }
        }
    };
    c.infants = function(c) {
        typeof c ==
            "undefined" && (c = 45);
        return {
            "div.infants": {
                _attr: {
                    title: a.infants.title
                },
                "span.label": {
                    span: a.infants.label
                },
                "span.input": h(0, c, "search.infants.change", "infants")
            }
        }
    };
    c.concessions = function(c) {
        typeof c == "undefined" && (c = 45);
        return {
            "div.concessions": {
                _attr: {
                    title: a.concessions.title
                },
                "span.label": {
                    span: a.concessions.label
                },
                "span.input": h(0, c, "search.concessions.change", "concessions")
            }
        }
    };
    c.students = function(c) {
        typeof c == "undefined" && (c = 45);
        return {
            "div.students": {
                _attr: {
                    title: a.students.title
                },
                "span.label": {
                    span: a.students.label
                },
                "span.input": h(0, c, "search.students.change", "students")
            }
        }
    };
    c.observers = function(c) {
        typeof c == "undefined" && (c = 45);
        return {
            "div.observers": {
                _attr: {
                    title: a.observers.title
                },
                "span.label": {
                    span: a.observers.label
                },
                "span.input": h(0, c, "search.observers.change", "observers")
            }
        }
    };
    c.currency = function() {
        return {
            "div.currencyId": {
                "span.label": {
                    span: "Currency"
                },
                span: function() {
                    for (var a = {
                            select: []
                        }, b = a.select, c = BE.util.currencies.getCurrencies(), j = 0; j < c.length; j++) {
                        var g = c[j];
                        b.push({
                            option: {
                                _attr: {
                                    value: g.CurrencyId
                                },
                                "": g.Name + " (" + g.CurrencyId + ")"
                            }
                        })
                    }
                    b._events = {
                        change: function() {
                            BE.util.autoSizeSelect(this);
                            e("search.currencyId.change", this, this.value)
                        }
                    };
                    b._attr = {
                        rel: "currencyId"
                    };
                    return a
                }()
            }
        }
    };
    c.types = {
        "div.types": {
            _attr: {
                title: a.types.title
            },
            "span.label": {
                span: a.types.label
            },
            "span.input": {
                select: {
                    option: {
                        "": a.types.loading,
                        _attr: {
                            value: ""
                        }
                    },
                    _events: {
                        change: function() {
                            e("search.types.change", this, this.value)
                        }
                    },
                    _attr: {
                        rel: "types"
                    }
                }
            }
        }
    };
    c.products = function(c) {
        var c = c || null,
            b = c !== null && c.length > 0 ? c.join(".") : "";
        return {
            "div.product": {
                _attr: {
                    title: a.products.title
                },
                "span.label": {
                    span: a.products.label
                },
                "span.input": {
                    select: function(a) {
                        var c = [],
                            f;
                        for (f in a) a.hasOwnProperty(f) && b.indexOf(f) == -1 && c.push({
                            option: {
                                _attr: {
                                    value: f
                                },
                                "": a[f]
                            }
                        });
                        c._events = {
                            change: function() {
                                e("search.product.change", this, this.value)
                            }
                        };
                        c._attr = {
                            rel: "product"
                        };
                        return c
                    }(BE.text.typeLookup)
                }
            }
        }
    };
    c.button = {
        "div.button": {
            _attr: {
                title: a.button.title
            },
            "span.input": {
                a: {
                    _events: {
                        click: function(a) {
                            e("search.button.click", this, a)
                        }
                    },
                    span: a.button.input
                }
            }
        }
    };
    c.loading = {
        "div.spinner": {
            _attr: {
                title: a.loading
            },
            span: ""
        }
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = e.event.publish,
        f, b;
    c.gadget.operator = function(b, f) {
        var g = e(b);
        if (g.length === 0) return !1;
        c.gadget.init(f, function() {
            a._init(g, f)
        });
        return g
    };
    c.gadget.operator.switchDetailsTab = function(b, c) {
        e(".details-tab").addClass("HideThis");
        e(".details-tab-" + c).removeClass("HideThis");
        e(".details-tab-button").removeClass("details-tab-button-active");
        e(".details-tab-button").removeClass("details-tab-button-afteractive");
        e(b).parent().addClass("details-tab-button-active");
        e(b).parent().next().addClass("details-tab-button-afteractive");
        a.redraw();
        return !1
    };
    c.gadget.operator.redraw = function() {
        a.redraw()
    };
    a._init = function(d, f) {
        e(d).append({
            "div.operator-gadget": {}
        });
        d = d.find("div.operator-gadget");
        e(d.append({
            "div.spinner loading": {
                _attr: {
                    width: "100px",
                    height: "100px"
                },
                span: ""
            }
        }));
        if (!a.requiredInformationSet(f)) {
            var g = a.getQueryStringValues();
            if (typeof g.operator != "undefined") f.productID = g.operator;
            if (typeof g.type != "undefined") f.type = g.type;
            if (typeof g.q != "undefined") f.productID =
                g.q, f.type = "tours";
            if (!a.requiredInformationSet(f) && (g = c.gadget.details.findIDs(f), typeof g.length != "undefined" && g.length > 0)) f.productID = g[0], f.type = g[1];
            if (!a.requiredInformationSet(f)) return a.errorOperatorNotFound(d)
        }
        a.getRequiredSjpInformation(f, function(g, l, m) {
            if (g.Operators.length == 0 || l.length == 0) return a.errorOperatorNotFound(d);
            m = (0, a.genericItemConversions[f.type])(f, m);
            g = a.buildOperatorPageModel({
                OpInformation: g,
                OpDetailsShort: l,
                OpItems: m
            });
            l = a.getOperatorPageHtml(f, g);
            d.append(l);
            b = {
                latitude: g.latitude,
                longitude: g.longitude,
                name: g.name,
                residentialAddress: g.residentialAddress
            };
            a.renderMap();
            l = e("div.imageContainer");
            if (a.isUsingSlideShow(f)) a.renderSlideShow(l, f, g);
            else {
                for (var m = [], n = 0, q = g.images.length; n < q; n++) m.push({
                    img: {
                        _attr: {
                            src: g.images[n].FullSizeImage,
                            width: "140px",
                            height: "130px"
                        }
                    }
                });
                l.append(m)
            }
            a.attachSubscriptions(d, f);
            h("Operator.Render.Complete");
            e(d).find("div.spinner.loading").remove();
            g = {
                vcID: f.vcID,
                type: f.type,
                productID: f.productID
            };
            typeof f.itemDetailsOptions != "undefined" && (g =
                c.util.mergeObjects(f.itemDetailsOptions, g));
            if (c.util.exists(f.stageId) && f.stageId > 0) g.stageId = f.stageId;
            c.gadget.details("#itemGadget", g)
        })
    };
    a.errorOperatorNotFound = function(a) {
        a.append({
            p: "Unable to load operator."
        });
        e(".spinner.loading").remove();
        return !1
    };
    a.requiredInformationSet = function(a) {
        return typeof a.type != "undefined" && typeof a.productID != "undefined"
    };
    a.getQueryStringValues = function() {
        var a = {};
        (function() {
            for (var b, c = /\+/g, e = /([^&=]+)=?([^&]*)/g, f = g.location.search.substring(1); b = e.exec(f);) a[decodeURIComponent(b[1].replace(c,
                " "))] = decodeURIComponent(b[2].replace(c, " "))
        })();
        return a
    };
    a.getRequiredSjpInformation = function(b, f) {
        var g = "?q=" + b.vcID + "&operators=" + b.productID;
        typeof b.externalSearch != "undefined" && (g += "&ExternalSearch=" + b.externalSearch);
        var h = c.urls.endpoints.getOperatorInformation() + g,
            l = c.urls.endpoints.getOpDetailsShort() + g,
            m = a.itemsEndpoints[b.type] + g;
        e.getJSON(h, function(a) {
            e.getJSON(l, function(b) {
                e.getJSON(m, function(c) {
                    f(a, b, c)
                })
            })
        })
    };
    a.itemsEndpoints = {
        accom: c.urls.endpoints.beAccomRoomDetails(),
        tours: c.urls.endpoints.getTourOpsDetails(),
        carhire: c.urls.endpoints.getCarHireVehicles(),
        events: c.urls.endpoints.getEventOpsDetails()
    };
    a.genericItemConversions = {
        accom: function(b, c) {
            return a.genericItemConversionAccom(b, c)
        },
        tours: function(b, c) {
            return a.genericItemConversionTours(b, c)
        },
        carhire: function(b, c) {
            return a.genericItemConversionCarHire(b, c)
        },
        events: function(b, c) {
            return a.genericItemConversionEvents(b, c)
        }
    };
    a.genericItemConversionCarHire = function(a, b) {
        var c = [],
            e = b[0],
            e = typeof e != "undefined" ? e.vehicles : [];
        if (typeof e == "undefined") return c;
        for (var f = 0, g = e.length; f < g; f++) {
            var h = e[f];
            c.push({
                description: h.description,
                name: h.name,
                pictures: h.pictures,
                id: h.vehicleId
            })
        }
        return {
            TypeHeading: "Car Hire",
            items: c
        }
    };
    a.genericItemConversionEvents = function(a, b) {
        var c = [],
            e = b.Operators[0],
            e = typeof e != "undefined" ? e.Events : [];
        if (typeof e == "undefined") return c;
        for (var f = 0, g = e.length; f < g; f++) {
            var h = e[f];
            c.push({
                description: h.Description,
                name: h.Name,
                pictures: h.Pictures,
                id: h.EventID
            })
        }
        return {
            TypeHeading: "Events",
            items: c
        }
    };
    a.genericItemConversionAccom = function(a,
        b) {
        var c = [],
            e = b[0],
            e = typeof e != "undefined" ? e.Rooms : [];
        if (typeof e == "undefined") return c;
        for (var f = 0, g = e.length; f < g; f++) {
            var h = e[f];
            c.push({
                description: h.Description,
                facilities: h.Facilities,
                beddingConfig: h.BeddingConfig,
                roomConfig: h.RoomConfig,
                name: h.Name,
                pictures: h.Pictures,
                id: h.RoomID
            })
        }
        return {
            TypeHeading: "Rooms",
            items: c
        }
    };
    a.genericItemConversionTours = function(a, b) {
        var c = [],
            e = b.Operators[0],
            e = typeof e != "undefined" ? e.Tours : [];
        if (typeof e == "undefined") return c;
        for (var f = 0, g = e.length; f < g; f++) {
            var h =
                e[f];
            c.push({
                description: h.Description,
                facilities: [],
                beddingConfig: "",
                roomConfig: "",
                name: h.Name,
                pictures: h.Pictures,
                id: h.TourId,
                pleaseBring: typeof h.PleaseBring != "undefined" ? h.PleaseBring : "",
                pickupPoint: typeof h.PickupPoint != "undefined" ? h.PickupPoint : "",
                notes: typeof h.Notes != "undefined" ? h.Notes : ""
            })
        }
        return {
            TypeHeading: "Tours",
            items: c
        }
    };
    a.attachSubscriptions = function() {};
    a.redraw = function() {
        a.initialiseMap()
    };
    a.isUsingSlideShow = function(a) {
        return typeof a.useImageSlideShow != "undefined" && typeof a.useImageSlideShow.jQueryObject !=
            "undefined"
    };
    a.buildOperatorPageModel = function(b) {
        var c = b.OpInformation.Operators[0],
            e = b.OpDetailsShort[0],
            b = b.OpItems;
        return {
            name: typeof e.TradingName != "undefined" ? e.TradingName : "",
            residentialAddress: typeof e.ResidentialAddress != "undefined" ? e.ResidentialAddress : "",
            description: typeof e.Description != "undefined" ? e.Description : "",
            facilities: typeof e.Facilities != "undefined" ? a.simplifyFicilities(e.Facilities) : [],
            directions: typeof c.Directions != "undefined" ? c.Directions : "",
            latitude: typeof e.Latitude != "undefined" ?
                e.Latitude : 0,
            longitude: typeof e.Longitude != "undefined" ? e.Longitude : 0,
            images: typeof e.ImageUrls != "undefined" ? e.ImageUrls : [],
            items: b,
            arrivalTime: typeof c.ArrivalTime != "undefined" ? c.ArrivalTime : "",
            departureTime: typeof c.DepartureTime != "undefined" ? c.DepartureTime : "",
            cancellationPolicy: typeof c.Cancellation != "undefined" ? c.Cancellation : "",
            pointOfDifference: typeof c.PointOfDifference != "undefined" ? c.PointOfDifference : ""
        }
    };
    a.simplifyFicilities = function(a) {
        for (var b = [], c = 0, e = a.length; c < e; c++) b.push(a[c].FacilityName);
        return b
    };
    a.buildUnorderedList = function(b) {
        for (var c = {
                ul: []
            }, e = c.ul, f = 0; f <= b.length; f++) e.push({
            li: {
                "": a.htmlEncode(b[f])
            }
        });
        return c
    };
    a.htmlEncode = function(a) {
        try {
            return a.replace(/(<([^>]+)>)/ig, "")
        } catch (b) {
            return a
        }
    };
    a.toUpperCase = function(a) {
        if (typeof a == "undefined") return a;
        return typeof a.toUpperCase != "undefined" ? a.toUpperCase() : a
    };
    a.getOperatorPageHtml = function(b, c) {
        var e = {
                "div.details-gadget-left right-colum-oprator": {
                    "div.details-gadget-intro": {
                        "div.star-rating star-rating-45": "",
                        "h1.operatorTitle": c.name,
                        "div.location": {
                            span: "Location: " + a.htmlEncode(c.residentialAddress)
                        }
                    },
                    "div.details-gadget-difference": {
                        pre: a.htmlEncode(c.pointOfDifference)
                    }
                },
                "div.details-gadget-right left-colum-oprator": {
                    "div.imageContainer": {}
                }
            },
            f = {
                "div.details-tab-button details-tab-button-1 details-tab-button-active": {
                    a: {
                        " ": "BOOK",
                        _attr: {
                            href: "#",
                            onclick: "return BE.gadget.operator.switchDetailsTab(this, 'booking');"
                        }
                    }
                },
                "div.details-tab-button details-tab-button-afteractive": {
                    a: {
                        " ": "OVERVIEW",
                        _attr: {
                            href: "#",
                            onclick: "return BE.gadget.operator.switchDetailsTab(this, 'overview');"
                        }
                    }
                },
                "div.details-tab-button 3": {
                    a: {
                        " ": "LOCATION & DIRECTIONS",
                        _attr: {
                            href: "#",
                            onclick: "return BE.gadget.operator.switchDetailsTab(this, 'location');"
                        }
                    }
                },
                "div.details-tab-button 1": {
                    a: {
                        " ": a.toUpperCase(c.items.TypeHeading) + " & POLICIES",
                        _attr: {
                            href: "#",
                            onclick: "return BE.gadget.operator.switchDetailsTab(this, 'policies');"
                        }
                    }
                },
                "div.clear": {}
            },
            g = {
                "div.details-tab-left": {
                    "div.details-gadget-description": {
                        h2: "Description",
                        pre: a.htmlEncode(c.description)
                    }
                },
                "div.details-tab-right": function() {
                    if (typeof c.facilities !=
                        "undefined" && c.facilities.length > 0) {
                        for (var b = {
                                h2: "Facilities",
                                "div.details-gadget-facilities facilities": {}
                            }, d, e = 0, f = c.facilities.length; e < f; e += 10) d = c.facilities.slice(e, e + 10), b["div.details-gadget-facilities facilities"]["span " + e] = a.buildUnorderedList(d);
                        return b
                    }
                    return {}
                }(),
                "div.clear": {}
            },
            h = {
                "div.details-tab-left": {
                    "div.details-gadget-location": {
                        "div#map_inner2.map_inner2": {
                            "div#map_canvas": {}
                        },
                        "div.clear": {}
                    }
                },
                "div.details-tab-right": {
                    "div.details-gadget-directions box": {
                        "div.directions": {
                            h2: "Directions",
                            priv: a.htmlEncode(c.directions)
                        }
                    }
                },
                "div.clear": {}
            },
            o = a.BuildItemRow(b, c),
            q;
        q = c.arrivalTime != "" && c.departureTime != "" ? {
            "div.details-gadget-hours box": {
                "p.time": {
                    strong: "Arrival Time: " + a.htmlEncode(c.arrivalTime),
                    br: {},
                    "strong.b": "Departure Time: " + a.htmlEncode(c.departureTime)
                }
            }
        } : {};
        return {
            "div#details-gadget.fullwidth": e,
            "div.clear": {},
            "div#details-tabrow": f,
            "div#details-tabs": {
                "div.details-tab details-tab-booking": {
                    "div#itemGadget": "",
                    "div#cart": ""
                },
                "div.details-tab details-tab-overview HideThis": g,
                "div.details-tab details-tab-location HideThis": h,
                "div.details-tab details-tab-policies HideThis": {
                    "div.details-tab-left": o,
                    "div.details-tab-right": {
                        "div.details-gadget-hours box": q,
                        "div.details-gadget-cancellation box": {
                            h2: "Cancellation Policy",
                            pre: a.htmlEncode(c.cancellationPolicy)
                        }
                    },
                    "div.clear": {}
                }
            }
        }
    };
    a.BuildItemRow = function(b, e) {
        for (var f = {
                h2: e.items.TypeHeading
            }, g = function(b) {
                var c = {
                    h3: a.htmlEncode(b.name),
                    p1: a.htmlEncode(b.description)
                };
                typeof b.roomConfig != "undefined" && (c.p = {
                    "strong.a": a.htmlEncode(b.roomConfig)
                });
                typeof b.pleaseBring != "undefined" && (c["p 1"] = {
                    "strong.a": a.htmlEncode(b.pleaseBring)
                });
                typeof b.pickupPoint != "undefined" && (c["p 2"] = {
                    "strong.a": a.htmlEncode(b.pickupPoint)
                });
                typeof b.notes != "undefined" && (c["p 3"] = {
                    "strong.a": a.htmlEncode(b.notes)
                });
                return c
            }, h = 0, m = e.items.items.length; h < m; h++) {
            var o = e.items.items[h],
                q = h == 0 ? "row-first" : "",
                s = typeof o.pictures != "undefined" && o.pictures.length > 0 ? o.pictures[0] : c.urls.img.listViewFallback(b.type);
            f["div.room-row " + q + " " + h] = {
                "div.row1-data": {
                    "div.rooms-left": {
                        img: {
                            _attr: {
                                src: s,
                                alt: a.htmlEncode(e.items.TypeHeading) + " Image"
                            }
                        }
                    },
                    "div.rooms-right": g(o)
                }
            };
            f["div.clear " + h] = {}
        }
        return {
            "div.details-gadget-rooms rooms": f
        }
    };
    a.renderMap = function() {
        if (c.util.exists(g.google) && c.util.exists(g.google.maps)) a.initialiseMap();
        else {
            var b = "mapsCB" + e._int.generateID();
            e("head");
            g[b] = function() {
                a.initialiseMap()
            };
            e("head").append({
                script: {
                    _attr: {
                        type: "text/javascript",
                        src: "//maps.google.com/maps/api/js?sensor=false&callback=" + b
                    }
                }
            })
        }
    };
    a.renderSlideShow = function(a, b, c) {
        if (c.images.length != 0) {
            for (var f = {
                    "div#showcase.showcase": {}
                }, g = 0, h = c.images.length; g < h; g++) {
                var o = c.images[g];
                f["div#showcase.showcase"]["div.showcase-slide " + g] = {
                    "div.showcase-content": {
                        img: {
                            _attr: {
                                src: o.FullSizeImage,
                                width: "392px",
                                height: "341px"
                            }
                        }
                    },
                    "div.showcase-thumbnail": {
                        img: {
                            _attr: {
                                src: o.ThumbnailImage,
                                width: "100px",
                                height: "70px"
                            }
                        },
                        "div.showcase-thumbnail-cover": {}
                    }
                }
            }
            a.append(f);
            e("#showcase").length > 0 && (a = typeof b.useImageSlideShow.settings != "undefined" ? b.useImageSlideShow.settings : {
                content_width: 392,
                content_height: 341,
                fit_to_parent: !1,
                auto: !1,
                interval: 3E3,
                continuous: !1,
                loading: !0,
                tooltip_width: 200,
                tooltip_icon_width: 32,
                tooltip_icon_height: 32,
                tooltip_offsetx: 18,
                tooltip_offsety: 0,
                arrows: !1,
                buttons: !1,
                btn_numbers: !1,
                keybord_keys: !0,
                mousetrace: !1,
                pauseonover: !0,
                stoponclick: !0,
                transition: "hslide",
                transition_delay: 300,
                transition_speed: 500,
                show_caption: "onhover",
                thumbnails: !0,
                thumbnails_position: "outside-last",
                thumbnails_direction: "horizontal",
                thumbnails_slidex: 0,
                dynamic_height: !1,
                speed_change: !1,
                viewline: !1
            }, b.useImageSlideShow.jQueryObject("#showcase").awShowcase(a))
        }
    };
    a.initialiseMap = function() {
        var a = new google.maps.LatLng(b.latitude, b.longitude),
            c = {
                center: a,
                zoom: 14,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
        f = new google.maps.Map(document.getElementById("map_canvas"), c);
        boundsHandle = new google.maps.LatLngBounds;
        boundsHandle.extend(a);
        var c = new google.maps.Size(24, 24),
            e = new google.maps.Point(0, 0),
            g = new google.maps.Point(0, 32);
        new google.maps.MarkerImage("http://centralgippsland.uat.setup.impartmedia.com/images/tripplanner/1.gif", c, e, g);
        c = new google.maps.Size(37, 34);
        e = new google.maps.Point(0, 0);
        g = new google.maps.Point(3, 32);
        new google.maps.MarkerImage("http://centralgippsland.uat.setup.impartmedia.com/images/tripplanner/shadow50.png", c, e, g);
        a = new google.maps.Marker({
            position: a,
            map: f,
            title: b.name
        });
        (new google.maps.InfoWindow({
            content: '<div class="map-info-window"><h3 class="be-google-map-point-title">' + b.name + "</h3><p>" + b.residentialAddress + "</p></div>"
        })).open(f, a)
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {};
    c.gadget.confirm = function(g, f) {
        var b = e(g);
        if (b.length === 0) return !1;
        f = c.util.mergeObjects(f, c.gadget.confirm.defaults);
        var d = f,
            j = e(g);
        j.length !== 0 && a._init(j, d);
        return b
    };
    a._init = function(a, f) {
        var f = f || {},
            b = c.util.cookieName("c0nf14MA71onL!Nk"),
            b = e.json.parse(e.cookie(b));
        b == null && (b = JSON.parse(g.name));
        var d = b.pdfURL,
            j = b.IsApproved;
        d === "" && j && f.demo !== !0 || (f.demo === !0 && (d = "#"), a.empty(), j ? a.append({
            "div.bookingComplete": {
                label: f.thankYouText,
                a: {
                    _attr: {
                        href: d
                    },
                    "": f.pdfLinkText
                }
            }
        }) : a.append({
            "div.bookingCancelled": {
                label: c.gadget.book.text.bookingCancelled
            }
        }), e.getJSON(c.urls.endpoints.getBooking() + "&itineraryId=" + b.ItineraryId + "&password=" + b.Password, function(a) {
            e.event.publish("Confirmation.Complete", g, a)
        }))
    }
})(window);
(function(g) {
    g.BE.gadget.confirm.defaults = {
        thankYouText: "Thank you for your booking. You can download your itinerary with the link below.",
        pdfLinkText: "Download your itinerary PDF now."
    }
})(window);
(function(g) {
    var e = g.BE;
    e.gadget.details.similar = function(c) {
        var a = {},
            g = e.util.exists;
        a.selector = c.container;
        a.enabled = !0;
        a.onlyGold = g(c.onlyGold) ? c.onlyGold : !1;
        a.random = g(c.random) ? c.random : !0;
        a.filterOrder = g(c.filterOrder) ? c.filterOrder : ["type", "rating", "location"];
        a.maxProperties = g(c.maxProperties) && c.maxProperties < 8 ? c.maxProperties : 3;
        a.itemDetailPageURL = g(c.itemDetailPageURL) ? c.itemDetailPageURL : e.gadget.region.defaults.itemDetailPageURL;
        a.campaignID = null;
        a.maxNumberOfGuests = g(c.maxNumberOfGuests) ?
            c.maxNumberOfGuests : !1;
        a.enableRegionSearch = g(c.enableRegionSearch) ? c.enableRegionSearch : !1;
        a.forceRegionState = g(c.forceRegionState) ? c.forceRegionState : "";
        a.forceRegionRegion = g(c.forceRegionRegion) ? c.forceRegionRegion : "";
        a.forceRegionLoc = g(c.forceRegionLoc) ? c.forceRegionLoc : "";
        return a
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h, f = {},
        b = c.gadget.region.text;
    h = c.gadget.region.list = {};
    h.build = function(b, c, d, e) {
        return a.buildListView(b, c, d, e)
    };
    h.bindScroll = function(b, c) {
        var d = a.checkImagesInView;
        e(g).unbind("scroll." + c);
        e(g).bind("scroll." + c, function() {
            if (b.css("display") == "none" && b.height() !== 0) return !1;
            f[c] = b.find("div.thumb img.unloaded");
            var a = arguments.callee;
            e(g).unbind("scroll." + c);
            setTimeout(function() {
                d(c)
            }, 100);
            f[c].length !== 0 && setTimeout(function() {
                    e(g).bind("scroll." + c, a)
                },
                499)
        })
    };
    h.checkImages = function(b) {
        setTimeout(function() {
            a.checkImagesInView(b)
        }, 1)
    };
    h.parseParas = function(b) {
        return a.parseParas(b)
    };
    h.clearAll = function(a) {
        a = a.find("div.list-view");
        a.length > 0 && a.find("div").remove()
    };
    a.buildListView = function(b, c, d, e) {
        return d == "packages" ? a.buildListViewPackage(b, c, d, e) : a.buildListViewStandard(b, c, d, e)
    };
    a.buildListViewPackage = function(b, d, e, j) {
        var n = g.wisDOM,
            s, p, x, u, r, t = c.gadget.region.itemURL,
            z, A = c.urls.img.listViewFallback(e),
            y = c.urls.img.unloadedImg();
        c.gadget.search.userState();
        if (j.length) {
            n(g).unbind("scroll." + e);
            b.find("div.list-view").length === 0 && n({
                "div.list-view": {}
            }).appendTo(b);
            var v = b.find("div.list-view");
            v.find("div." + e).remove();
            b = {};
            b["div." + e + " type-group"] = s = [];
            for (var w = 0, E = j.length; w < E; w++) {
                p = j[w];
                x = {};
                u = w % 2 === 0 ? "odd" : "even";
                typeof p.IsGoldMedal != "undefined" && p.IsGoldMedal === !0 && (u += " instant-confirmation");
                d.campaignID !== null && typeof p.CampaignLevel != "undefined" && (u += " " + p.CampaignLevel.toLowerCase().replace(/[^a-z0-9\s]/g, "").replace(/\s/g, "-").replace(/^[0-9]/,
                    ""));
                x["div.list-item " + u] = [];
                u = x["div.list-item " + u];
                r = t({
                    id: p.PackageID,
                    name: p.Name,
                    type: e
                });
                u._events = {
                    mouseover: function() {
                        this.className += " hover"
                    },
                    mouseout: function() {
                        this.className = this.className.replace(/\shover/, "")
                    }
                };
                z = typeof p.PrimaryImage != "undefined" ? p.PrimaryImage.ThumbnailImage : "";
                if (z === "" && typeof p.Images != "undefined" && p.Images.length > 0) z = p.Images[0].ThumbnailImage;
                z === "" && (z = A);
                var B, C = !1;
                u.push({
                    h3: {
                        a: {
                            "": p.Name,
                            _attr: {
                                href: r
                            }
                        }
                    }
                }, {
                    "div.fromPrice im-pricebutton": {
                        a: {
                            _attr: {
                                href: r
                            },
                            "span.thePrice im-pricebutton-amount": function() {
                                var a = c.util.currencies.formatShort(p.Cost, c.gadget.currencyId),
                                    a = p.Cost;
                                B = p;
                                C = p.IsAvailable && !p.IsConstrained;
                                a = Math.ceil(a);
                                if (a == 1.0E20 || C === !1) return "";
                                return c.util.currencies.formatShort(a, c.gadget.currencyId)
                            }()
                        }
                    }
                }, {
                    "div.thumb": {
                        "img.unloaded": {
                            _attr: {
                                src: y,
                                rel: z.replace(/^http:/, "")
                            }
                        }
                    }
                }, {
                    "div.description": a.parseParas(c.util.stripTags(p.Description), r)
                });
                if (!C && !d.listAllMode) r = u[1]["div.fromPrice im-pricebutton"].a, r._attr.href = "javascript://",
                    r._attr["class"] = "sold-out", r._attr.onclick = "javascript:BE.gadget.search.primaryDatePicker.show()", r["span.label im-pricebutton-label"] = g.BE.gadget.region.text.changeDates;
                e == "events" && typeof B != "undefined" && u.splice(1, 0, {
                    h4: B.Name
                });
                s.push(x)
            }
            d = n(b).appendTo(v);
            f[e] = d.find("div.thumb img.unloaded");
            h.bindScroll(d, "list-" + e);
            setTimeout(function() {
                a.checkImagesInView("list-" + e)
            }, 125);
            return !0
        }
    };
    a.buildListViewStandard = function(b, d, e, j) {
        var n = g.wisDOM,
            s, p, x, u, r, t, z = c.gadget.region.itemURL,
            A, y = c.urls.img.listViewFallback(e),
            v = c.urls.img.unloadedImg(),
            w = c.gadget.search.userState().period;
        if (j.length) {
            n(g).unbind("scroll." + e);
            b.find("div.list-view").length === 0 && n({
                "div.list-view": {}
            }).appendTo(b);
            var E = b.find("div.list-view");
            E.find("div." + e).remove();
            b = {};
            b["div." + e + " type-group"] = s = [];
            for (var B = 0, C = j.length; B < C; B++) {
                p = j[B];
                x = {};
                t = B % 2 === 0 ? "odd" : "even";
                typeof p.IsGoldMedal != "undefined" && p.IsGoldMedal === !0 && (t += " instant-confirmation");
                c.util.each(p.Items, function(a, b) {
                    var d = !1;
                    c.util.exists(b.Availability.Specials) && b.Availability.Specials.length >
                        0 && (t += " has-specials", d = !0);
                    return !d
                });
                c.util.each(p.Items, function(a, b) {
                    var d = !1;
                    c.util.each(b.Availability.Specials, function(a, b) {
                        b.IsLastMinute && (t += " has-last-minute", d = !0);
                        return !d
                    });
                    return !d
                });
                d.campaignID !== null && typeof p.CampaignLevel != "undefined" && (t += " " + p.CampaignLevel.toLowerCase().replace(/[^a-z0-9\s]/g, "").replace(/\s/g, "-").replace(/^[0-9]/, ""));
                x["div.list-item " + t] = [];
                u = x["div.list-item " + t];
                r = z({
                    id: p.OperatorId,
                    name: p.OperatorName,
                    type: e
                });
                u._events = {
                    mouseover: function() {
                        this.className +=
                            " hover"
                    },
                    mouseout: function() {
                        this.className = this.className.replace(/\shover/, "")
                    }
                };
                A = typeof p.PrimaryImage != "undefined" ? p.PrimaryImage.ThumbnailImage : "";
                if (A === "" && typeof p.OtherImages != "undefined" && p.OtherImages.length > 0) A = p.OtherImages[0].ThumbnailImage;
                A === "" && (A = y);
                var H, F = !1;
                u.push(c.gadget.region.getSpecialsElement(p), {
                    h3: {
                        a: {
                            "": p.OperatorName,
                            _attr: {
                                href: r
                            }
                        }
                    }
                }, {
                    "p.location": c.util.stripTags(p.Address)
                }, {
                    "p.rating": function() {
                        var a = p.StarRating.toString() == "0" ? "No Rating" : p.StarRating + " star",
                            b = {};
                        b["span.type_" + (p.IsAAARated ? "aaa" : "self") + " rating_" + p.StarRating.toString().replace(/\./g, "_")] = {
                            "span.text": a
                        };
                        return b
                    }()
                }, {
                    "div.fromPrice im-pricebutton": {
                        a: {
                            _attr: {
                                href: r
                            },
                            "span.label im-pricebutton-label": "From ",
                            "span.thePrice im-pricebutton-amount": function(a) {
                                for (var b = 1.0E20, f, g, j = 0, h = a.length; j < h; j++) {
                                    f = !1;
                                    g = a[j].Availability.Days;
                                    var k = 0,
                                        n = g.length;
                                    d.lastMinuteMode && (n = w);
                                    for (k = 0; k < n; k++)
                                        if (g[k].Cost === 0 && e != "tours" && e != "events" || !g[k].IsAvailable) f = !0;
                                    if (a[j].Availability.Cost <
                                        b && f === !1) b = a[j].Availability.Cost, H = a[j], F = !0
                                }
                                b = Math.ceil(b);
                                if (b == 1.0E20 || F === !1) return "";
                                return c.util.currencies.formatShort(b, c.gadget.currencyId)
                            }(p.Items)
                        }
                    }
                }, {
                    "div.thumb": {
                        "img.unloaded": {
                            _attr: {
                                src: v,
                                rel: A.replace(/^http:/, "")
                            }
                        }
                    }
                }, {
                    "div.description": a.parseParas(c.util.stripTags(p.Description), r)
                });
                if (!F && !d.listAllMode) typeof d != "undefined" && typeof d.showAllAccom != "undefined" && d.showAllAccom && e == "accom" || (u[1].h3.a._attr.href = "javascript://"), delete x["div.list-item " + t], x["div.list-item " +
                    t + " sold-out"] = u, r = u[4]["div.fromPrice im-pricebutton"].a, r._attr.href = "javascript://", r._attr["class"] = "sold-out", r._attr.onclick = "javascript:BE.gadget.search.primaryDatePicker.show()", r["span.label im-pricebutton-label"] = g.BE.gadget.region.text.changeDates;
                e == "events" && typeof H != "undefined" && u.splice(1, 0, {
                    h4: H.Name
                });
                s.push(x)
            }
            j = n(b).appendTo(E);
            f[e] = j.find("div.thumb img.unloaded");
            h.bindScroll(j, "list-" + e);
            setTimeout(function() {
                a.checkImagesInView("list-" + e)
            }, 125);
            return !0
        }
    };
    a.checkImagesInView =
        function(a) {
            if (!f[a] || f[a].length === 0 || f[a][0].offsetHeight === 0) return !1;
            for (var b = e._int.checkScroll(g), a = f[a], c = a[0].offsetHeight * 2, d = b !== !1 ? b.y.at - c : 0, j = b !== !1 ? b.y.at + b.y.box + c : e(g).height(), h = 0, n = a.length; h < n; h++)
                if (a[h].className.indexOf("unloaded") != -1) b = e(a[h]), c = b.offset().top, c > d && c < j && (b.attr("src", b.attr("rel")), b.removeClass("unloaded"))
        };
    var d = /(\s*\r??\n\s*\r??\n\s*)/g,
        j = /(\s{2,}|\r??\n\s*)/g,
        n = /(^\s*|\s*$)/g;
    a.parseParas = function(a, c) {
        var e = [],
            f, g, h = !1;
        if (!a) return e;
        f = a;
        f.length > 500 &&
            typeof c != "undefined" && (f = f.substring(0, 500), h = !0);
        f = f.replace(d, "|~|");
        f = f.replace(j, " ");
        f = f.split("|~|");
        for (var p = 0, x = f.length; p < x; p++) g = f[p].replace(n, ""), g.length > 0 && e.push({
            p: g
        });
        if (h && e.length > 0 && typeof c != "undefined") g = e[e.length - 1].p, e[e.length - 1].p = [{
            "": g
        }, {
            "": "... "
        }, {
            "a.showMore": {
                _attr: {
                    href: c
                },
                span: b.listDescShowMore
            }
        }];
        return e
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = !1,
        f, b = {},
        d = {},
        j = {},
        n, k, l = {},
        m, o = null,
        q, s, p = !1,
        x = !1;
    m = c.gadget.region.map = {};
    m.redraw = function(b) {
        try {
            g.google.maps.event.trigger(f, "resize"), f.fitBounds(q), a.applyBoundOverrideIfReq(b), f.getZoom() > 18 && f.setZoom(18)
        } catch (c) {}
    };
    m.clearAll = function() {
        var a = e(".map-container");
        a.length > 0 && a.remove()
    };
    m.triggerMapMarkerClick = function(a, c) {
        if (b.hasOwnProperty(a)) {
            for (var d = b[a], e = "", f = 0, g = d.length; f < g; f++)
                if (d[f].title == c) {
                    e = d[f];
                    break
                }
            e != "" && google.maps.event.trigger(e,
                "click")
        }
    };
    m.et = function() {
        return a
    };
    a.applyBoundOverrideIfReq = function(a) {
        if (!(a == null && a.forceMapBounds == null && f.getBounds() == null) && a.forceMapBounds.pointA != null && a.forceMapBounds.pointB != null) {
            var b = new google.maps.LatLng(a.forceMapBounds.pointA.lat, a.forceMapBounds.pointA.lng),
                a = new google.maps.LatLng(a.forceMapBounds.pointB.lat, a.forceMapBounds.pointB.lng),
                b = new google.maps.LatLngBounds(b, a);
            f.setZoom(2);
            f.fitBounds(b);
            f.panToBounds(b)
        }
    };
    m.attachMapCode = function(b, c) {
        var d = "mapsCB" + e._int.generateID(),
            f = e("head"),
            j = "";
        c.googleMapsKey != null ? j = "&key=" + c.googleMapsKey : c.googleMapsKeyGlobal && (j = "&key=AIzaSyBAFDB_Y3JlrzcFI53oQsQuktDBCbV4ZPE");
        g[d] = function() {
            h = !0;
            a.buildMapBase(b, c);
            g[d] = void 0;
            try {
                delete g[d]
            } catch (e) {}
        };
        f.append({
            script: {
                _attr: {
                    type: "text/javascript",
                    src: "//maps.google.com/maps/api/js?sensor=false" + j + "&callback=" + d
                }
            }
        })
    };
    a.buildMapBase = function(b, c) {
        var d;
        d = c.interactiveMapMode ? e({
            "div.map-container interactive-mode": {
                "div.product-types": "",
                "div.map-window": ""
            }
        }) : e({
            "div.map-container": {
                "div.product-list": "",
                "div.map-window": ""
            }
        });
        d.appendTo(b);
        var j = {
            scrollwheel: !1,
            panControl: !1,
            mapTypeControl: !0,
            streetViewControl: !0,
            zoomControlOptions: {
                style: google.maps.ZoomControlStyle.SMALL
            },
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        f = new g.google.maps.Map(d.find("div.map-window")[0], j);
        q = new google.maps.LatLngBounds;
        n = d.find("div.product-list");
        k = d.find("div.product-types");
        c.campaignID !== null && (s = !0);
        c.interactiveMapMode && e(function() {
            var d = arguments.callee;
            typeof c.categories != "undefined" ? a.buildProductChooser(b,
                c) : e(d, 50)
        }, 10);
        if (c.lastMinuteMode) x = c.lastMinuteMode;
        c.vcLocations !== null && c.vcLocations.length > 0 && a.addVCMarkers(c.vcLocations);
        c.interactiveMapMode && d.find("div.map-window").bind("click.BEuserInteractDetect", function() {
            d.find("div.map-window").unbind("click.BEuserInteractDetect");
            p = !0
        })
    };
    m.resetBounds = function() {
        try {
            q = new google.maps.LatLngBounds
        } catch (a) {}
    };
    m.buildMarkers = function(a, f, g, n, o) {
        if (h) {
            typeof b[g] == "undefined" && (b[g] = []);
            for (var q = [], p = 0, w = n.length; p < w; p++) n[p].Latitude !== 0 && n[p].Longitude !==
                0 && q.push(n[p]);
            for (var n = q, s, x, C = 0, q = 0, H, p = n.length, w = 0; w < p; w++) s = n[w].Latitude, x = n[w].Longitude, C += s, q += x;
            s = C / p;
            x = q / p;
            for (w = q = C = 0; w < p; w++) C += Math.pow(n[w].Latitude - s, 2), q += Math.pow(n[w].Longitude - x, 2);
            C = Math.sqrt(C / p);
            H = Math.sqrt(q / p);
            q = [];
            for (w = 0; w < p; w++) f.applyBoundsAlgorithm && (Math.abs(n[w].Latitude - s) > C + 1 || Math.abs(n[w].Longitude - x) > H + 1) ? f.interactiveMapMode || q.push({
                item: n[w],
                passed: !1
            }) : q.push({
                item: n[w],
                passed: !0
            });
            var F, p = new google.maps.MarkerImage(c.urls.img.mapIconShadow(), new google.maps.Size(37,
                    29), new google.maps.Point(0, 0), new google.maps.Point(10, 29)),
                w = {
                    coord: [0, 0, 20, 20],
                    type: "rect"
                };
            switch (g) {
                case "accom":
                    F = c.urls.img.mapIconAccom();
                    break;
                case "tours":
                    F = c.urls.img.mapIconTours();
                    break;
                case "events":
                    F = c.urls.img.mapIconEvents();
                    break;
                case "carhire":
                    F = c.urls.img.mapIconCarHire()
            }
            typeof F == "undefined" && (F = l[g]);
            s = [20, 29];
            x = [10, 29];
            if (f.customMapIcons && typeof f.customMapIcons[g] != "undefined") {
                if (typeof f.customMapIcons[g].icon != "undefined") F = f.customMapIcons[g].icon, p = new google.maps.MarkerImage(c.urls.img.mapGenericShadow(),
                    new google.maps.Size(22, 12), new google.maps.Point(0, 0), new google.maps.Point(11, 6));
                if (typeof f.customMapIcons[g].size != "undefined") s = f.customMapIcons[g].size, w = {
                    coord: [0, 0, f.customMapIcons[g].size[0], Math.round(f.customMapIcons[g].size[1] / 4 * 3)],
                    type: "rect"
                };
                if (typeof f.customMapIcons[g].pinpoint != "undefined") x = f.customMapIcons[g].pinpoint
            }
            F = new google.maps.MarkerImage(F, new google.maps.Size(s[0], s[1]), new google.maps.Point(0, 0), new google.maps.Point(x[0], x[1]));
            d[g] = [q, F, p, w];
            j[g] = n;
            o && !f.interactiveMapMode &&
                m.showMarkers(g, f);
            var G = g;
            isNaN(parseInt(g, 10)) || (G = "other_" + g);
            f.interactiveMapMode && e(function() {
                var a = k.find("div." + G + " input"),
                    b = arguments.callee;
                a.length === 0 ? e(b, 50) : a[0].checked && m.showMarkers(g, !0, f)
            }, 1)
        } else e(function() {
            m.buildMarkers(a, f, g, n, o)
        }, 75)
    };
    a.addVCMarkers = function(a) {
        for (var b, d = f, e = g.google.maps, j = new google.maps.MarkerImage(c.urls.img.mapVCIcon(), new google.maps.Size(32, 38), new google.maps.Point(0, 0), new google.maps.Point(16, 38)), h = new google.maps.MarkerImage(c.urls.img.mapGenericShadow(),
                new google.maps.Size(22, 12), new google.maps.Point(0, 0), new google.maps.Point(11, 6)), k = {
                coord: [0, 0, 32, 32],
                type: "rect"
            }, n = new google.maps.LatLngBounds, l, m = 0, o = a.length; m < o; m++) {
            b = a[m];
            l = new e.LatLng(b.lat, b.lng);
            if (c.util.exists(b.customImage)) {
                var j = new google.maps.Size(32, 38),
                    q = new google.maps.Point(0, 0),
                    p = new google.maps.Point(16, 38);
                c.util.exists(b.customImageOptions) && (c.util.exists(b.customImageOptions.size) && (j = new google.maps.Size(b.customImageOptions.size.x, b.customImageOptions.size.y)), c.util.exists(b.customImageOptions.origin) &&
                    (q = new google.maps.Point(b.customImageOptions.origin.x, b.customImageOptions.origin.y)), c.util.exists(b.customImageOptions.anchor) && (p = new google.maps.Point(b.customImageOptions.anchor.x, b.customImageOptions.anchor.y)));
                j = new google.maps.MarkerImage(b.customImage, j, q, p)
            }
            n.extend(l);
            new e.Marker({
                position: l,
                icon: j,
                shadow: h,
                shape: k,
                map: d,
                title: b.name
            })
        }
        d.fitBounds(n)
    };
    a.buildSideBar = function(a) {
        var d = j[a],
            f = n,
            g = [],
            h = null;
        f.empty();
        f.unbind("marker.clicked");
        f.bind("marker.clicked", function(a) {
            var b =
                f.children();
            a.data.doScroll === !0 && f.scroll(b[a.data.num], null, 1E3, 40);
            h !== null && h.removeClass("highlighted");
            h = e(b[a.data.num]);
            h.addClass("highlighted")
        });
        if (a != "packages")
            for (var k = 0, l = d.length; k < l; k++)(function(e) {
                var f = e % 2 === 0 ? "odd" : "even",
                    j = {},
                    h = d[e];
                typeof h.IsGoldMedal != "undefined" && h.IsGoldMedal === !0 && (f += " instant-confirmation");
                c.util.each(h.Items, function(a, b) {
                    var d = !1;
                    c.util.exists(b.Availability.Specials) && b.Availability.Specials.length > 0 && (f += " has-specials", d = !0);
                    return !d
                });
                c.util.each(h.Items,
                    function(a, b) {
                        var d = !1;
                        c.util.each(b.Availability.Specials, function(a, b) {
                            b.IsLastMinute && (f += " has-last-minute", d = !0);
                            return !d
                        });
                        return !d
                    });
                s === !0 && typeof h.CampaignLevel != "undefined" && (f += " " + h.CampaignLevel.toLowerCase().replace(/[^a-z0-9\s]/g, "").replace(/\s/g, "-").replace(/^[0-9]/, ""));
                j["div.map-sidebar-item " + f] = c.gadget.region.getSpecialsElement(h);
                var k = j["div.map-sidebar-item " + f];
                k._events = {
                    mouseover: function() {
                        this.className += " hover"
                    },
                    mouseout: function() {
                        this.className = this.className.replace(/\shover/,
                            "")
                    }
                };
                h.Items.sort(function(a, b) {
                    var c = a.Availability.Cost,
                        d = b.Availability.Cost;
                    if (c === 0 && d !== 0) return 1;
                    if (c !== 0 && d === 0) return -1;
                    return a.Availability.Cost < b.Availability.Cost ? -1 : 1
                });
                var n = "";
                if (typeof h.Items[0] != "undefined") {
                    var l = h.Items[0].Availability.Days,
                        m = 0,
                        o = l.length;
                    if (x) o = c.gadget.search.userState().period;
                    for (var q = !0, m = 0; m < o; m++) l[m].IsAvailable || (q = !1);
                    q && (n = h.Items[0].Availability.Cost.toString())
                }
                k["div.name"] = {
                    span: h.OperatorName,
                    _events: {
                        click: function() {
                            google.maps.event.trigger(b[a][e],
                                "click")
                        }
                    }
                };
                if (a == "events") k["div.event-name"] = h.Items[0].Name;
                k["div.location"] = {
                    span: h.Location
                };
                n !== "" ? k["div.from-price"] = {
                    span: c.util.currencies.formatShort(Math.ceil(n), c.gadget.currencyId)
                } : (h._unavailable = !0, k["div.from-price"] = {
                    span: ""
                });
                n = h.IsAAARated ? "aaa" : "self";
                k["div.rating"] = {};
                k["div.rating"]["span.type_" + n + " rating_" + h.StarRating.toString().replace(/\./, "_")] = {
                    "span.text": h.StarRating
                };
                g.push(j)
            })(k);
        f.append(g)
    };
    a.buildProductChooser = function(b, d) {
        var f = c.gadget.region.text.types,
            g = k,
            j = [],
            h = c.util.cookieName("1nT3r4ctlvEmAp"),
            h = e.json.parse(e.cookie(h)),
            j = a.getProductChooserModel(b, d),
            j = a.constructProductChooserfrom(b, j);
        g.append(j);
        if (typeof d.forceDefaultTypes != "undefined" && d.forceDefaultTypes.length > 0) h = d.forceDefaultTypes;
        if (h === null || h.length === 0)
            if (h = ["accom"], !f.accom || g.find("div.accom").length === 0) h = [e(g.find("input")[0]).val()];
        for (var n, f = 0, j = h.length; f < j; f++) n = isNaN(parseInt(h[f], 10)) ? h[f] : "other_" + h[f], n = g.find("div." + n + " input"), n.attr({
                checked: !0
            }), n.parent().removeClass("greyed"),
            n.attr("rel") == "other" && n.trigger("click")
    };
    a.getProductChooserModel = function(b, d) {
        var e = [],
            e = c.gadget.region.text.types,
            e = a.hidePrimaryTypesThatAreUnwanted(d, e),
            e = a.mergeTypesAndCategoriesObject(d.categories, e),
            e = a.convertCategoriesToRenderItems(e);
        if (typeof d.interactiveMapUseOpGroupings != void 0 && d.interactiveMapUseOpGroupings && d.businessGroupings != "undefined" && d.businessGroupings.Groupings != "undefined") {
            var e = [],
                f;
            for (f in d.businessGroupings.Groupings) e.push({
                index: f,
                title: d.businessGroupings.Groupings[f]
            })
        }
        e =
            a.ApplySpecificTypesLogic(e, d.specificTypes);
        return {
            items: e,
            customMapIcons: d.customMapIcons,
            eventFunction: function(c) {
                a.updateTypes(c, b, d)
            }
        }
    };
    a.interactiveMapCookieName = function() {
        return c.util.cookieName("1nT3r4ctlvEmAp")
    };
    a.hidePrimaryTypesThatAreUnwanted = function(a, b) {
        if (c.util.exists(a.treatPrimaryTypeAsCategory) && a.treatPrimaryTypeAsCategory) return {};
        if (typeof a.hideCategories == "undefined") return b;
        if (a.hideCategories !== null)
            for (var d = 0, e = a.hideCategories.length; d < e; d++) try {
                delete b[a.hideCategories[d]]
            } catch (f) {}
        return b
    };
    a.mergeTypesAndCategoriesObject = function(a, b) {
        for (var c in b) typeof a[c] == "undefined" && (a[c] = b[c]);
        return a
    };
    a.ApplySpecificTypesLogic = function(a, b) {
        var c = a;
        if (typeof b !== "undefined" && b != null) {
            for (var d = [], e = 0, f = b.length; e < f; e++)
                for (var g = b[e], j = 0, h = a.length; j < h; j++) {
                    var k = c[j];
                    if (k.index == g) {
                        d.push({
                            index: g.toString(),
                            title: k.title
                        });
                        break
                    }
                }
            c = d
        }
        return c
    };
    a.convertCategoriesToRenderItems = function(a) {
        var b = [],
            c;
        for (c in a) a.hasOwnProperty(c) && b.push({
            index: c,
            title: a[c]
        });
        return b
    };
    a.constructProductChooserfrom =
        function(a, b) {
            for (var d = 0, f = 0, g = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"], j = c.urls.img.mapIconGeneric, h, k, n, m, o = [], q, p = {
                    accom: {
                        icon: c.urls.img.mapIconAccom()
                    },
                    tours: {
                        icon: c.urls.img.mapIconTours()
                    },
                    events: {
                        icon: c.urls.img.mapIconEvents()
                    },
                    carhire: {
                        icon: c.urls.img.mapIconCarHire()
                    }
                }, s = 0, x = b.items.length; s < x; s++)
                if (b.items.hasOwnProperty(s)) {
                    if (d > 11) break;
                    n = b.items[s].index;
                    m = b.items[s].title;
                    q = e._int.generateID();
                    h = isNaN(n) ? n : "other_" + n;
                    k = isNaN(n) ? h : "other";
                    thisOne = {
                        div: {
                            img: {
                                _attr: {
                                    src: function() {
                                        var a;
                                        b.customMapIcons !== null && typeof b.customMapIcons[n] != "undefined" ? a = b.customMapIcons[n].icon : isNaN(n) ? a = p[n].icon : (a = j(g[f]), f++);
                                        return l[n] = a
                                    }()
                                }
                            },
                            " ": " ",
                            input: {
                                _attr: {
                                    type: "checkbox",
                                    value: n,
                                    id: q,
                                    rel: k
                                },
                                _events: {
                                    click: b.eventFunction
                                }
                            },
                            "": " ",
                            label: {
                                "": m,
                                _attr: {
                                    "for": q
                                }
                            },
                            _attr: {
                                "class": "greyed type " + h,
                                rel: n
                            }
                        }
                    };
                    o.push(thisOne);
                    d++
                }
            o.push({
                "div.loading": {
                    "span.outer": {
                        span: "Loading data..."
                    }
                }
            });
            e.event.subscribe("map.productType.loading", function() {
                a.find("div.product-types div.loading").css({
                    display: "block"
                })
            });
            e.event.subscribe("map.productType.completed", function() {
                a.find("div.product-types div.loading").css({
                    display: "none"
                })
            });
            return o
        };
    a.constructUpdateTypesOtherUrl = function(a, b) {
        var d = c.urls.endpoints.getOpDetailsShort() + "?q=" + b.vcID;
        return d = typeof b.interactiveMapUseOpGroupings != void 0 && b.interactiveMapUseOpGroupings && b.businessGroupings != "undefined" && b.businessGroupings.Groupings != "undefined" ? d + "&BusinessTypeId=" + a : d + "&OperatorCategoryId=" + a
    };
    a.updateTypes = function(b, c, f) {
        var g = e(b.target.parentNode),
            j = g.parent().find("input"),
            h = [],
            k = b.target.getAttribute("rel"),
            n = b.target.value;
        k == "other" && b.target.checked && typeof d[n] == "undefined" && (k = a.constructUpdateTypesOtherUrl(n, f), e.event.publish("map.productType.loading", c), e.getJSON(k, function(a) {
            e.event.publish("map.productType.completed", c);
            m.buildMarkers(c, f, n, a, !0)
        }));
        b.target.checked === !0 ? g.removeClass("greyed") : g.addClass("greyed");
        b = 0;
        for (g = j.length; b < g; b++) j[b].checked === !0 && typeof d[j[b].value] != "undefined" && h.push(j[b].value);
        b = 0;
        for (g = h.length; b <
            g; b++) b !== 0 ? m.showMarkers(h[b], !0, f) : m.showMarkers(h[b], !1, f);
        b = 0;
        for (g = j.length; b < g; b++) j[b].checked === !0 && typeof d[j[b].value] == "undefined" && h.push(j[b].value);
        h.length === 0 && a.removeAllMarkers();
        typeof f.forceDefaultTypes == "undefined" && e.cookie(a.interactiveMapCookieName(), e.json.stringify(h))
    };
    m.showMarkers = function(b, c, f) {
        var j = d[b],
            h = e.event.publish;
        if (typeof j == "undefined") return !1;
        n.length !== 0 && a.buildSideBar(b);
        h("map.markers.start", g, b);
        c || a.removeAllMarkers();
        a.drawMarkers(b, j[0], j[1], j[2],
            j[3], f)
    };
    a.removeAllMarkers = function() {
        for (var a in b)
            if (b.hasOwnProperty(a)) {
                for (var c = b[a], d = c.length; d--;) c[d] !== null && c[d].setMap(null);
                b[a] = []
            }
        m.resetBounds()
    };
    a.drawMarkers = function(a, d, j, h, k, l) {
        var s = d.length,
            x = b[a],
            E = c.gadget.region.itemURL,
            B = c.gadget.region.text.select,
            C, H, F = n,
            G = c.util.stripTags,
            J = c.urls.img.unloadedImg();
        for (H = 0; H < s; H++)(function(b) {
            var n = d[b].item;
            C = new g.google.maps.LatLng(n.Latitude, n.Longitude);
            var m = new g.google.maps.Marker({
                position: C,
                icon: j,
                shadow: h,
                shape: k,
                map: f,
                title: n.OperatorName
            });
            x.push(m);
            d[b].passed === !0 && n.Latitude !== 0 && n.Longitude !== 0 && q.extend(C);
            typeof n.Items != "undefined" && n.Items.sort(function(a, b) {
                return a.Availability.Cost < b.Availability.Cost ? -1 : 1
            });
            if (typeof n.OperatorName == "undefined") n.OperatorName = n.TradingName;
            var p = e({
                "div.mapInfoWindow": {
                    "h3.name": n.OperatorName,
                    "div.address": G(n.Address || n.ResidentialAddress),
                    "div.thumb": function() {
                        var a = {},
                            b = "";
                        if (typeof n.ImageUrls != "undefined" && typeof n.OtherImages == "undefined") n.OtherImages = n.ImageUrls;
                        if (typeof n.PrimaryImage != "undefined") b = n.PrimaryImage.ThumbnailImage;
                        else if (typeof n.OtherImages != "undefined" && n.OtherImages.length > 0) b = n.OtherImages[0].ThumbnailImage;
                        b !== "" && (a["div.inner"] = {
                            img: {
                                _attr: {
                                    rel: b.replace(/^http:/, ""),
                                    src: J
                                }
                            }
                        });
                        return a
                    }(),
                    "div.details": function() {
                        if (typeof n.Items == "undefined" || n._unavailable === !0) return "";
                        for (var a = [], b = n.Items.length, b = b > 3 ? 3 : b, d = 0; d < b; d++) a.push({
                            p: {
                                _attr: {
                                    "class": function() {
                                        var a = "room";
                                        d == b - 1 && (a += " last");
                                        return a
                                    }()
                                },
                                "span.name": n.Items[d].Name,
                                "": " ",
                                "span.price": c.util.currencies.formatShort(Math.ceil(n.Items[d].Availability.Cost), c.gadget.currencyId)
                            }
                        });
                        return a
                    }(),
                    "div.button im-pricebutton": {
                        "a.next": {
                            _attr: {
                                href: E({
                                    id: n.OperatorId || n.OperatorID,
                                    name: n.OperatorName,
                                    type: a
                                })
                            },
                            "span.next im-pricebutton-label": {
                                span: B
                            }
                        }
                    }
                }
            });
            if (n._unavailable && ! function() {
                    var b = typeof l != "undefined",
                        c = b && typeof l.showAllEvents != "undefined" && l.showAllEvents && a == "events",
                        d = b && typeof l.showAllTours != "undefined" && l.showAllTours && a == "tours";
                    return b && typeof l.showAllAccom !=
                        "undefined" && l.showAllAccom && a == "accom" || c || d
                }()) {
                var s = p.find("div.button im-pricebutton a.next");
                s.attr({
                    href: "javascript://"
                });
                s.addClass("sold-out");
                s.find("span.next span").text(g.BE.gadget.region.text.changeDates);
                s.attr({
                    onclick: "javascript:BE.gadget.search.primaryDatePicker.show()"
                })
            }
            var v = new google.maps.InfoWindow({
                maxWidth: 500,
                content: p[0]
            });
            google.maps.event.addListener(m, "click", function(a) {
                o !== null && o.close();
                var c = p.find("div.thumb img");
                c.length !== 0 && c.attr("rel") !== "" && (c.attr({
                        src: c.attr("rel")
                    }),
                    c.attr({
                        rel: ""
                    }));
                o = v;
                v.open(f, this);
                c = {
                    num: b,
                    doScroll: !0
                };
                typeof a == "undefined" && (c.doScroll = !1);
                F.trigger("marker.clicked", c)
            })
        })(H);
        p || m.redraw(l)
    }
})(window);
(function(g) {
    g.BE.gadget.region.price.advanced = function(e, c) {
        var a, g = {};
        if (c.advancedPriceView !== null) a = c.advancedPriceView, g.order = a, g.on = !0;
        return g
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a, h = {},
        f = {},
        b, d;
    d = b = f.locationHierarchy = null;
    a = c.gadget.search.locations = {};
    a.buildRegionSearchAfter = function(a, c, e, f) {
        d = a;
        b = c;
        h.buildVCLocationsHierarchy(c, e, f)
    };
    a.showSourceData = function() {
        return f.locationHierarchy
    };
    a.getAllStates = function() {
        return h.getAllStates()
    };
    a.getRegionsByStates = function(a) {
        return h.getRegionsByStates(a)
    };
    a.getLocationsByRegions = function(a) {
        return h.getLocationsByRegions(a)
    };
    a.getCurrentRegion = function() {
        var a = e(".refineTools");
        if (typeof a ==
            "undefined") return null;
        a = a.find(".regionFilter");
        return a.length > 0 ? a.find("select")[0].value : null
    };
    a.getStateValue = function(a) {
        return a.find(".stateFilter select").val()
    };
    a.getRegionValue = function(a) {
        return a.find(".regionFilter select").val()
    };
    a.getLocationValue = function(a) {
        return a.find(".locationsFilter select").val()
    };
    a.refreshSearchCriteriaMet = function() {
        return h.refreshSearchCriteriaMet()
    };
    a.et = function() {
        return h
    };
    h.setDataStore = function(a) {
        f = a
    };
    h.getTimeOut = function() {
        return f.locationHierarchy ==
            null ? 100 : 0
    };
    h.buildVCLocationsHierarchy = function(a, g, k) {
        var l = c.urls.endpoints.getVcLocationsHier() + "?q=" + a.vcID;
        typeof a.externalSearch != "undefined" && a.externalSearch && typeof a.enableRegionSearch != "undefined" && a.enableRegionSearch && (l += "&ShowAll=" + a.externalSearch);
        e.getJSON(l, function(l) {
            l = l.States;
            typeof a.limitLocations != "undefined" && a.limitLocations !== null && a.limitLocations.length > 0 && (l = h.limitLocations.filterLocationHierarchy(a, l));
            f.locationHierarchy = l;
            var l = h.getPreloadStateValue(),
                o = h.getPreloadRegionValue(),
                l = l != null && l != "" ? [l] : null,
                o = o != null && o != "" ? [h.getPreloadRegionValue()] : null;
            e(h.elements.locations(o)).insertAfter(g);
            e(h.elements.regions(l)).insertAfter(g);
            e(h.elements.states()).insertAfter(g);
            typeof k != "undefined" && k && e(g).remove();
            h.setupSubscriptions();
            h.refreshRefineCookie();
            e.event.publish("region-search-locations-loaded", {});
            h.refreshSearchCriteriaMet() && c.gadget.region.getBEData(d, b)
        })
    };
    h.getPreloadStateValue = function() {
        var a = null,
            d = c.gadget.region.buildRefineTools.getRefineCookiePreffs();
        if (h.defaultOptionsAreDefined() && b.defaultRegionState != null) a = b.defaultRegionState;
        if (h.refinePrefsAreDefined(d) && d.searchState != null) a = d.searchState;
        if (h.forcedOptionsAreDefined() && typeof b.forceRegionState != "undefined" && b.forceRegionState != null) a = b.forceRegionState;
        return a
    };
    h.getPreloadRegionValue = function() {
        var a = null,
            d = c.gadget.region.buildRefineTools.getRefineCookiePreffs();
        if (h.defaultOptionsAreDefined() && b.defaultRegionRegion != null) a = b.defaultRegionRegion;
        if (h.refinePrefsAreDefined(d) && d.searchRegion !=
            null) a = d.searchRegion;
        if (h.forcedOptionsAreDefined() && typeof b.forceRegionRegion != "undefined" && b.forceRegionRegion != null) a = b.forceRegionRegion;
        return a
    };
    h.getPreloadLocationValue = function() {
        var a = null,
            d = c.gadget.region.buildRefineTools.getRefineCookiePreffs();
        if (h.defaultOptionsAreDefined() && b.defaultRegionLoc != null) a = b.defaultRegionLoc;
        if (h.refinePrefsAreDefined(d) && d.searchLoc != null) a = d.searchLoc;
        if (h.forcedOptionsAreDefined() && typeof b.forceRegionLoc != "undefined" && b.forceRegionLoc != null) a = b.forceRegionLoc;
        return a
    };
    h.getAllStates = function() {
        for (var a = [], b = 0, c = f.locationHierarchy.length; b < c; b++) a.push(f.locationHierarchy[b].StateCode);
        return a = a.sort()
    };
    h.getRegionsByStates = function(a) {
        var b = [],
            c = "";
        a != null && a.length > 0 && (c = a.join(" ").toLowerCase());
        for (var d = 0, e = f.locationHierarchy.length; d < e; d++) {
            var g = f.locationHierarchy[d];
            if (typeof a == "undefined" || a == null || c.indexOf(g.StateCode.toLowerCase()) != -1) b = b.concat(g.Regions)
        }
        return b = b.sort(function(a, b) {
            if (a.RegionsDesc < b.RegionsDesc) return -1;
            if (a.RegionsDesc >
                b.RegionsDesc) return 1;
            return 0
        })
    };
    h.getLocationsByRegions = function(a) {
        var b = [],
            c = "";
        typeof a != "undefined" && a != null && a.length > 0 && (c = a.join(" ").toLowerCase());
        for (var d = 0, e = f.locationHierarchy.length; d < e; d++)
            for (var g = 0, h = f.locationHierarchy[d].Regions.length; g < h; g++) {
                var s = f.locationHierarchy[d].Regions[g];
                if (typeof a == "undefined" || a == null || c.indexOf(s.RegionsDesc.toLowerCase()) != -1) b = b.concat(s.Locations)
            }
        return b = b.sort(function(a, b) {
            if (a.LocationDesc < b.LocationDesc) return -1;
            if (a.LocationDesc >
                b.LocationDesc) return 1;
            return 0
        })
    };
    h.limitLocations = {};
    h.limitLocations.filterLocationHierarchy = function(a, b) {
        return h.limitLocations.filterStates(a.limitLocations, b)
    };
    h.limitLocations.filterStates = function(a, b) {
        for (var c = [], d = 0, e = b.length; d < e; d++) {
            var f = b[d],
                g = h.limitLocations.filterRegions(a, f.Regions);
            if (g.length > 0) f.Regions = g, c.push(f)
        }
        return c
    };
    h.limitLocations.filterRegions = function(a, b) {
        for (var c = [], d = 0, e = b.length; d < e; d++) {
            var f = b[d],
                g = h.limitLocations.filterLocations(a, f.Locations);
            if (g.length >
                0) f.Locations = g, c.push(f)
        }
        return c
    };
    h.limitLocations.filterLocations = function(a, b) {
        for (var c = [], d = 0, e = b.length; d < e; d++)
            for (var f = b[d], g = 0, h = a.length; g < h; g++) {
                var p = a[g].toLowerCase();
                if (f.LocationDesc.toLowerCase() == p) {
                    c.push(f);
                    break
                }
            }
        return c
    };
    h.forcedOptionsAreDefined = function() {
        return b.forceRegionState != null || b.forceRegionRegion != null || b.forceRegionLoc != null
    };
    h.defaultOptionsAreDefined = function() {
        return b.defaultRegionState != null || b.defaultRegionRegion != null || b.defaultRegionLoc != null
    };
    h.refinePrefsAreDefined =
        function(a) {
            return typeof a.searchLoc != "undefined" || typeof a.searchRegion != "undefined" || typeof a.searchState != "undefined"
        };
    h.text = {};
    h.text.All = "--- All ---";
    h.text.stateFilter = {};
    h.text.stateFilter.label = "State";
    h.text.statesAll = "--- All ---";
    h.text.regionFilter = {};
    h.text.regionFilter.label = "Region";
    h.text.locationsFilter = {};
    h.text.locationsFilter.label = "Location";
    h.elements = {};
    h.elements.states = function() {
        var a = {},
            d = {
                "span.label": h.text.stateFilter,
                "span.input": {
                    select: function() {
                        for (var a = c.gadget.search.locations.getAllStates(),
                                b = [{
                                    option: {
                                        "": h.text.All,
                                        _attr: {
                                            value: ""
                                        }
                                    }
                                }], d = h.getPreloadStateValue(), e, f = 0, g = a.length; f < g; f++) {
                            e = {
                                option: {
                                    "": c.util.stripTags(a[f]),
                                    _attr: {
                                        value: a[f]
                                    }
                                }
                            };
                            if (d == a[f]) e.option._attr.selected = "selected";
                            b.push(e)
                        }
                        return b
                    }()
                }
            };
        b.forceRegionRegion != null || b.forceRegionState != null || b.forceRegionLoc != null ? a["div.stateFilter hide"] = d : a["div.stateFilter"] = d;
        return a
    };
    h.elements.regions = function(a) {
        var c = {},
            a = {
                "span.label": h.text.regionFilter,
                "span.input": {
                    select: h.elements.regions.buildRegionSelectOptions(a)
                }
            };
        b.forceRegionRegion != null || b.forceRegionLoc != null ? c["div.regionFilter hide"] = a : c["div.regionFilter"] = a;
        return c
    };
    h.elements.regions.buildRegionSelectOptions = function(a, b) {
        for (var d = c.gadget.search.locations.getRegionsByStates(a), e = [{
                option: {
                    "": h.text.All,
                    _attr: {
                        value: ""
                    }
                }
            }], f = h.getPreloadRegionValue(), g = typeof b != "undefined" ? b : !0, q, s = 0, p = d.length; s < p; s++) {
            var x = d[s].RegionsDesc == "" ? "." : d[s].RegionsDesc;
            q = {
                option: {
                    "": c.util.stripTags(x),
                    _attr: {
                        value: x
                    }
                }
            };
            if (f == x && g) q.option._attr.selected = "selected";
            e.push(q)
        }
        return e
    };
    h.elements.locations = function(a) {
        var c = {},
            a = {
                "span.label": h.text.locationsFilter,
                "span.input": {
                    select: h.elements.regions.buildLocationSelectOptions(a)
                }
            };
        c[b.forceRegionLoc != null ? "div.locationsFilter hide" : "div.locationsFilter"] = a;
        return c
    };
    h.elements.regions.buildLocationSelectOptions = function(a, b) {
        for (var d = c.gadget.search.locations.getLocationsByRegions(a), e = [{
                option: {
                    "": h.text.All,
                    _attr: {
                        value: ""
                    }
                }
            }], f = h.getPreloadLocationValue(), g = typeof b != "undefined" ? b : !0, q, s = 0, p = d.length; s <
            p; s++) {
            q = {
                option: {
                    "": c.util.stripTags(d[s].LocationDesc),
                    _attr: {
                        value: d[s].LocationDesc
                    }
                }
            };
            if (f == d[s].LocationDesc && g) q.option._attr.selected = "selected";
            e.push(q)
        }
        return e
    };
    h.setupSubscriptions = function() {
        var a = e(".refineTools");
        a.find(".locationsFilter").bind("change", h.refreshRegionGrid);
        a.find(".regionFilter select").bind("change", h.refreshLocationSelectList);
        a.find(".stateFilter select").bind("change", h.refreshRegionSelectList)
    };
    h.refreshRegionSelectList = function() {
        var a = e(".refineTools");
        if (a.length >
            0) {
            c.gadget.region.buildRefineTools.clearRefineCookie();
            for (var b = a.find(".stateFilter").find("select")[0].value, a = a.find(".regionFilter"), d = a.find("option"), f = 0, g = d.length; f < g; f++) e(d[f]).remove();
            a.find("select").append(h.elements.regions.buildRegionSelectOptions(b != "" ? [b] : null, !1));
            h.refreshLocationSelectList()
        }
    };
    h.refreshLocationSelectList = function() {
        var a = e(".refineTools");
        if (a.length > 0) {
            c.gadget.region.buildRefineTools.clearRefineCookie();
            var b = a.find(".regionFilter"),
                f = b.find("select")[0].value,
                g = a.find(".locationsFilter");
            if (typeof g != "undefined") {
                for (var m = g.find("option"), o = 0, q = m.length; o < q; o++) e(m[o]).remove();
                if (f == "") {
                    f = [];
                    b = b.find("option");
                    o = 0;
                    for (q = b.length; o < q; o++) m = e(b[o]).attr("value"), m != "" && f.push(m);
                    g.find("select").append(h.elements.regions.buildLocationSelectOptions(f, !1))
                } else g.find("select").append(h.elements.regions.buildLocationSelectOptions([f], !1));
                a.parents("div.region-gadget").length > 0 && g.trigger("change")
            }
            c.gadget.region.buildRefineTools.saveRefineCookie(d)
        }
    };
    h.refreshRegionGrid = function(a) {
        if (e("div.region-gadget").length > 0) {
            var f = /(^\s|\s$)/g;
            c.gadget.search.userState();
            typeof a != "undefined" && typeof a.target.value != "undefined" ? a.target.value.replace(f, "") : e(a.target).find("select").val();
            h.refreshRefineCookie();
            h.refreshSearchCriteriaMet() ? (typeof c.gadget.region.map != "undefined" && c.gadget.region.map.clearAll(d, b), c.gadget.region.getBEData(d, b), typeof c.gadget.region.map != "undefined" && c.gadget.region.map.attachMapCode(d, b)) : (typeof c.gadget.region.price !=
                "undefined" && c.gadget.region.price.clearAll(d), typeof c.gadget.region.list != "undefined" && c.gadget.region.list.clearAll(d), typeof c.gadget.region.map != "undefined" && c.gadget.region.map.clearAll(d))
        } else h.refreshRefineCookie()
    };
    h.refreshSearchCriteriaMet = function() {
        if (e(".region-gadget").length <= 0) return !1;
        var b = a.getRegionValue(d),
            c = a.getLocationValue(d);
        return b != "" || c != ""
    };
    h.refreshRefineCookie = function() {
        c.gadget.region.buildRefineTools.clearRefineCookie();
        c.gadget.region.buildRefineTools.saveRefineCookie(d)
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = c.util.exists;
    c.gadget.tripPlanner = function(f, b) {
        if (e(f).length === 0) return !1;
        c.gadget.init(b, function() {
            var c = e(f);
            c.length !== 0 && a._init(c, b)
        })
    };
    c.gadget.tripPlanner.events = {
        eventName: {
            name: "",
            description: ""
        }
    };
    c.gadget.tripPlanner.target = void 0;
    c.gadget.tripPlanner.isActive = !1;
    a._init = function(f, b) {
        c.gadget.tripPlanner.target = e(f);
        a.location = c.gadget.tripPlanner.target;
        c.gadget.tripPlanner.isActive = !0;
        if (!a.areRequiredOptionsSupplied(b)) return !1;
        e(f).append({
            "div.trip-planner-gadget": {}
        });
        f = f.find("div.trip-planner-gadget");
        a.getRequiredSjpInformation(b, function(d) {
            var e = d.tripInfo;
            c.gadget.tripPlanner.tripData = e;
            if (!a.requiredSjpChecksMet(e)) return !1;
            var g = a.buildPlannerModel(b, e),
                g = a.getPlannerHtml(g);
            f.append(g);
            c.gadget.tripPlanner.search.render(b, d);
            c.gadget.tripPlanner.tabs.init(f);
            c.gadget.cart("#CartGadget", {
                vcID: b.vcId,
                bookingURL: b.bookingURL,
                tripPlannerMode: !0,
                reuseBookingQuestions: b.reuseBookingQuestions
            });
            c.gadget.tripPlanner.map.renderMap("MapContainer", {
                vcId: b.vcId,
                tripInfo: e
            });
            a.wireUpEvents(f, b, e)
        });
        return !0
    };
    a.areRequiredOptionsSupplied = function(a) {
        if (!h(a.vcId)) return !1;
        if (!h(a.tripId)) return !1;
        return !0
    };
    a.getRequiredSjpInformation = function(a, b) {
        var d = "?q=" + a.tripId + "&vcId=" + a.vcId,
            d = c.urls.endpoints.getVcTripInfo() + d;
        e.getJSON(d, function(a) {
            c.gadget.cart.getCart(function(c) {
                b({
                    tripInfo: a,
                    cartInfo: c
                })
            })
        })
    };
    a.requiredSjpChecksMet = function() {
        return !0
    };
    a.buildPlannerModel = function() {
        return {}
    };
    a.getPlannerHtml = function() {
        return {
            "div.planner-window": {
                "div.left-container": {
                    "div.cart-container": {
                        _attr: {
                            id: "CartGadget"
                        }
                    }
                },
                "div.right-container": {
                    "div#search-container": {},
                    "div.tabs-container": {
                        "ul.nav nav-tabs": [{
                            "li.active": {
                                a: {
                                    "": "Map",
                                    _attr: {
                                        rel: "#MapContainer"
                                    }
                                }
                            },
                            li: {
                                a: {
                                    "": "Products",
                                    _attr: {
                                        rel: "#RegionGadget"
                                    }
                                }
                            }
                        }]
                    },
                    "div.map-container tab-window": {
                        _attr: {
                            id: "MapContainer"
                        }
                    },
                    "div.region-gadget-container tab-window hidden": {
                        _attr: {
                            id: "RegionGadget"
                        }
                    }
                },
                "div.clear": {}
            }
        }
    };
    a.wireUpEvents = function() {}
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {
            getHtml: function(a) {
                return e({
                    "div.products-container": {
                        "div.product-info": {
                            h1: a.Name,
                            p: a.Description
                        },
                        "div#tp-be-gadget": {}
                    }
                })
            },
            attachRegionGadget: function(a, e, b) {
                c.gadget.region("#tp-be-gadget", {
                    vcID: e.vcId,
                    collapseRefineTools: !1,
                    defaultSort: "instant",
                    disabledTypes: ["tours", "event", "carhire", "events", "packages"],
                    itemDetailPageURL: "/src/spa/operator/",
                    showDetailsInline: !0,
                    showMap: !1,
                    stageId: b.StageId,
                    noPeriod: 1,
                    embedSearch: !1,
                    showRefineTools: !1
                })
            },
            attachOperatorGadget: function(a,
                e, b) {
                c.gadget.operator(a, {
                    vcID: e.vcId,
                    type: "accom",
                    productID: b.AccomItems[0].CustomerId,
                    stageId: b.StageId,
                    noPeriod: 1,
                    itemDetailsOptions: {
                        defaultDaysFromToday: 4,
                        stageId: b.StageId,
                        noPeriod: 1,
                        embedSearch: !1
                    },
                    useImageSlideShow: {
                        jQueryObject: $j
                    }
                })
            }
        };
    a.render = function(c, f, b) {
        c = e(c);
        c.empty();
        c.append(a.getHtml(b));
        c = b.AccomItems.length;
        c > 1 ? a.attachRegionGadget("#tp-be-gadget", f, b) : c === 1 && a.attachOperatorGadget("#tp-be-gadget", f, b)
    };
    c.gadget.tripPlanner.productView = {
        render: a.render
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        g = g.BE,
        c = {
            location: void 0
        };
    c.attachTabsEvents = function(a) {
        a.find(".nav a").bind("click", function() {
            var a = e(this).attr("rel");
            a !== "#RegionGadget" && c.ShowTab(a)
        })
    };
    c.hideAllWindows = function() {
        c.location.find(".tab-window").removeClass("active")
    };
    c.ShowTab = function(a) {
        var g = c.location.find(".tab-window"),
            f = c.location.find(".nav li");
        g.addClass("hidden");
        f.removeClass("active");
        c.location.find(a).removeClass("hidden");
        for (g = 0; g < f.length; g++) {
            var b = e(f[g]);
            b.find("a").attr("rel") ===
                a && b.addClass("active")
        }
    };
    c.showProductsTab = function() {
        c.ShowTab("#RegionGadget")
    };
    c.init = function(a) {
        c.location = e(a);
        c.attachTabsEvents(c.location)
    };
    g.gadget.tripPlanner.tabs = {
        init: c.init,
        attachEvents: c.attachTabsEvents,
        showMapTab: function() {
            c.ShowTab("#MapContainer")
        },
        showProductsTab: function() {
            c.ShowTab("#RegionGadget")
        }
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE,
        a = {},
        h = c.gadget.tripPlanner.tabs;
    a.renderMap = function(c, b) {
        var d = "mapsCB" + e._int.generateID();
        g[d] = function() {
            a.initialiseMap(c, b)
        };
        e("head").append({
            script: {
                _attr: {
                    type: "text/javascript",
                    src: "//maps.google.com/maps/api/js?sensor=false&callback=" + d
                }
            }
        })
    };
    a.mapIcons = {};
    a.mapInfoWindows = {};
    a.mapHandle = void 0;
    a.options = {};
    a.flightPath = void 0;
    a.flightPathCanTravelTo = [];
    a.closeAllInfoWindows = function() {
        for (var c in a.mapInfoWindows) a.mapInfoWindows.hasOwnProperty(c) &&
            a.mapInfoWindows[c].close()
    };
    a.buildMapInfoWindow = function(a, b, d, g) {
        if (!g) return e({
            "div.info-window-container": {
                "div.info-window-content": "You can not travel here at this time."
            }
        })[0];
        return e({
            "div.info-window-container": {
                "div.info-window-content": {
                    "h3.be-google-map-point-title": b.Name,
                    "p.1": function() {
                        var a = b.Description || "";
                        a.length > 300 && (a = a.substr(1, 300) + "...");
                        return a
                    }(),
                    p: function() {
                        if (d) return {
                            "div#tp-item-details": {}
                        };
                        return {
                            button: {
                                span: "View",
                                _events: {
                                    click: function() {
                                        c.gadget.tripPlanner.productView.render("#RegionGadget",
                                            a, b);
                                        h.showProductsTab()
                                    }
                                }
                            }
                        }
                    }()
                }
            }
        })[0]
    };
    a.canTravelToStage = function(a, b, d) {
        if (!d && a.IsStartStage) return !0;
        if (!d || !c.util.exists(b)) return !1;
        if (!c.util.exists(b.LinkedStages)) return !1;
        return c.util.existsInArray(a, b.LinkedStages, function(a, b) {
            return a.StageId === b.LinkedStageId
        })
    };
    a.attachStageIcon = function(f, b, d, g, h, k) {
        var l = new google.maps.LatLng(d.Latitude, d.Longitude),
            m = d.AccomItems.length === 1 && d.AccomItems[0].RoomItems.length === 1,
            o = a.canTravelToStage(d, g, h),
            q = a.buildStageMarker(f, b, l, o, d, k),
            s =
            new google.maps.InfoWindow({
                content: a.buildMapInfoWindow(b, d, m, o)
            });
        google.maps.event.addListener(q, "click", function() {
            a.closeAllInfoWindows();
            c.gadget.cart.getCart(function(a) {
                f.setCenter(q.getPosition());
                s.open(f, q);
                c.gadget.tripPlanner.search.render({
                    vcId: b.vcId,
                    canChooseArrivalDate: d.CanChooseArrivalDate
                }, a);
                m && o && (e("#tp-item-details").empty(), c.gadget.details("#tp-item-details", {
                    vcID: b.vcId,
                    stageId: d.StageId,
                    productID: d.AccomItems[0].CustomerId,
                    type: "accom",
                    noPeriod: 1,
                    embedSearch: !1
                }))
            })
        });
        a.mapIcons[d.StageId] = q;
        a.mapInfoWindows[d.StageId] = s;
        return l
    };
    a.buildStageMarker = function(a, b, c, e, g, h) {
        b = "//chart.apis.google.com/chart?chst=d_map_pin_letter_withshadow&chld=%E2%80%A2|" + (!e ? "CCCCCC" : "29A329");
        if (h && typeof g.ImageAdded != "undefined" && g.ImageAdded.length > 0) b = g.ImageAdded;
        else if (!e && typeof g.ImageUnavailable != "undefined" && g.ImageUnavailable.length > 0) b = g.ImageUnavailable;
        else if (e && typeof g.ImageAvailable != "undefined" && g.ImageAvailable.length > 0) b = g.ImageAvailable;
        g.IsEndStage && (b = "/src/_shared/img/end.png");
        e = new google.maps.MarkerImage(b, new google.maps.Size(60, 60), new google.maps.Point(0, 0), new google.maps.Point(10, 35));
        return new google.maps.Marker({
            position: c,
            map: a,
            title: g.Name,
            icon: e
        })
    };
    a.removeAllMarkers = function() {
        for (var c in a.mapIcons) a.mapIcons.hasOwnProperty(c) && a.mapIcons[c].setMap(null);
        a.mapIcons = [];
        a.mapInfoWindows = []
    };
    a.getCartStageContent = function(a) {
        var b = [];
        c.util.exists(a.cartcontent) && (b = c.util.grep(a.cartcontent, function(a) {
            return c.util.exists(a.stage)
        }).sort(function(a, b) {
            return a.stage.sort -
                b.stage.sort
        }));
        return b
    };
    a.getStageInfo = function(a, b) {
        if (c.util.exists(a) && c.util.exists(b) && c.util.exists(a.Stages)) return c.util.last(c.util.grep(a.Stages, function(a) {
            return a.StageId === b
        }))
    };
    a.attachStagesToMap = function(e, b, d) {
        c.gadget.cart.getCart(function(g) {
            for (var g = a.getCartStageContent(g), h = c.util.last(g), k = c.util.exists(h) ? h.stage.stageId : void 0, k = a.getStageInfo(d, k), h = c.util.exists(h), l = new google.maps.LatLngBounds, m = 0; m < d.Stages.length; m++) {
                var o = d.Stages[m],
                    q = a.isStageInCart(g, o.StageId),
                    o = a.attachStageIcon(e, b, o, k, h, q);
                l.extend(o)
            }
            e.fitBounds(l);
            a.attachPolyLines(g, k)
        })
    };
    a.isStageInCart = function(a, b) {
        if (a.length === 0) return !1;
        for (var c = 0; c < a.length; c++)
            if (a[c].stage.stageId === b) return !0;
        return !1
    };
    a.drawPoly = function(e, b, d, g, h, k, l) {
        c.util.exists(h) || (h = {});
        !k && c.util.exists(g) ? e.route({
            origin: b,
            destination: d,
            travelMode: g
        }, function(e, f) {
            if (f === google.maps.DirectionsStatus.OK) {
                var g = [];
                if (e.routes[0].overview_path.length > 0) g = e.routes[0].overview_path;
                g = new google.maps.Polyline(c.util.mergeObjects({
                        path: g
                    },
                    h))
            } else g = new google.maps.Polyline(c.util.mergeObjects({
                path: [b, d]
            }, h));
            a.flightPathCanTravelTo.push(g);
            g.setMap(a.mapHandle)
        }) : (e = k ? new google.maps.Polyline(c.util.mergeObjects({
            path: l
        }, h)) : new google.maps.Polyline(c.util.mergeObjects({
            path: [b, d]
        }, h)), a.flightPathCanTravelTo.push(e), e.setMap(a.mapHandle))
    };
    a.convertCustomLatLongs = function(a) {
        return c.util.map(a, function(a) {
            return new google.maps.LatLng(a.Latitude, a.Longitude)
        })
    };
    a.attachPolyLines = function(e, b) {
        var d = new google.maps.DirectionsService,
            g = [google.maps.TravelMode.WALKING, google.maps.TravelMode.DRIVING, void 0];
        if (c.util.exists(a.flightPath)) a.flightPath.setMap(null), a.flightPaht = void 0;
        c.util.each(a.flightPathCanTravelTo, function(a, b) {
            b.setMap(null)
        });
        a.flightPathCanTravelTo = [];
        for (var h = c.util.map(e, function(b) {
                b = a.getStageInfo(c.gadget.tripPlanner.tripData, b.stage.stageId);
                return {
                    info: b,
                    latLng: new google.maps.LatLng(b.Latitude, b.Longitude)
                }
            }), k = 0; k < h.length; k++) {
            var l = h[k],
                m = h[k + 1];
            if (c.util.exists(m)) {
                var o = void 0,
                    q = !1,
                    s = [],
                    p = c.util.last(c.util.grep(l.info.LinkedStages,
                        function(a) {
                            return a.LinkedStageId === m.info.StageId
                        }));
                c.util.exists(p) && (o = g[p.TravelType], s = (q = p.TravelType === 3) ? a.convertCustomLatLongs(p.CustomLatLongs) : []);
                a.drawPoly(d, l.latLng, m.latLng, o, {
                    strokeColor: "#009933"
                }, q, s)
            }
        }
        c.util.exists(b) && (h = c.util.map(b.LinkedStages, function(d) {
            var e = a.getStageInfo(c.gadget.tripPlanner.tripData, d.LinkedStageId),
                f = a.getStageInfo(c.gadget.tripPlanner.tripData, b.StageId),
                h = void 0,
                k = d.TravelType === 3,
                d = a.convertCustomLatLongs(d.CustomLatLongs),
                f = c.util.last(c.util.grep(f.LinkedStages,
                    function(a) {
                        return a.LinkedStageId === e.StageId
                    }));
            c.util.exists(f) && (h = g[f.TravelType]);
            return {
                travelMode: h,
                coordinates: [new google.maps.LatLng(b.Latitude, b.Longitude), new google.maps.LatLng(e.Latitude, e.Longitude)],
                isCustom: k,
                customLatLongs: d
            }
        }), c.util.each(h, function(b, c) {
            a.drawPoly(d, c.coordinates[0], c.coordinates[1], c.travelMode, {
                strokeColor: "#0033CC",
                strokeOpacity: 0,
                icons: [{
                    icon: {
                        path: "M 0,-1 0,1",
                        strokeOpacity: 1,
                        scale: 2
                    },
                    offset: "0",
                    repeat: "10px"
                }]
            }, c.isCustom, c.customLatLongs)
        }))
    };
    a.initialiseMap =
        function(f, b) {
            var d = document.getElementById(f),
                g = {
                    center: new google.maps.LatLng(b.tripInfo.Latitude, b.tripInfo.Longitude),
                    zoom: 14,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                },
                d = new google.maps.Map(d, g);
            a.mapHandle = d;
            a.options = b;
            a.attachStagesToMap(d, b, b.tripInfo);
            e.event.subscribe("cart.save.complete", function() {
                setTimeout(function() {
                    c.gadget.cart.getCart(function(d) {
                        c.gadget.tripPlanner.search.render({
                            vcId: b.vcId
                        }, d);
                        c.gadget.tripPlanner.tabs.showMapTab();
                        a.removeAllMarkers();
                        a.drawMarkers()
                    })
                }, 200)
            })
        };
    a.drawMarkers = function() {
        a.attachStagesToMap(a.mapHandle, a.options, a.options.tripInfo)
    };
    c.gadget.tripPlanner.map = {
        renderMap: a.renderMap,
        removeAllMarkers: a.removeAllMarkers,
        attachAllMarkers: a.drawMarkers,
        mapIcons: a.mapIcons
    }
})(window);
(function(g) {
    var e = g.wisDOM,
        c = g.BE;
    c.gadget.tripPlanner.search = {
        render: function(a, g) {
            e("#search-container").empty();
            var f = {
                    vcID: a.vcId,
                    forcePeriod: 1
                },
                b = c.util.last(g.cartcontent);
            if (c.util.exists(b) && (b = b.startdate, b.setDate(b.getDate() + 1), b = e.datePicker.encode(b, "DAY DD/MM/YYYY"), !a.canChooseArrivalDate)) f.disableDatePicker = !0, f.forceDate = b;
            c.gadget.search.embed(f).appendTo("#search-container");
            f = e("#search-container");
            f.find(".product").addClass("hidden");
            f.find("div.search-gadget.BE .button").addClass("hidden");
            f.find("div.search-gadget.BE .period").addClass("hidden")
        }
    }
})(window);
